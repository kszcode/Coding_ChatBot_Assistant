[
    {
        "content": "I want this script to prompt the user with German language.\nFind all relevant texts.\n\nAs a positive example consider:\n$email.after(`<label id=\"email-error\" class=\"error\" for=\"email\">Please enter a valid email address</label>`); .\n\nThis is one of the instructions that I want you to extract.\n\nPlease exclude the following functions: logThisState(), outputLocalizedText(), ga(), window.epSubs.track*()\nthese are negative examples because they are used for logging which is OK to be in English.\n\nNow please extract all instructions that could show the user english text.",
        "role": "user"
    },
    {
        "content": "As a JavaScript Code Virtuoso:\n- If the user provides instructions:\n- Ask for clarification if instructions are unclear.\n- Otherwise, write JavaScript code following user instructions.\n- Preserve or improve any comments in the code.\n- Follow JavaScript's best practices and coding standards.\n- Provide explanations of the code if the user asks.\n- If the user provides a code scratchpad:\n- If it's blank, wait for the user's request to write code.\n- If it contains code, use your best judgment to decide whether to modify the existing code or use it as reference.\n\nCoding scratchpad:\n```typescript\n\n/**\n * Communicate with user that they already have a subscription\n * @param {string} subscription_type\n */\nfunction handleExistingSubscription(subscription_type: number) {\n\n    $('#customer-name-container').slideUp();\n\n    $('#payment-stripe').slideUp();\n    $('#payment-using-hosted-field-integration').slideUp();\n    $('.cb-main-footer').slideUp();\n    logThisState(\"handleExistingSubscription: subscription_type\", subscription_type);\n    logThisState(\"handleExistingSubscription: cpState.isLoggedIn\", cpState.isLoggedIn);\n    if (digital_prod_id.includes(subscription_type)) {\n        $('#checkout-form .loading-throbber-wrapper').hide();\n        if (cpState.isLoggedIn) {\n\n            $('#existing-sub').slideDown();\n            $('.read-footer').slideDown();\n            logThisState(\"handleExistingSubscription: show you have an existing subscription and you are logged in\");\n        } else {\n            $('#existing-sub-logged-out').slideDown();\n            const MSG_SHOW_EXISTING_SUBSCRIPTION_NOT_LOGGED_IN = \"handleExistingSubscription: show you have an existing subscription and you are NOT logged in\";\n            logThisState(MSG_SHOW_EXISTING_SUBSCRIPTION_NOT_LOGGED_IN);\n        }\n    }\n    $('#resetpw').on('click',\n        async function (e) {\n            e.preventDefault();\n            const checkoutData = cpState.checkoutData;\n            const customerData = cpState.customerData;\n            const email = (checkoutData.customer && checkoutData.customer.email) || customerData.email;\n            await subscriptionAPIs.requestResetPassword(email);\n            $('#reset-success').slideDown();\n        }\n    );\n    $('#go-to-eet').on('click',\n        function (e) {\n            e.preventDefault();\n            window.location.href = \"https://theepochtimes.com\";\n        }\n    );\n}\nfunction getMoneyString(amountInCents: number) {\n    if (amountInCents % 100 > 0) {\n        return (amountInCents / 100).toFixed(2);\n    } else {\n        return (amountInCents / 100).toString();\n    }\n}\nfunction isStripePaymentSelected() {\n    let gatewayFound = 2;\n    if (cpState &&\n        cpState.offerDetail &&\n        cpState.offerDetail.offer_detail &&\n        cpState.offerDetail.offer_detail.plan &&\n        cpState.offerDetail.offer_detail.plan.product &&\n        cpState.offerDetail.offer_detail.plan.product.default_gateway\n    ) {\n        gatewayFound = cpState.offerDetail.offer_detail.plan.product.default_gateway;\n        logThisState(\"isStripePaymentSelected: gatewayFound --- Btest: \", gatewayFound);\n    } else {\n        logError(\"Could not read gatewayFound --- Btest \", cpState.offerDetail.offer_detail.plan.product.default_gateway);\n    }\n    const stripeFound = ((gatewayFound == 2) || (gatewayFound == 3))\n    logThisState(\"isStripePaymentSelected: stripeFound: \", stripeFound);\n    logThisState(\"isStripePaymentSelected: gatewayFound: \", gatewayFound);\n    return stripeFound;\n}\nfunction getLocalizedText(lang: string, messageKey: string): string {\n    if (localizedMessages[lang] && localizedMessages[lang][messageKey]) {\n        return localizedMessages[lang][messageKey];\n    } else {\n        console.warn(`The key \"${messageKey}\" does not exist in the language \"${lang}\"`);\n        return '';\n    }\n}\nfunction outputLocalizedText(selector: string, messageKey: string, lang: string = currentLanguage): void {\n    $(selector).text(getLocalizedText(lang, messageKey));\n}\n\n\n```",
        "role": "system"
    }
]