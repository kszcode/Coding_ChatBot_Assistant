[
    {
        "content": "I want this script to prompt the user with German language.\nFind all relevant texts.\n\nAs a positive example consider:\n$email.after(`<label id=\"email-error\" class=\"error\" for=\"email\">Please enter a valid email address</label>`); .\n\nThis is one of the instructions that I want you to extract.\n\nPlease exclude the following functions: logThisState(), outputLocalizedText(), ga(), window.epSubs.track*()\nthese are negative examples because they are used for logging which is OK to be in English.\n\nNow please extract all instructions that could show the user english text.",
        "role": "user"
    },
    {
        "content": "As a JavaScript Code Virtuoso:\n- If the user provides instructions:\n- Ask for clarification if instructions are unclear.\n- Otherwise, write JavaScript code following user instructions.\n- Preserve or improve any comments in the code.\n- Follow JavaScript's best practices and coding standards.\n- Provide explanations of the code if the user asks.\n- If the user provides a code scratchpad:\n- If it's blank, wait for the user's request to write code.\n- If it contains code, use your best judgment to decide whether to modify the existing code or use it as reference.\n\nCoding scratchpad:\n```typescript\n\nasync function handleSurveySubmit(token: string) {\n    let siteId = window.configSiteID;\n\n    const form = $('#setpw-form');\n    form.removeClass('was-validated');\n    $(\"#setpw-form input\").each(function () {\n        $(this).removeClass(\"is-invalid\");\n    });\n    if (!$('#success_survey_answer').val()) {\n        $(\"#success_survey_answer\", form).addClass(\"is-invalid\");\n        $(\"#success_survey_answer\", form)[0].scrollIntoView();\n        return;\n    }\n\n    $('#setpw-form #create-password-btn').hide();\n    $('#setpw-form .loading-throbber-wrapper').fadeIn('fast');\n    try {\n\n        let surveyResponse = $('#success_survey_answer').val(),\n            surveyData = {\n                'response': surveyResponse\n            },\n            data = {\n                site: siteId,\n                email: $('#email').val(),\n                survey: JSON.stringify(surveyData)\n            };\n\n        await $.ajax({\n            method: \"POST\",\n            type: \"POST\",\n            url: `https://aitest.youmaker.com/survey/save?token=${token}`,\n            contentType: \"application/json\",\n            dataType: \"json\",\n            data: JSON.stringify(data),\n            success: function (response) {\n                return;\n            },\n            error: function (response) {\n                return;\n            }\n        });\n    } catch (e) {\n        ga('send', 'event', 'Digital Checkout Page', 'Unsuccessful survey response send', e);\n    } finally {\n        try {\n            let fields = {\n                subscription_key: cpState.newSubData && cpState.newSubData.subscription_key,\n                answer: $('#success_survey_answer').val()\n            }\n\n            let urlSaveChannelSource = window.configConductorUrl + 'save_referrer_sub_channels' + `?site_id=${siteId}`;\n            logThisState(\"handleSurveySubmit: urlSaveChannelSource=\" + urlSaveChannelSource + \" fields=\", JSON.stringify(fields));\n\n            await $.ajax({\n                method: \"POST\",\n                type: \"POST\",\n                url: urlSaveChannelSource,\n                contentType: \"application/json\",\n                dataType: \"json\",\n                data: JSON.stringify(fields),\n                success: function (response) {\n                    logThisState('handleSurveySubmit: send survey response success: ', response);\n                    handleSuccessPageRedirect();\n                },\n                error: function (response) {\n                    logThisState('handleSurveySubmit: send survey response fail: ', response);\n                    handleSuccessPageRedirect();\n                }\n            });\n\n        } catch (e) {\n            ga('send', 'event', 'Print Checkout Page', 'Unsuccessful survey response send', e);\n        } finally {\n            if (typeof window.actionAfterThankYou == \"function\") {\n                try {\n                    window.actionAfterThankYou();\n                } catch (e) {\n                    continueReadingRedirect();\n                }\n            } else {\n                continueReadingRedirect();\n            }\n        }\n    }\n}\nfunction handleSuccessPageRedirect() {\n    top.window.location.href = \"https://dev-profile.epochtimes.de/de/?start=on-boarding\";\n}\n/**\n * set up the capture of user data for each relevant input field\n */\nfunction setupBehaviourTracking() {\n    window.fieldBackup = {}\n\n    $('#checkout-form [name=\"email\"]').focusout(() => {\n        let email = $('#checkout-form [name=\"email\"]').val() || \"\";\n        $.ajax({\n            type: \"POST\",\n            url: \"https://subscribe.theepochtimes.com/api/email.php?action=verify\",\n            data: {\n                email: email,\n                emailoversight: false\n            },\n            dataType: 'json',\n            success: function (response) {\n                logThisState(\"setupBehaviourTracking: success verifying email: \" + email + \", got response\", response)\n                if (response.valid) {\n\n                }\n            },\n            error: function (response) {\n                logThisState(\"setupBehaviourTracking: error verifying email: \" + email + \", got response\", response)\n            }\n        });\n    });\n\n\n\n\n\n\n\n\n\n\n}\n\n//\n```",
        "role": "system"
    }
]