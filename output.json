{
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/": {
        "chat.py": {
            "list-of-functions": [
                "create_log_file",
                "save_request_as_human_readable_text",
                "save_response_as_human_readable_text",
                "pretty_print_json",
                "save_json_log",
                "save_content_to_file",
                "read_file_content",
                "fetch_chatbot_response",
                "handle_error",
                "perform_chatbot_conversation",
                "multi_line_input",
                "get_user_input",
                "print_chatbot_response",
                "main",
                "__init__"
            ]
        },
        "extract-function-names.py": {
            "list-of-functions": [
                "get_functions",
                "scan_directory",
                "main"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/async_timeout/": {
        "__init__.py": {
            "list-of-functions": [
                "timeout",
                "timeout_at",
                "__init__",
                "__enter__",
                "__exit__",
                "expired",
                "deadline",
                "reject",
                "_reject",
                "shift",
                "update",
                "_reschedule",
                "_do_enter",
                "_do_exit",
                "_on_timeout",
                "_current_task",
                "_current_task",
                "_get_running_loop",
                "_get_running_loop"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/aiohttp/": {
        "web_ws.py": {
            "list-of-functions": [
                "__bool__",
                "__init__",
                "_cancel_heartbeat",
                "_reset_heartbeat",
                "_send_heartbeat",
                "_pong_not_received",
                "_handshake",
                "_pre_start",
                "_post_start",
                "can_prepare",
                "closed",
                "close_code",
                "ws_protocol",
                "compress",
                "exception",
                "__aiter__",
                "_cancel"
            ]
        },
        "worker.py": {
            "list-of-functions": [
                "__init__",
                "init_process",
                "run",
                "_wait_next_notify",
                "_notify_waiter_done",
                "init_signals",
                "handle_quit",
                "handle_abort",
                "_create_ssl_context",
                "_get_valid_log_format",
                "init_process",
                "init_process"
            ]
        },
        "multipart.py": {
            "list-of-functions": [
                "parse_content_disposition",
                "content_disposition_filename",
                "is_token",
                "is_quoted",
                "is_rfc5987",
                "is_extended_param",
                "is_continuous_param",
                "unescape",
                "__init__",
                "__aiter__",
                "at_eof",
                "__init__",
                "__aiter__",
                "at_eof",
                "decode",
                "_decode_content",
                "_decode_content_transfer",
                "get_charset",
                "name",
                "filename",
                "__init__",
                "__init__",
                "__aiter__",
                "from_response",
                "at_eof",
                "_get_part_reader",
                "_get_boundary",
                "__init__",
                "__enter__",
                "__exit__",
                "__iter__",
                "__len__",
                "__bool__",
                "_boundary_value",
                "boundary",
                "append",
                "append_payload",
                "append_json",
                "append_form",
                "size",
                "__init__",
                "enable_encoding",
                "enable_compression"
            ]
        },
        "web_response.py": {
            "list-of-functions": [
                "json_response",
                "__init__",
                "prepared",
                "task",
                "status",
                "chunked",
                "compression",
                "reason",
                "set_status",
                "keep_alive",
                "force_close",
                "body_length",
                "output_length",
                "enable_chunked_encoding",
                "enable_compression",
                "headers",
                "cookies",
                "set_cookie",
                "del_cookie",
                "content_length",
                "content_length",
                "content_type",
                "content_type",
                "charset",
                "charset",
                "last_modified",
                "last_modified",
                "etag",
                "etag",
                "_generate_content_type_header",
                "__repr__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "__hash__",
                "__eq__",
                "__init__",
                "body",
                "body",
                "text",
                "text",
                "content_length",
                "content_length",
                "_compress_body"
            ]
        },
        "client_ws.py": {
            "list-of-functions": [
                "__init__",
                "_cancel_heartbeat",
                "_reset_heartbeat",
                "_send_heartbeat",
                "_pong_not_received",
                "closed",
                "close_code",
                "protocol",
                "compress",
                "client_notakeover",
                "get_extra_info",
                "exception",
                "__aiter__"
            ]
        },
        "test_utils.py": {
            "list-of-functions": [
                "get_unused_port_socket",
                "get_port_socket",
                "unused_port",
                "unittest_run_loop",
                "loop_context",
                "setup_test_loop",
                "teardown_test_loop",
                "_create_app_mock",
                "_create_transport",
                "make_mocked_request",
                "make_mocked_coro",
                "__init__",
                "make_url",
                "started",
                "closed",
                "handler",
                "__enter__",
                "__exit__",
                "__init__",
                "__init__",
                "__init__",
                "host",
                "port",
                "server",
                "app",
                "session",
                "make_url",
                "request",
                "get",
                "post",
                "options",
                "head",
                "put",
                "patch",
                "delete",
                "ws_connect",
                "__enter__",
                "__exit__",
                "get_app",
                "setUp",
                "tearDown",
                "get_dict",
                "set_dict",
                "get_extra_info"
            ]
        },
        "tracing.py": {
            "list-of-functions": [
                "__init__",
                "trace_config_ctx",
                "freeze",
                "on_request_start",
                "on_request_chunk_sent",
                "on_response_chunk_received",
                "on_request_end",
                "on_request_exception",
                "on_request_redirect",
                "on_connection_queued_start",
                "on_connection_queued_end",
                "on_connection_create_start",
                "on_connection_create_end",
                "on_connection_reuseconn",
                "on_dns_resolvehost_start",
                "on_dns_resolvehost_end",
                "on_dns_cache_hit",
                "on_dns_cache_miss",
                "on_request_headers_sent",
                "__init__",
                "__call__"
            ]
        },
        "web_exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__bool__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "web_middlewares.py": {
            "list-of-functions": [
                "middleware",
                "normalize_path_middleware",
                "_fix_request_current_app"
            ]
        },
        "web.py": {
            "list-of-functions": [
                "_cancel_tasks",
                "run_app",
                "main"
            ]
        },
        "http_exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "web_app.py": {
            "list-of-functions": [
                "__init__",
                "__init_subclass__",
                "__eq__",
                "__getitem__",
                "_check_frozen",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "loop",
                "_set_loop",
                "pre_frozen",
                "pre_freeze",
                "frozen",
                "freeze",
                "debug",
                "_reg_subapp_signals",
                "add_subapp",
                "_add_subapp",
                "add_domain",
                "add_routes",
                "on_response_prepare",
                "on_startup",
                "on_shutdown",
                "on_cleanup",
                "cleanup_ctx",
                "router",
                "middlewares",
                "_make_handler",
                "make_handler",
                "_make_request",
                "_prepare_middleware",
                "__call__",
                "__repr__",
                "__bool__",
                "exceptions",
                "__init__",
                "__setattr__",
                "reg_handler"
            ]
        },
        "streams.py": {
            "list-of-functions": [
                "__init__",
                "__aiter__",
                "__init__",
                "__aiter__",
                "__aiter__",
                "iter_chunked",
                "iter_any",
                "iter_chunks",
                "__init__",
                "__repr__",
                "get_read_buffer_limits",
                "exception",
                "set_exception",
                "on_eof",
                "feed_eof",
                "is_eof",
                "at_eof",
                "unread_data",
                "feed_data",
                "begin_http_chunk_receiving",
                "end_http_chunk_receiving",
                "read_nowait",
                "_read_nowait_chunk",
                "_read_nowait",
                "__init__",
                "exception",
                "set_exception",
                "on_eof",
                "feed_eof",
                "is_eof",
                "at_eof",
                "feed_data",
                "read_nowait",
                "__init__",
                "__len__",
                "is_eof",
                "at_eof",
                "exception",
                "set_exception",
                "feed_data",
                "feed_eof",
                "__aiter__",
                "__init__",
                "feed_data"
            ]
        },
        "web_protocol.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "keepalive_timeout",
                "connection_made",
                "connection_lost",
                "set_parser",
                "eof_received",
                "data_received",
                "keep_alive",
                "close",
                "force_close",
                "log_access",
                "log_debug",
                "log_exception",
                "_process_keepalive",
                "handle_error",
                "_make_error_handler"
            ]
        },
        "log.py": {
            "list-of-functions": []
        },
        "client.py": {
            "list-of-functions": [
                "request",
                "__init__",
                "__init_subclass__",
                "__del__",
                "request",
                "_build_url",
                "ws_connect",
                "_prepare_headers",
                "get",
                "options",
                "head",
                "post",
                "put",
                "patch",
                "delete",
                "closed",
                "connector",
                "cookie_jar",
                "version",
                "requote_redirect_url",
                "requote_redirect_url",
                "loop",
                "timeout",
                "headers",
                "skip_auto_headers",
                "auth",
                "json_serialize",
                "connector_owner",
                "raise_for_status",
                "auto_decompress",
                "trust_env",
                "trace_configs",
                "detach",
                "__enter__",
                "__exit__",
                "__init__",
                "send",
                "throw",
                "close",
                "__await__",
                "__iter__",
                "__init__",
                "__setattr__"
            ]
        },
        "web_urldispatcher.py": {
            "list-of-functions": [
                "_quote_path",
                "_unquote_path",
                "_requote_path",
                "__init__",
                "name",
                "canonical",
                "url_for",
                "add_prefix",
                "get_info",
                "freeze",
                "raw_match",
                "__init__",
                "method",
                "handler",
                "name",
                "resource",
                "get_info",
                "url_for",
                "__init__",
                "handler",
                "route",
                "expect_handler",
                "http_exception",
                "get_info",
                "apps",
                "add_app",
                "current_app",
                "set_current_app",
                "freeze",
                "__repr__",
                "__init__",
                "http_exception",
                "__repr__",
                "__init__",
                "add_route",
                "register_route",
                "_match",
                "__len__",
                "__iter__",
                "__init__",
                "canonical",
                "freeze",
                "add_prefix",
                "_match",
                "raw_match",
                "get_info",
                "url_for",
                "__repr__",
                "__init__",
                "canonical",
                "add_prefix",
                "_match",
                "raw_match",
                "get_info",
                "url_for",
                "__repr__",
                "__init__",
                "canonical",
                "add_prefix",
                "raw_match",
                "__init__",
                "url_for",
                "_get_file_hash",
                "get_info",
                "set_options_route",
                "__len__",
                "__iter__",
                "_directory_as_html",
                "__repr__",
                "__init__",
                "add_prefix",
                "url_for",
                "get_info",
                "__len__",
                "__iter__",
                "__repr__",
                "get_info",
                "canonical",
                "__init__",
                "canonical",
                "validation",
                "match_domain",
                "get_info",
                "__init__",
                "canonical",
                "match_domain",
                "__init__",
                "canonical",
                "get_info",
                "__repr__",
                "__init__",
                "__repr__",
                "name",
                "url_for",
                "get_info",
                "__init__",
                "url_for",
                "name",
                "get_info",
                "status",
                "reason",
                "__repr__",
                "__await__",
                "_raise_allowed_methods",
                "__init__",
                "__len__",
                "__iter__",
                "__contains__",
                "__init__",
                "__len__",
                "__iter__",
                "__contains__",
                "__init__",
                "__iter__",
                "__len__",
                "__contains__",
                "__getitem__",
                "resources",
                "routes",
                "named_resources",
                "register_resource",
                "add_resource",
                "add_route",
                "add_static",
                "add_head",
                "add_options",
                "add_get",
                "add_post",
                "add_put",
                "add_patch",
                "add_delete",
                "add_view",
                "freeze",
                "add_routes"
            ]
        },
        "web_request.py": {
            "list-of-functions": [
                "__init__",
                "clone",
                "task",
                "protocol",
                "transport",
                "writer",
                "message",
                "rel_url",
                "loop",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "secure",
                "forwarded",
                "scheme",
                "method",
                "version",
                "host",
                "remote",
                "url",
                "path",
                "path_qs",
                "raw_path",
                "query",
                "query_string",
                "headers",
                "raw_headers",
                "if_modified_since",
                "if_unmodified_since",
                "_etag_values",
                "_if_match_or_none_impl",
                "if_match",
                "if_none_match",
                "if_range",
                "keep_alive",
                "cookies",
                "http_range",
                "content",
                "has_body",
                "can_read_body",
                "body_exists",
                "get_extra_info",
                "__repr__",
                "__eq__",
                "__bool__",
                "_cancel",
                "__init__",
                "clone",
                "match_info",
                "app",
                "config_dict",
                "__setattr__"
            ]
        },
        "http_websocket.py": {
            "list-of-functions": [
                "_websocket_mask_python",
                "ws_ext_parse",
                "ws_ext_gen",
                "json",
                "__init__",
                "__str__",
                "__init__",
                "feed_eof",
                "feed_data",
                "_feed_data",
                "parse_frame",
                "__init__",
                "_write"
            ]
        },
        "client_proto.py": {
            "list-of-functions": [
                "__init__",
                "upgraded",
                "should_close",
                "force_close",
                "close",
                "is_connected",
                "connection_lost",
                "eof_received",
                "pause_reading",
                "resume_reading",
                "set_exception",
                "set_parser",
                "set_response_params",
                "_drop_timeout",
                "_reschedule_timeout",
                "_on_read_timeout",
                "data_received"
            ]
        },
        "locks.py": {
            "list-of-functions": [
                "__init__",
                "set",
                "cancel"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "web_runner.py": {
            "list-of-functions": [
                "_raise_graceful_exit",
                "__init__",
                "name",
                "__init__",
                "name",
                "__init__",
                "name",
                "__init__",
                "name",
                "__init__",
                "name",
                "__init__",
                "server",
                "addresses",
                "sites",
                "_reg_site",
                "_check_site",
                "_unreg_site",
                "__init__",
                "__init__",
                "app"
            ]
        },
        "web_server.py": {
            "list-of-functions": [
                "__init__",
                "connections",
                "connection_made",
                "connection_lost",
                "_make_request",
                "__call__"
            ]
        },
        "base_protocol.py": {
            "list-of-functions": [
                "__init__",
                "connected",
                "pause_writing",
                "resume_writing",
                "pause_reading",
                "resume_reading",
                "connection_made",
                "connection_lost"
            ]
        },
        "payload.py": {
            "list-of-functions": [
                "get_payload",
                "register_payload",
                "__init__",
                "__call__",
                "__init__",
                "get",
                "register",
                "__init__",
                "size",
                "filename",
                "headers",
                "_binary_headers",
                "encoding",
                "content_type",
                "set_content_disposition",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "size",
                "size",
                "size",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "client_reqrep.py": {
            "list-of-functions": [
                "_merge_ssl_params",
                "_is_expected_content_type",
                "real_url_default",
                "__init__",
                "fingerprint",
                "check",
                "__init__",
                "is_ssl",
                "ssl",
                "connection_key",
                "host",
                "port",
                "request_info",
                "update_host",
                "update_version",
                "update_headers",
                "update_auto_headers",
                "update_cookies",
                "update_content_encoding",
                "update_transfer_encoding",
                "update_auth",
                "update_body_from_data",
                "update_expect_continue",
                "update_proxy",
                "keep_alive",
                "terminate",
                "__init__",
                "url",
                "url_obj",
                "real_url",
                "host",
                "headers",
                "raw_headers",
                "request_info",
                "content_disposition",
                "__del__",
                "__repr__",
                "connection",
                "history",
                "links",
                "_response_eof",
                "closed",
                "close",
                "release",
                "ok",
                "raise_for_status",
                "_cleanup_writer",
                "_notify_content",
                "get_encoding"
            ]
        },
        "http.py": {
            "list-of-functions": []
        },
        "web_log.py": {
            "list-of-functions": [
                "__init__",
                "compile_format",
                "_format_i",
                "_format_o",
                "_format_a",
                "_format_t",
                "_format_P",
                "_format_r",
                "_format_s",
                "_format_b",
                "_format_T",
                "_format_Tf",
                "_format_D",
                "_format_line",
                "log"
            ]
        },
        "resolver.py": {
            "list-of-functions": [
                "__init__",
                "__init__"
            ]
        },
        "formdata.py": {
            "list-of-functions": [
                "__init__",
                "is_multipart",
                "add_field",
                "add_fields",
                "_gen_form_urlencoded",
                "_gen_form_data",
                "__call__"
            ]
        },
        "payload_streamer.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "__call__",
                "__init__"
            ]
        },
        "web_routedef.py": {
            "list-of-functions": [
                "route",
                "head",
                "options",
                "get",
                "post",
                "put",
                "patch",
                "delete",
                "view",
                "static",
                "register",
                "__repr__",
                "register",
                "__repr__",
                "register",
                "__init__",
                "__repr__",
                "__getitem__",
                "__getitem__",
                "__getitem__",
                "__iter__",
                "__len__",
                "__contains__",
                "route",
                "head",
                "get",
                "post",
                "put",
                "patch",
                "delete",
                "options",
                "view",
                "static",
                "inner"
            ]
        },
        "connector.py": {
            "list-of-functions": [
                "__init__",
                "__await__",
                "__del__",
                "__init__",
                "__repr__",
                "__del__",
                "loop",
                "transport",
                "protocol",
                "add_callback",
                "_notify_release",
                "close",
                "release",
                "closed",
                "close",
                "__init__",
                "__del__",
                "__enter__",
                "__exit__",
                "force_close",
                "limit",
                "limit_per_host",
                "_cleanup",
                "_drop_acquired_per_host",
                "_cleanup_closed",
                "close",
                "_close",
                "closed",
                "_available_connections",
                "_get",
                "_release_waiter",
                "_release_acquired",
                "_release",
                "__init__",
                "__contains__",
                "add",
                "remove",
                "clear",
                "next_addrs",
                "expired",
                "__init__",
                "close",
                "family",
                "use_dns_cache",
                "clear_dns_cache",
                "_make_ssl_context",
                "_get_ssl_context",
                "_get_fingerprint",
                "_fail_on_no_start_tls",
                "_check_loop_for_start_tls",
                "_loop_supports_start_tls",
                "_warn_about_tls_in_tls",
                "__init__",
                "path",
                "__init__",
                "path",
                "drop_exception"
            ]
        },
        "client_exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "code",
                "code",
                "__init__",
                "os_error",
                "host",
                "port",
                "ssl",
                "__str__",
                "__init__",
                "path",
                "__str__",
                "__init__",
                "__init__",
                "__repr__",
                "__init__",
                "url",
                "__repr__",
                "__init__",
                "certificate_error",
                "host",
                "port",
                "ssl",
                "__str__"
            ]
        },
        "typedefs.py": {
            "list-of-functions": []
        },
        "hdrs.py": {
            "list-of-functions": []
        },
        "web_fileresponse.py": {
            "list-of-functions": [
                "__init__",
                "_strong_etag_match"
            ]
        },
        "http_writer.py": {
            "list-of-functions": [
                "_safe_header",
                "_py_serialize_headers",
                "__init__",
                "transport",
                "protocol",
                "enable_chunking",
                "enable_compression",
                "_write"
            ]
        },
        "tcp_helpers.py": {
            "list-of-functions": [
                "tcp_nodelay",
                "tcp_keepalive",
                "tcp_keepalive"
            ]
        },
        "helpers.py": {
            "list-of-functions": [
                "strip_auth_from_url",
                "netrc_from_env",
                "proxies_from_env",
                "current_task",
                "get_running_loop",
                "isasyncgenfunction",
                "get_env_proxy_for_url",
                "parse_mimetype",
                "guess_filename",
                "quoted_string",
                "content_disposition_header",
                "_is_ip_address",
                "is_ip_address",
                "next_whole_second",
                "rfc822_formatted_time",
                "_weakref_handle",
                "weakref_handle",
                "call_later",
                "ceil_timeout",
                "set_result",
                "set_exception",
                "validate_etag_value",
                "parse_http_date",
                "all_tasks",
                "__await__",
                "__new__",
                "decode",
                "from_url",
                "encode",
                "__init__",
                "__get__",
                "__set__",
                "__init__",
                "register",
                "close",
                "start",
                "timer",
                "__call__",
                "__enter__",
                "__exit__",
                "__init__",
                "__enter__",
                "__exit__",
                "timeout",
                "_parse_content_type",
                "content_type",
                "charset",
                "content_length",
                "__init__",
                "__init_subclass__",
                "__getitem__",
                "get",
                "__len__",
                "__iter__",
                "__contains__",
                "__bool__",
                "__repr__"
            ]
        },
        "http_parser.py": {
            "list-of-functions": [
                "__init__",
                "parse_headers",
                "__init__",
                "parse_message",
                "feed_eof",
                "feed_data",
                "parse_headers",
                "set_upgraded",
                "parse_message",
                "parse_message",
                "__init__",
                "feed_eof",
                "feed_data",
                "__init__",
                "set_exception",
                "feed_data",
                "feed_eof",
                "begin_http_chunk_receiving",
                "end_http_chunk_receiving",
                "__init__",
                "decompress",
                "flush",
                "get_content_length"
            ]
        },
        "cookiejar.py": {
            "list-of-functions": [
                "__init__",
                "save",
                "load",
                "clear",
                "clear_domain",
                "__iter__",
                "__len__",
                "_do_expiration",
                "_expire_cookie",
                "update_cookies",
                "filter_cookies",
                "_is_domain_match",
                "_is_path_match",
                "_parse_date",
                "__init__",
                "__iter__",
                "__len__",
                "clear",
                "clear_domain",
                "update_cookies",
                "filter_cookies"
            ]
        },
        "pytest_plugin.py": {
            "list-of-functions": [
                "pytest_addoption",
                "pytest_fixture_setup",
                "fast",
                "loop_debug",
                "_runtime_warning_context",
                "_passthrough_loop_context",
                "pytest_pycollect_makeitem",
                "pytest_pyfunc_call",
                "pytest_generate_tests",
                "loop",
                "proactor_loop",
                "unused_port",
                "aiohttp_unused_port",
                "aiohttp_server",
                "test_server",
                "aiohttp_raw_server",
                "raw_test_server",
                "aiohttp_client",
                "test_client",
                "wrapper",
                "finalizer"
            ]
        },
        "abc.py": {
            "list-of-functions": [
                "__init__",
                "post_init",
                "frozen",
                "freeze",
                "handler",
                "expect_handler",
                "http_exception",
                "get_info",
                "apps",
                "add_app",
                "freeze",
                "__init__",
                "request",
                "__await__",
                "__init__",
                "clear",
                "clear_domain",
                "update_cookies",
                "filter_cookies",
                "enable_compression",
                "enable_chunking",
                "__init__",
                "log"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/attrs/": {
        "setters.py": {
            "list-of-functions": []
        },
        "validators.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "exceptions.py": {
            "list-of-functions": []
        },
        "converters.py": {
            "list-of-functions": []
        },
        "filters.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/frozenlist/": {
        "__init__.py": {
            "list-of-functions": [
                "__init__",
                "frozen",
                "freeze",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "__reversed__",
                "__eq__",
                "__le__",
                "insert",
                "__repr__",
                "__hash__",
                "__class_getitem__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/idna/": {
        "intranges.py": {
            "list-of-functions": [
                "intranges_from_list",
                "_encode_range",
                "_decode_range",
                "intranges_contain"
            ]
        },
        "package_data.py": {
            "list-of-functions": []
        },
        "compat.py": {
            "list-of-functions": [
                "ToASCII",
                "ToUnicode",
                "nameprep"
            ]
        },
        "idnadata.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "core.py": {
            "list-of-functions": [
                "_combining_class",
                "_is_script",
                "_punycode",
                "_unot",
                "valid_label_length",
                "valid_string_length",
                "check_bidi",
                "check_initial_combiner",
                "check_hyphen_ok",
                "check_nfc",
                "valid_contextj",
                "valid_contexto",
                "check_label",
                "alabel",
                "ulabel",
                "uts46_remap",
                "encode",
                "decode"
            ]
        },
        "codec.py": {
            "list-of-functions": [
                "getregentry",
                "encode",
                "decode",
                "_buffer_encode",
                "_buffer_decode"
            ]
        },
        "uts46data.py": {
            "list-of-functions": [
                "_seg_0",
                "_seg_1",
                "_seg_2",
                "_seg_3",
                "_seg_4",
                "_seg_5",
                "_seg_6",
                "_seg_7",
                "_seg_8",
                "_seg_9",
                "_seg_10",
                "_seg_11",
                "_seg_12",
                "_seg_13",
                "_seg_14",
                "_seg_15",
                "_seg_16",
                "_seg_17",
                "_seg_18",
                "_seg_19",
                "_seg_20",
                "_seg_21",
                "_seg_22",
                "_seg_23",
                "_seg_24",
                "_seg_25",
                "_seg_26",
                "_seg_27",
                "_seg_28",
                "_seg_29",
                "_seg_30",
                "_seg_31",
                "_seg_32",
                "_seg_33",
                "_seg_34",
                "_seg_35",
                "_seg_36",
                "_seg_37",
                "_seg_38",
                "_seg_39",
                "_seg_40",
                "_seg_41",
                "_seg_42",
                "_seg_43",
                "_seg_44",
                "_seg_45",
                "_seg_46",
                "_seg_47",
                "_seg_48",
                "_seg_49",
                "_seg_50",
                "_seg_51",
                "_seg_52",
                "_seg_53",
                "_seg_54",
                "_seg_55",
                "_seg_56",
                "_seg_57",
                "_seg_58",
                "_seg_59",
                "_seg_60",
                "_seg_61",
                "_seg_62",
                "_seg_63",
                "_seg_64",
                "_seg_65",
                "_seg_66",
                "_seg_67",
                "_seg_68",
                "_seg_69",
                "_seg_70",
                "_seg_71",
                "_seg_72",
                "_seg_73",
                "_seg_74",
                "_seg_75",
                "_seg_76",
                "_seg_77",
                "_seg_78",
                "_seg_79",
                "_seg_80",
                "_seg_81"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/charset_normalizer/": {
        "md.py": {
            "list-of-functions": [
                "is_suspiciously_successive_range",
                "mess_ratio",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio",
                "__init__",
                "eligible",
                "feed",
                "reset",
                "ratio"
            ]
        },
        "version.py": {
            "list-of-functions": []
        },
        "legacy.py": {
            "list-of-functions": [
                "detect"
            ]
        },
        "models.py": {
            "list-of-functions": [
                "__init__",
                "__eq__",
                "__lt__",
                "multi_byte_usage",
                "__str__",
                "__repr__",
                "add_submatch",
                "encoding",
                "encoding_aliases",
                "bom",
                "byte_order_mark",
                "languages",
                "language",
                "chaos",
                "coherence",
                "percent_chaos",
                "percent_coherence",
                "raw",
                "submatch",
                "has_submatch",
                "alphabets",
                "could_be_from_charset",
                "output",
                "fingerprint",
                "__init__",
                "__iter__",
                "__getitem__",
                "__len__",
                "__bool__",
                "append",
                "best",
                "first",
                "__init__",
                "__dict__",
                "to_json"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "api.py": {
            "list-of-functions": [
                "from_bytes",
                "from_fp",
                "from_path"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "is_accentuated",
                "remove_accent",
                "unicode_range",
                "is_latin",
                "is_ascii",
                "is_punctuation",
                "is_symbol",
                "is_emoticon",
                "is_separator",
                "is_case_variable",
                "is_private_use_only",
                "is_cjk",
                "is_hiragana",
                "is_katakana",
                "is_hangul",
                "is_thai",
                "is_unicode_range_secondary",
                "is_unprintable",
                "any_specified_encoding",
                "is_multi_byte_encoding",
                "identify_sig_or_bom",
                "should_strip_sig_or_bom",
                "iana_name",
                "range_scan",
                "cp_similarity",
                "is_cp_similar",
                "set_logging_handler",
                "cut_sequence_chunks"
            ]
        },
        "constant.py": {
            "list-of-functions": []
        },
        "cd.py": {
            "list-of-functions": [
                "encoding_unicode_range",
                "unicode_range_languages",
                "encoding_languages",
                "mb_encoding_languages",
                "get_target_features",
                "alphabet_languages",
                "characters_popularity_compare",
                "alpha_unicode_split",
                "merge_coherence_ratios",
                "filter_alt_coherence_matches",
                "coherence_ratio"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/charset_normalizer/cli/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "normalizer.py": {
            "list-of-functions": [
                "query_yes_no",
                "cli_detect"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/charset_normalizer/assets/": {
        "__init__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/requests/": {
        "cookies.py": {
            "list-of-functions": [
                "extract_cookies_to_jar",
                "get_cookie_header",
                "remove_cookie_by_name",
                "_copy_cookie_jar",
                "create_cookie",
                "morsel_to_cookie",
                "cookiejar_from_dict",
                "merge_cookies",
                "__init__",
                "get_type",
                "get_host",
                "get_origin_req_host",
                "get_full_url",
                "is_unverifiable",
                "has_header",
                "get_header",
                "add_header",
                "add_unredirected_header",
                "get_new_headers",
                "unverifiable",
                "origin_req_host",
                "host",
                "__init__",
                "info",
                "getheaders",
                "get",
                "set",
                "iterkeys",
                "keys",
                "itervalues",
                "values",
                "iteritems",
                "items",
                "list_domains",
                "list_paths",
                "multiple_domains",
                "get_dict",
                "__contains__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "set_cookie",
                "update",
                "_find",
                "_find_no_duplicates",
                "__getstate__",
                "__setstate__",
                "copy",
                "get_policy"
            ]
        },
        "auth.py": {
            "list-of-functions": [
                "_basic_auth_str",
                "__call__",
                "__init__",
                "__eq__",
                "__ne__",
                "__call__",
                "__call__",
                "__init__",
                "init_per_thread_state",
                "build_digest_header",
                "handle_redirect",
                "handle_401",
                "__call__",
                "__eq__",
                "__ne__",
                "md5_utf8",
                "sha_utf8",
                "sha256_utf8",
                "sha512_utf8"
            ]
        },
        "sessions.py": {
            "list-of-functions": [
                "merge_setting",
                "merge_hooks",
                "session",
                "get_redirect_target",
                "should_strip_auth",
                "resolve_redirects",
                "rebuild_auth",
                "rebuild_proxies",
                "rebuild_method",
                "__init__",
                "__enter__",
                "__exit__",
                "prepare_request",
                "request",
                "get",
                "options",
                "head",
                "post",
                "put",
                "patch",
                "delete",
                "send",
                "merge_environment_settings",
                "get_adapter",
                "close",
                "mount",
                "__getstate__",
                "__setstate__"
            ]
        },
        "hooks.py": {
            "list-of-functions": [
                "default_hooks",
                "dispatch_hook"
            ]
        },
        "compat.py": {
            "list-of-functions": []
        },
        "models.py": {
            "list-of-functions": [
                "path_url",
                "_encode_params",
                "_encode_files",
                "register_hook",
                "deregister_hook",
                "__init__",
                "__repr__",
                "prepare",
                "__init__",
                "prepare",
                "__repr__",
                "copy",
                "prepare_method",
                "_get_idna_encoded_host",
                "prepare_url",
                "prepare_headers",
                "prepare_body",
                "prepare_content_length",
                "prepare_auth",
                "prepare_cookies",
                "prepare_hooks",
                "__init__",
                "__enter__",
                "__exit__",
                "__getstate__",
                "__setstate__",
                "__repr__",
                "__bool__",
                "__nonzero__",
                "__iter__",
                "ok",
                "is_redirect",
                "is_permanent_redirect",
                "next",
                "apparent_encoding",
                "iter_content",
                "iter_lines",
                "content",
                "text",
                "json",
                "links",
                "raise_for_status",
                "close",
                "generate"
            ]
        },
        "certs.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": [
                "check_compatibility",
                "_check_cryptography"
            ]
        },
        "status_codes.py": {
            "list-of-functions": [
                "_init",
                "doc"
            ]
        },
        "packages.py": {
            "list-of-functions": []
        },
        "__version__.py": {
            "list-of-functions": []
        },
        "api.py": {
            "list-of-functions": [
                "request",
                "get",
                "options",
                "head",
                "post",
                "put",
                "patch",
                "delete"
            ]
        },
        "_internal_utils.py": {
            "list-of-functions": [
                "to_native_string",
                "unicode_is_ascii"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "dict_to_sequence",
                "super_len",
                "get_netrc_auth",
                "guess_filename",
                "extract_zipped_paths",
                "atomic_open",
                "from_key_val_list",
                "to_key_val_list",
                "parse_list_header",
                "parse_dict_header",
                "unquote_header_value",
                "dict_from_cookiejar",
                "add_dict_to_cookiejar",
                "get_encodings_from_content",
                "_parse_content_type_header",
                "get_encoding_from_headers",
                "stream_decode_response_unicode",
                "iter_slices",
                "get_unicode_from_response",
                "unquote_unreserved",
                "requote_uri",
                "address_in_network",
                "dotted_netmask",
                "is_ipv4_address",
                "is_valid_cidr",
                "set_environ",
                "should_bypass_proxies",
                "get_environ_proxies",
                "select_proxy",
                "resolve_proxies",
                "default_user_agent",
                "default_headers",
                "parse_header_links",
                "guess_json_utf",
                "prepend_scheme_if_needed",
                "get_auth_from_url",
                "check_header_validity",
                "_validate_header_part",
                "urldefragauth",
                "rewind_body",
                "proxy_bypass_registry",
                "proxy_bypass",
                "get_proxy"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__init__"
            ]
        },
        "structures.py": {
            "list-of-functions": [
                "__init__",
                "__setitem__",
                "__getitem__",
                "__delitem__",
                "__iter__",
                "__len__",
                "lower_items",
                "__eq__",
                "copy",
                "__repr__",
                "__init__",
                "__repr__",
                "__getitem__",
                "get"
            ]
        },
        "help.py": {
            "list-of-functions": [
                "_implementation",
                "info",
                "main"
            ]
        },
        "adapters.py": {
            "list-of-functions": [
                "__init__",
                "send",
                "close",
                "__init__",
                "__getstate__",
                "__setstate__",
                "init_poolmanager",
                "proxy_manager_for",
                "cert_verify",
                "build_response",
                "get_connection",
                "close",
                "request_url",
                "add_headers",
                "proxy_headers",
                "send",
                "SOCKSProxyManager"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/multidict/": {
        "_multidict_py.py": {
            "list-of-functions": [
                "getversion",
                "GenericAlias",
                "__init__",
                "incr_version",
                "_title",
                "getall",
                "getone",
                "__getitem__",
                "get",
                "__iter__",
                "__len__",
                "keys",
                "items",
                "values",
                "__eq__",
                "__contains__",
                "__repr__",
                "__init__",
                "__reduce__",
                "copy",
                "__init__",
                "_title",
                "copy",
                "__init__",
                "__reduce__",
                "_title",
                "_key",
                "add",
                "copy",
                "extend",
                "_extend",
                "_extend_items",
                "clear",
                "__setitem__",
                "__delitem__",
                "setdefault",
                "popone",
                "popall",
                "popitem",
                "update",
                "_update_items",
                "_replace",
                "_title",
                "__init__",
                "__iter__",
                "__next__",
                "__length_hint__",
                "__init__",
                "__len__",
                "__contains__",
                "__iter__",
                "_iter",
                "__repr__",
                "__contains__",
                "__iter__",
                "_iter",
                "__repr__",
                "__contains__",
                "__iter__",
                "_iter",
                "__repr__",
                "__sizeof__",
                "__sizeof__"
            ]
        },
        "_abc.py": {
            "list-of-functions": [
                "getall",
                "getone",
                "add",
                "extend",
                "popone",
                "popall",
                "__getitem__",
                "__getitem__"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_multidict_base.py": {
            "list-of-functions": [
                "_abc_itemsview_register",
                "_abc_keysview_register",
                "_abc_valuesview_register",
                "_viewbaseset_richcmp",
                "_viewbaseset_and",
                "_viewbaseset_or",
                "_viewbaseset_sub",
                "_viewbaseset_xor",
                "_itemsview_isdisjoint",
                "_itemsview_repr",
                "_keysview_isdisjoint",
                "_keysview_repr",
                "_valuesview_repr",
                "_mdrepr"
            ]
        },
        "_compat.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/": {
        "__init__.py": {
            "list-of-functions": [
                "main"
            ]
        },
        "__pip-runner__.py": {
            "list-of-functions": [
                "version_str",
                "find_spec"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/": {
        "configuration.py": {
            "list-of-functions": [
                "_normalize_name",
                "_disassemble_key",
                "get_configuration_files",
                "__init__",
                "load",
                "get_file_to_edit",
                "items",
                "get_value",
                "set_value",
                "unset_value",
                "save",
                "_ensure_have_load_only",
                "_dictionary",
                "_load_config_files",
                "_load_file",
                "_construct_parser",
                "_load_environment_vars",
                "_normalized_keys",
                "get_environ_vars",
                "iter_config_files",
                "get_values_in_config",
                "_get_parser_to_modify",
                "_mark_as_modified",
                "__repr__"
            ]
        },
        "pyproject.py": {
            "list-of-functions": [
                "_is_list_of_str",
                "make_pyproject_path",
                "load_pyproject_toml"
            ]
        },
        "cache.py": {
            "list-of-functions": [
                "_hash_dict",
                "__init__",
                "_get_cache_path_parts",
                "_get_candidates",
                "get_path_for_link",
                "get",
                "__init__",
                "get_path_for_link",
                "get",
                "__init__",
                "__init__",
                "__init__",
                "get_path_for_link",
                "get_ephem_path_for_link",
                "get",
                "get_cache_entry",
                "record_download_origin"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "main"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "_is_kebab_case",
                "_prefix_with_indent",
                "__init__",
                "__repr__",
                "__rich_console__",
                "__init__",
                "__init__",
                "__init__",
                "__str__",
                "__str__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "append",
                "__str__",
                "__bool__",
                "body",
                "__str__",
                "_requirement_name",
                "__init__",
                "body",
                "__init__",
                "body",
                "_hash_comparison",
                "__init__",
                "__str__",
                "__init__",
                "_iter_externally_managed_error_keys",
                "from_config",
                "hash_then_or"
            ]
        },
        "main.py": {
            "list-of-functions": [
                "main"
            ]
        },
        "wheel_builder.py": {
            "list-of-functions": [
                "_contains_egg_info",
                "_should_build",
                "should_build_for_wheel_command",
                "should_build_for_install_command",
                "_should_cache",
                "_get_cache_dir",
                "_verify_one",
                "_build_one",
                "_build_one_inside_env",
                "_clean_one_legacy",
                "build"
            ]
        },
        "self_outdated_check.py": {
            "list-of-functions": [
                "_get_statefile_name",
                "was_installed_by_pip",
                "_get_current_remote_pip_version",
                "_self_version_check_logic",
                "pip_self_version_check",
                "__init__",
                "key",
                "get",
                "set",
                "__rich__"
            ]
        },
        "build_env.py": {
            "list-of-functions": [
                "_dedup",
                "get_runnable_pip",
                "_get_system_sitepackages",
                "__init__",
                "__init__",
                "__enter__",
                "__exit__",
                "check_requirements",
                "install_requirements",
                "_install_requirements",
                "__init__",
                "__enter__",
                "__exit__",
                "cleanup",
                "install_requirements"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/network/": {
        "auth.py": {
            "list-of-functions": [
                "get_keyring_provider",
                "get_auth_info",
                "save_auth_info",
                "get_auth_info",
                "save_auth_info",
                "__init__",
                "get_auth_info",
                "save_auth_info",
                "__init__",
                "get_auth_info",
                "save_auth_info",
                "_get_password",
                "_set_password",
                "__init__",
                "keyring_provider",
                "keyring_provider",
                "use_keyring",
                "_get_keyring_auth",
                "_get_index_url",
                "_get_new_credentials",
                "_get_url_and_credentials",
                "__call__",
                "_prompt_for_password",
                "_should_save_password_to_keyring",
                "handle_401",
                "warn_on_401",
                "save_credentials",
                "PATH_as_shutil_which_determines_it"
            ]
        },
        "xmlrpc.py": {
            "list-of-functions": [
                "__init__",
                "request"
            ]
        },
        "download.py": {
            "list-of-functions": [
                "_get_http_response_size",
                "_prepare_download",
                "sanitize_content_filename",
                "parse_content_disposition",
                "_get_http_response_filename",
                "_http_get_download",
                "__init__",
                "__call__",
                "__init__",
                "__call__"
            ]
        },
        "session.py": {
            "list-of-functions": [
                "looks_like_ci",
                "user_agent",
                "send",
                "close",
                "__init__",
                "init_poolmanager",
                "cert_verify",
                "cert_verify",
                "__init__",
                "update_index_urls",
                "add_trusted_host",
                "iter_secure_origins",
                "is_secure_origin",
                "request"
            ]
        },
        "cache.py": {
            "list-of-functions": [
                "is_from_cache",
                "suppressed_cache_errors",
                "__init__",
                "_get_cache_path",
                "get",
                "set",
                "delete"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "utils.py": {
            "list-of-functions": [
                "raise_for_status",
                "response_chunks"
            ]
        },
        "lazy_wheel.py": {
            "list-of-functions": [
                "dist_from_wheel_url",
                "__init__",
                "mode",
                "name",
                "seekable",
                "close",
                "closed",
                "read",
                "readable",
                "seek",
                "tell",
                "truncate",
                "writable",
                "__enter__",
                "__exit__",
                "_stay",
                "_check_zip",
                "_stream_response",
                "_merge",
                "_download"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/utils/": {
        "logging.py": {
            "list-of-functions": [
                "_is_broken_pipe_error",
                "indent_log",
                "get_indentation",
                "setup_logging",
                "__init__",
                "get_message_start",
                "format",
                "__rich_console__",
                "__init__",
                "emit",
                "handleError",
                "_open",
                "__init__",
                "filter",
                "filter"
            ]
        },
        "misc.py": {
            "list-of-functions": [
                "get_pip_version",
                "normalize_version_info",
                "ensure_dir",
                "get_prog",
                "rmtree",
                "rmtree_errorhandler",
                "display_path",
                "backup_dir",
                "ask_path_exists",
                "_check_no_input",
                "ask",
                "ask_input",
                "ask_password",
                "strtobool",
                "format_size",
                "tabulate",
                "is_installable_dir",
                "read_chunks",
                "normalize_path",
                "splitext",
                "renames",
                "is_local",
                "write_output",
                "captured_output",
                "captured_stdout",
                "captured_stderr",
                "enum",
                "build_netloc",
                "build_url_from_netloc",
                "parse_netloc",
                "split_auth_from_netloc",
                "redact_netloc",
                "_transform_url",
                "_get_netloc",
                "_redact_netloc",
                "split_auth_netloc_from_url",
                "remove_auth_from_url",
                "redact_auth_from_url",
                "hide_value",
                "hide_url",
                "protect_pip_from_modification_on_windows",
                "check_externally_managed",
                "is_console_interactive",
                "hash_file",
                "pairwise",
                "partition",
                "from_stream",
                "encoding",
                "__init__",
                "__repr__",
                "__str__",
                "__eq__",
                "__init__",
                "build_wheel",
                "build_sdist",
                "build_editable",
                "get_requires_for_build_wheel",
                "get_requires_for_build_sdist",
                "get_requires_for_build_editable",
                "prepare_metadata_for_build_wheel",
                "prepare_metadata_for_build_editable"
            ]
        },
        "egg_link.py": {
            "list-of-functions": [
                "_egg_link_name",
                "egg_link_path_from_sys_path",
                "egg_link_path_from_location"
            ]
        },
        "compat.py": {
            "list-of-functions": [
                "has_tls",
                "get_path_uid"
            ]
        },
        "encoding.py": {
            "list-of-functions": [
                "auto_decode"
            ]
        },
        "models.py": {
            "list-of-functions": [
                "__init__",
                "__hash__",
                "__lt__",
                "__le__",
                "__gt__",
                "__ge__",
                "__eq__",
                "_compare"
            ]
        },
        "deprecation.py": {
            "list-of-functions": [
                "_showwarning",
                "install_warning_logger",
                "deprecated"
            ]
        },
        "subprocess.py": {
            "list-of-functions": [
                "make_command",
                "format_command_args",
                "reveal_command_args",
                "call_subprocess",
                "runner_with_spinner_message",
                "runner"
            ]
        },
        "filesystem.py": {
            "list-of-functions": [
                "check_path_owner",
                "adjacent_tmp_file",
                "test_writable_dir",
                "_test_writable_dir_win",
                "find_files",
                "file_size",
                "format_file_size",
                "directory_size",
                "format_directory_size"
            ]
        },
        "direct_url_helpers.py": {
            "list-of-functions": [
                "direct_url_as_pep440_direct_reference",
                "direct_url_for_editable",
                "direct_url_from_link"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_jaraco_text.py": {
            "list-of-functions": [
                "_nonblank",
                "yield_lines",
                "_",
                "drop_comment",
                "join_continuation"
            ]
        },
        "temp_dir.py": {
            "list-of-functions": [
                "global_tempdir_manager",
                "tempdir_registry",
                "__init__",
                "set_delete",
                "get_delete",
                "__init__",
                "path",
                "__repr__",
                "__enter__",
                "__exit__",
                "_create",
                "cleanup",
                "__init__",
                "_generate_names",
                "_create"
            ]
        },
        "appdirs.py": {
            "list-of-functions": [
                "user_cache_dir",
                "_macos_user_config_dir",
                "user_config_dir",
                "site_config_dirs"
            ]
        },
        "inject_securetransport.py": {
            "list-of-functions": [
                "inject_securetransport"
            ]
        },
        "setuptools_build.py": {
            "list-of-functions": [
                "make_setuptools_shim_args",
                "make_setuptools_bdist_wheel_args",
                "make_setuptools_clean_args",
                "make_setuptools_develop_args",
                "make_setuptools_egg_info_args"
            ]
        },
        "packaging.py": {
            "list-of-functions": [
                "check_requires_python",
                "get_requirement",
                "safe_extra"
            ]
        },
        "entrypoints.py": {
            "list-of-functions": [
                "_wrapper",
                "get_best_invocation_for_this_pip",
                "get_best_invocation_for_this_python"
            ]
        },
        "filetypes.py": {
            "list-of-functions": [
                "is_archive_file"
            ]
        },
        "compatibility_tags.py": {
            "list-of-functions": [
                "version_info_to_nodot",
                "_mac_platforms",
                "_custom_manylinux_platforms",
                "_get_custom_platforms",
                "_expand_allowed_platforms",
                "_get_python_version",
                "_get_custom_interpreter",
                "get_supported"
            ]
        },
        "datetime.py": {
            "list-of-functions": [
                "today_is_later_than"
            ]
        },
        "urls.py": {
            "list-of-functions": [
                "get_url_scheme",
                "path_to_url",
                "url_to_path"
            ]
        },
        "hashes.py": {
            "list-of-functions": [
                "__init__",
                "__and__",
                "digest_count",
                "is_hash_allowed",
                "check_against_chunks",
                "_raise",
                "check_against_file",
                "check_against_path",
                "has_one_of",
                "__bool__",
                "__eq__",
                "__hash__",
                "__init__",
                "_raise"
            ]
        },
        "virtualenv.py": {
            "list-of-functions": [
                "_running_under_venv",
                "_running_under_legacy_virtualenv",
                "running_under_virtualenv",
                "_get_pyvenv_cfg_lines",
                "_no_global_under_venv",
                "_no_global_under_legacy_virtualenv",
                "virtualenv_no_global"
            ]
        },
        "_log.py": {
            "list-of-functions": [
                "getLogger",
                "init_logging",
                "verbose"
            ]
        },
        "glibc.py": {
            "list-of-functions": [
                "glibc_version_string",
                "glibc_version_string_confstr",
                "glibc_version_string_ctypes",
                "libc_ver"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "parse_wheel",
                "wheel_dist_info_dir",
                "read_wheel_metadata_file",
                "wheel_metadata",
                "wheel_version",
                "check_compatibility"
            ]
        },
        "unpacking.py": {
            "list-of-functions": [
                "current_umask",
                "split_leading_dir",
                "has_leading_dir",
                "is_within_directory",
                "set_extracted_file_to_default_mode_plus_executable",
                "zip_item_is_executable",
                "unzip_file",
                "untar_file",
                "unpack_file"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/models/": {
        "link.py": {
            "list-of-functions": [
                "_clean_url_path_part",
                "_clean_file_url_path",
                "_clean_url_path",
                "_ensure_quoted_url",
                "_clean_link",
                "links_equivalent",
                "__post_init__",
                "parse_pep658_hash",
                "find_hash_url_fragment",
                "as_dict",
                "as_hashes",
                "is_hash_allowed",
                "__init__",
                "from_json",
                "from_element",
                "__str__",
                "__repr__",
                "url",
                "filename",
                "file_path",
                "scheme",
                "netloc",
                "path",
                "splitext",
                "ext",
                "url_without_fragment",
                "_egg_fragment",
                "subdirectory_fragment",
                "metadata_link",
                "as_hashes",
                "hash",
                "hash_name",
                "show_url",
                "is_file",
                "is_existing_dir",
                "is_wheel",
                "is_vcs",
                "is_yanked",
                "has_hash",
                "is_hash_allowed"
            ]
        },
        "selection_prefs.py": {
            "list-of-functions": [
                "__init__"
            ]
        },
        "direct_url.py": {
            "list-of-functions": [
                "_get",
                "_get_required",
                "_exactly_one_of",
                "_filter_none",
                "__init__",
                "_from_dict",
                "_to_dict",
                "__init__",
                "hash",
                "hash",
                "_from_dict",
                "_to_dict",
                "__init__",
                "_from_dict",
                "_to_dict",
                "__init__",
                "_remove_auth_from_netloc",
                "redacted_url",
                "validate",
                "from_dict",
                "to_dict",
                "from_json",
                "to_json",
                "is_local_editable"
            ]
        },
        "index.py": {
            "list-of-functions": [
                "__init__",
                "_url_for_path"
            ]
        },
        "target_python.py": {
            "list-of-functions": [
                "__init__",
                "format_given",
                "get_tags"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "search_scope.py": {
            "list-of-functions": [
                "create",
                "__init__",
                "get_formatted_locations",
                "get_index_urls_locations",
                "mkurl_pypi_url"
            ]
        },
        "candidate.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__str__"
            ]
        },
        "format_control.py": {
            "list-of-functions": [
                "__init__",
                "__eq__",
                "__repr__",
                "handle_mutual_excludes",
                "get_allowed_formats",
                "disallow_binaries"
            ]
        },
        "installation_report.py": {
            "list-of-functions": [
                "__init__",
                "_install_req_to_dict",
                "to_dict"
            ]
        },
        "scheme.py": {
            "list-of-functions": [
                "__init__"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "__init__",
                "get_formatted_file_tags",
                "support_index_min",
                "find_most_preferred_tag",
                "supported"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/cli/": {
        "cmdoptions.py": {
            "list-of-functions": [
                "raise_option_error",
                "make_option_group",
                "check_dist_restriction",
                "_path_option_check",
                "_package_name_option_check",
                "exists_action",
                "extra_index_url",
                "find_links",
                "trusted_host",
                "constraints",
                "requirements",
                "editable",
                "_handle_src",
                "_get_format_control",
                "_handle_no_binary",
                "_handle_only_binary",
                "no_binary",
                "only_binary",
                "_convert_python_version",
                "_handle_python_version",
                "add_target_python_options",
                "make_target_python",
                "prefer_binary",
                "_handle_no_cache_dir",
                "_handle_no_use_pep517",
                "_handle_config_settings",
                "_handle_merge_hash",
                "check_list_path_option"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "status_codes.py": {
            "list-of-functions": []
        },
        "parser.py": {
            "list-of-functions": [
                "__init__",
                "format_option_strings",
                "_format_option_strings",
                "format_heading",
                "format_usage",
                "format_description",
                "format_epilog",
                "indent_lines",
                "expand_default",
                "insert_option_group",
                "option_list_all",
                "__init__",
                "check_default",
                "_get_ordered_configuration_items",
                "_update_defaults",
                "get_default_values",
                "error"
            ]
        },
        "command_context.py": {
            "list-of-functions": [
                "__init__",
                "main_context",
                "enter_context"
            ]
        },
        "spinners.py": {
            "list-of-functions": [
                "open_spinner",
                "hidden_cursor",
                "spin",
                "finish",
                "__init__",
                "_write",
                "spin",
                "finish",
                "__init__",
                "_update",
                "spin",
                "finish",
                "__init__",
                "ready",
                "reset"
            ]
        },
        "autocompletion.py": {
            "list-of-functions": [
                "autocomplete",
                "get_path_completion_type",
                "auto_complete_paths"
            ]
        },
        "base_command.py": {
            "list-of-functions": [
                "__init__",
                "add_options",
                "handle_pip_version_check",
                "run",
                "parse_args",
                "main",
                "_main",
                "intercepts_unhandled_exc",
                "exc_logging_wrapper"
            ]
        },
        "main_parser.py": {
            "list-of-functions": [
                "create_main_parser",
                "identify_python_interpreter",
                "parse_command"
            ]
        },
        "progress_bars.py": {
            "list-of-functions": [
                "_rich_progress_bar",
                "get_download_progress_renderer"
            ]
        },
        "main.py": {
            "list-of-functions": [
                "main"
            ]
        },
        "req_command.py": {
            "list-of-functions": [
                "_create_truststore_ssl_context",
                "warn_if_run_as_root",
                "with_cleanup",
                "__init__",
                "_get_index_urls",
                "get_default_session",
                "_build_session",
                "handle_pip_version_check",
                "configure_tempdir_registry",
                "wrapper",
                "__init__",
                "determine_resolver_variant",
                "make_requirement_preparer",
                "make_resolver",
                "get_requirements",
                "trace_basic_info",
                "_build_package_finder"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/operations/": {
        "check.py": {
            "list-of-functions": [
                "create_package_set_from_installed",
                "check_package_set",
                "check_install_conflicts",
                "_simulate_installation_of",
                "_create_whitelist"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "freeze.py": {
            "list-of-functions": [
                "freeze",
                "_format_as_name_version",
                "_get_editable_info",
                "__init__",
                "from_dist",
                "__str__"
            ]
        },
        "prepare.py": {
            "list-of-functions": [
                "_get_prepared_distribution",
                "unpack_vcs_link",
                "get_http_url",
                "get_file_url",
                "unpack_url",
                "_check_download_dir",
                "__init__",
                "__init__",
                "_log_preparing_link",
                "_ensure_link_req_src_dir",
                "_get_linked_req_hashes",
                "_fetch_metadata_only",
                "_fetch_metadata_using_link_data_attr",
                "_fetch_metadata_using_lazy_wheel",
                "_complete_partial_requirements",
                "prepare_linked_requirement",
                "prepare_linked_requirements_more",
                "_prepare_linked_requirement",
                "save_linked_requirement",
                "prepare_editable_requirement",
                "prepare_installed_requirement"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/operations/install/": {
        "editable_legacy.py": {
            "list-of-functions": [
                "install_editable"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "wheel.py": {
            "list-of-functions": [
                "rehash",
                "csv_io_kwargs",
                "fix_script",
                "wheel_root_is_purelib",
                "get_entrypoints",
                "message_about_scripts_not_on_PATH",
                "_normalized_outrows",
                "_record_to_fs_path",
                "_fs_to_record_path",
                "get_csv_rows_for_installed",
                "get_console_script_specs",
                "_raise_for_invalid_entrypoint",
                "_install_wheel",
                "req_error_context",
                "install_wheel",
                "__init__",
                "_getinfo",
                "save",
                "__init__",
                "save",
                "__init__",
                "make",
                "record_installed",
                "is_dir_path",
                "assert_no_path_traversal",
                "root_scheme_file_maker",
                "data_scheme_file_maker",
                "is_data_scheme_path",
                "is_script_scheme_path",
                "is_entrypoint_wrapper",
                "pyc_source_file_paths",
                "pyc_output_path",
                "_generate_file",
                "save",
                "make_root_scheme_file",
                "make_data_scheme_file"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/operations/build/": {
        "wheel_legacy.py": {
            "list-of-functions": [
                "format_command_result",
                "get_legacy_build_wheel_path",
                "build_wheel_legacy"
            ]
        },
        "metadata.py": {
            "list-of-functions": [
                "generate_metadata"
            ]
        },
        "metadata_editable.py": {
            "list-of-functions": [
                "generate_editable_metadata"
            ]
        },
        "wheel_editable.py": {
            "list-of-functions": [
                "build_wheel_editable"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "metadata_legacy.py": {
            "list-of-functions": [
                "_find_egg_info",
                "generate_metadata"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "build_wheel_pep517"
            ]
        },
        "build_tracker.py": {
            "list-of-functions": [
                "update_env_context_manager",
                "get_build_tracker",
                "__init__",
                "__enter__",
                "__exit__",
                "_entry_path",
                "add",
                "remove",
                "cleanup",
                "track"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/req/": {
        "req_install.py": {
            "list-of-functions": [
                "check_invalid_constraint_type",
                "_has_option",
                "check_legacy_setup_py_options",
                "__init__",
                "__str__",
                "__repr__",
                "format_debug",
                "name",
                "supports_pyproject_editable",
                "specifier",
                "is_pinned",
                "match_markers",
                "has_hash_options",
                "hashes",
                "from_path",
                "ensure_build_location",
                "_set_requirement",
                "warn_on_mismatching_name",
                "check_if_exists",
                "is_wheel",
                "is_wheel_from_cache",
                "unpacked_source_directory",
                "setup_py_path",
                "setup_cfg_path",
                "pyproject_toml_path",
                "load_pyproject_toml",
                "isolated_editable_sanity_check",
                "prepare_metadata",
                "metadata",
                "get_dist",
                "assert_source_matches_version",
                "ensure_has_source_dir",
                "update_editable",
                "uninstall",
                "_get_archive_name",
                "archive",
                "install",
                "_clean_zip_name"
            ]
        },
        "req_set.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "add_unnamed_requirement",
                "add_named_requirement",
                "has_requirement",
                "get_requirement",
                "all_requirements",
                "requirements_to_install"
            ]
        },
        "req_uninstall.py": {
            "list-of-functions": [
                "_script_names",
                "_unique",
                "uninstallation_paths",
                "compact",
                "compress_for_rename",
                "compress_for_output_listing",
                "unique",
                "norm_join",
                "__init__",
                "_get_directory_stash",
                "_get_file_stash",
                "stash",
                "commit",
                "rollback",
                "can_rollback",
                "__init__",
                "_permitted",
                "add",
                "add_pth",
                "remove",
                "_allowed_to_proceed",
                "rollback",
                "commit",
                "from_dist",
                "__init__",
                "add",
                "remove",
                "rollback",
                "_display",
                "iter_scripts_to_remove"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_validate_requirements",
                "install_given_reqs",
                "__init__",
                "__repr__"
            ]
        },
        "req_file.py": {
            "list-of-functions": [
                "parse_requirements",
                "preprocess",
                "handle_requirement_line",
                "handle_option_line",
                "handle_line",
                "get_line_parser",
                "break_args_options",
                "build_parser",
                "join_lines",
                "ignore_comments",
                "expand_env_variables",
                "get_file_content",
                "__init__",
                "__init__",
                "__init__",
                "parse",
                "_parse_and_recurse",
                "_parse_file",
                "parse_line",
                "__init__",
                "parser_exit"
            ]
        },
        "constructors.py": {
            "list-of-functions": [
                "_strip_extras",
                "convert_extras",
                "parse_editable",
                "check_first_requirement_in_file",
                "deduce_helpful_msg",
                "parse_req_from_editable",
                "install_req_from_editable",
                "_looks_like_path",
                "_get_url_from_path",
                "parse_req_from_line",
                "install_req_from_line",
                "install_req_from_req_string",
                "install_req_from_parsed_requirement",
                "install_req_from_link_and_ireq",
                "__init__",
                "with_source",
                "_parse_req_string"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/resolution/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "base.py": {
            "list-of-functions": [
                "resolve",
                "get_installation_order"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/resolution/legacy/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "resolver.py": {
            "list-of-functions": [
                "_check_dist_requires_python",
                "__init__",
                "resolve",
                "_add_requirement_to_set",
                "_is_upgrade_allowed",
                "_set_req_to_reinstall",
                "_check_skip_installed",
                "_find_requirement_link",
                "_populate_link",
                "_get_dist_for",
                "_resolve_one",
                "get_installation_order",
                "add_req",
                "schedule"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/resolution/resolvelib/": {
        "provider.py": {
            "list-of-functions": [
                "_get_with_identifier",
                "__init__",
                "identify",
                "get_preference",
                "find_matches",
                "is_satisfied_by",
                "get_dependencies",
                "is_backtrack_cause",
                "_eligible_for_upgrade"
            ]
        },
        "found_candidates.py": {
            "list-of-functions": [
                "_iter_built",
                "_iter_built_with_prepended",
                "_iter_built_with_inserted",
                "__init__",
                "__getitem__",
                "__iter__",
                "__len__",
                "__bool__"
            ]
        },
        "reporter.py": {
            "list-of-functions": [
                "__init__",
                "rejecting_candidate",
                "starting",
                "starting_round",
                "ending_round",
                "ending",
                "adding_requirement",
                "rejecting_candidate",
                "pinning"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "factory.py": {
            "list-of-functions": [
                "__init__",
                "force_reinstall",
                "_fail_if_link_is_unsupported_wheel",
                "_make_extras_candidate",
                "_make_candidate_from_dist",
                "_make_candidate_from_link",
                "_iter_found_candidates",
                "_iter_explicit_candidates_from_base",
                "_iter_candidates_from_constraints",
                "find_candidates",
                "_make_requirement_from_install_req",
                "collect_root_requirements",
                "make_requirement_from_candidate",
                "make_requirement_from_spec",
                "make_requires_python_requirement",
                "get_wheel_cache_entry",
                "get_dist_to_uninstall",
                "_report_requires_python_error",
                "_report_single_requirement_conflict",
                "get_installation_error",
                "_get_installed_candidate",
                "iter_index_candidate_infos",
                "text_join",
                "describe_trigger",
                "is_pinned"
            ]
        },
        "requirements.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "project_name",
                "name",
                "format_for_error",
                "get_candidate_lookup",
                "is_satisfied_by",
                "__init__",
                "__str__",
                "__repr__",
                "project_name",
                "name",
                "format_for_error",
                "get_candidate_lookup",
                "is_satisfied_by",
                "__init__",
                "__str__",
                "__repr__",
                "project_name",
                "name",
                "format_for_error",
                "get_candidate_lookup",
                "is_satisfied_by",
                "__init__",
                "__str__",
                "__repr__",
                "project_name",
                "name",
                "format_for_error",
                "get_candidate_lookup",
                "is_satisfied_by"
            ]
        },
        "resolver.py": {
            "list-of-functions": [
                "get_topological_weights",
                "_req_set_item_sorter",
                "__init__",
                "resolve",
                "get_installation_order",
                "visit"
            ]
        },
        "candidates.py": {
            "list-of-functions": [
                "as_base_candidate",
                "make_install_req_from_link",
                "make_install_req_from_editable",
                "_make_install_req_from_dist",
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__",
                "source_link",
                "project_name",
                "name",
                "version",
                "format_for_error",
                "_prepare_distribution",
                "_check_metadata_consistency",
                "_prepare",
                "iter_dependencies",
                "get_install_requirement",
                "__init__",
                "_prepare_distribution",
                "__init__",
                "_prepare_distribution",
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__",
                "project_name",
                "name",
                "version",
                "is_editable",
                "format_for_error",
                "iter_dependencies",
                "get_install_requirement",
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__",
                "project_name",
                "name",
                "version",
                "format_for_error",
                "is_installed",
                "is_editable",
                "source_link",
                "iter_dependencies",
                "get_install_requirement",
                "__init__",
                "__str__",
                "project_name",
                "name",
                "version",
                "format_for_error",
                "iter_dependencies",
                "get_install_requirement"
            ]
        },
        "base.py": {
            "list-of-functions": [
                "format_name",
                "_match_link",
                "__init__",
                "empty",
                "from_ireq",
                "__bool__",
                "__and__",
                "is_satisfied_by",
                "project_name",
                "name",
                "is_satisfied_by",
                "get_candidate_lookup",
                "format_for_error",
                "project_name",
                "name",
                "version",
                "is_installed",
                "is_editable",
                "source_link",
                "iter_dependencies",
                "get_install_requirement",
                "format_for_error"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/vcs/": {
        "git.py": {
            "list-of-functions": [
                "looks_like_hash",
                "get_base_rev_args",
                "is_immutable_rev_checkout",
                "get_git_version",
                "get_current_branch",
                "get_revision_sha",
                "_should_fetch",
                "resolve_revision",
                "is_commit_id_equal",
                "fetch_new",
                "switch",
                "update",
                "get_remote_url",
                "_git_remote_to_pip_url",
                "has_commit",
                "get_revision",
                "get_subdirectory",
                "get_url_rev_and_auth",
                "update_submodules",
                "get_repository_root",
                "should_add_vcs_url_prefix"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "mercurial.py": {
            "list-of-functions": [
                "get_base_rev_args",
                "fetch_new",
                "switch",
                "update",
                "get_remote_url",
                "get_revision",
                "get_requirement_revision",
                "is_commit_id_equal",
                "get_subdirectory",
                "get_repository_root"
            ]
        },
        "bazaar.py": {
            "list-of-functions": [
                "get_base_rev_args",
                "fetch_new",
                "switch",
                "update",
                "get_url_rev_and_auth",
                "get_remote_url",
                "get_revision",
                "is_commit_id_equal"
            ]
        },
        "versioncontrol.py": {
            "list-of-functions": [
                "is_url",
                "make_vcs_requirement_url",
                "find_path_to_project_root_from_repo_root",
                "__init__",
                "__init__",
                "__repr__",
                "arg_rev",
                "to_args",
                "to_display",
                "make_new",
                "__init__",
                "__iter__",
                "backends",
                "dirnames",
                "all_schemes",
                "register",
                "unregister",
                "get_backend_for_dir",
                "get_backend_for_scheme",
                "get_backend",
                "should_add_vcs_url_prefix",
                "get_subdirectory",
                "get_requirement_revision",
                "get_src_requirement",
                "get_base_rev_args",
                "is_immutable_rev_checkout",
                "make_rev_options",
                "_is_local_repository",
                "get_netloc_and_auth",
                "get_url_rev_and_auth",
                "make_rev_args",
                "get_url_rev_options",
                "normalize_url",
                "compare_urls",
                "fetch_new",
                "switch",
                "update",
                "is_commit_id_equal",
                "obtain",
                "unpack",
                "get_remote_url",
                "get_revision",
                "run_command",
                "is_repository_directory",
                "get_repository_root"
            ]
        },
        "subversion.py": {
            "list-of-functions": [
                "should_add_vcs_url_prefix",
                "get_base_rev_args",
                "get_revision",
                "get_netloc_and_auth",
                "get_url_rev_and_auth",
                "make_rev_args",
                "get_remote_url",
                "_get_svn_url_rev",
                "is_commit_id_equal",
                "__init__",
                "call_vcs_version",
                "get_vcs_version",
                "get_remote_call_options",
                "fetch_new",
                "switch",
                "update"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/locations/": {
        "__init__.py": {
            "list-of-functions": [
                "_should_use_sysconfig",
                "_looks_like_bpo_44860",
                "_looks_like_red_hat_patched_platlib_purelib",
                "_looks_like_red_hat_lib",
                "_looks_like_debian_scheme",
                "_looks_like_red_hat_scheme",
                "_looks_like_slackware_scheme",
                "_looks_like_msys2_mingw_scheme",
                "_fix_abiflags",
                "_warn_mismatched",
                "_warn_if_mismatch",
                "_log_context",
                "get_scheme",
                "get_bin_prefix",
                "get_bin_user",
                "_looks_like_deb_system_dist_packages",
                "get_purelib",
                "get_platlib"
            ]
        },
        "_sysconfig.py": {
            "list-of-functions": [
                "_should_use_osx_framework_prefix",
                "_infer_prefix",
                "_infer_user",
                "_infer_home",
                "get_scheme",
                "get_bin_prefix",
                "get_purelib",
                "get_platlib"
            ]
        },
        "_distutils.py": {
            "list-of-functions": [
                "distutils_scheme",
                "get_scheme",
                "get_bin_prefix",
                "get_purelib",
                "get_platlib"
            ]
        },
        "base.py": {
            "list-of-functions": [
                "get_major_minor_version",
                "change_root",
                "get_src_prefix",
                "is_osx_framework"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/index/": {
        "collector.py": {
            "list-of-functions": [
                "_match_vcs_scheme",
                "_ensure_api_header",
                "_ensure_api_response",
                "_get_simple_response",
                "_get_encoding_from_headers",
                "with_cached_index_content",
                "parse_links",
                "_handle_get_simple_fail",
                "_make_index_content",
                "_get_index_content",
                "__init__",
                "__init__",
                "__eq__",
                "__hash__",
                "__call__",
                "wrapper",
                "wrapper_wrapper",
                "__init__",
                "__str__",
                "__init__",
                "handle_starttag",
                "get_href",
                "__init__",
                "create",
                "find_links",
                "fetch_response",
                "collect_sources"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "sources.py": {
            "list-of-functions": [
                "_is_html_file",
                "build_source",
                "link",
                "page_candidates",
                "file_links",
                "__init__",
                "link",
                "page_candidates",
                "file_links",
                "__init__",
                "link",
                "page_candidates",
                "file_links",
                "__init__",
                "link",
                "page_candidates",
                "file_links",
                "__init__",
                "link",
                "page_candidates",
                "file_links"
            ]
        },
        "package_finder.py": {
            "list-of-functions": [
                "_check_link_requires_python",
                "filter_unallowed_hashes",
                "_find_name_version_sep",
                "_extract_version_from_fragment",
                "__init__",
                "evaluate_link",
                "__init__",
                "__init__",
                "iter_all",
                "iter_applicable",
                "create",
                "__init__",
                "get_applicable_candidates",
                "_sort_key",
                "sort_best_candidate",
                "compute_best_candidate",
                "__init__",
                "create",
                "target_python",
                "search_scope",
                "search_scope",
                "find_links",
                "index_urls",
                "trusted_hosts",
                "allow_all_prereleases",
                "set_allow_all_prereleases",
                "prefer_binary",
                "set_prefer_binary",
                "requires_python_skipped_reasons",
                "make_link_evaluator",
                "_sort_links",
                "_log_skipped_link",
                "get_install_candidate",
                "evaluate_links",
                "process_project_url",
                "find_all_candidates",
                "make_candidate_evaluator",
                "find_best_candidate",
                "find_requirement",
                "_format_versions",
                "_should_install_candidate"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/commands/": {
        "configuration.py": {
            "list-of-functions": [
                "add_options",
                "run",
                "_determine_file",
                "list_values",
                "get_name",
                "set_name_value",
                "unset_name",
                "list_config_values",
                "print_config_file_values",
                "print_env_var_values",
                "open_in_editor",
                "_get_n_args",
                "_save_configuration",
                "_determine_editor"
            ]
        },
        "show.py": {
            "list-of-functions": [
                "search_packages_info",
                "print_results",
                "add_options",
                "run",
                "_get_requiring_packages"
            ]
        },
        "list.py": {
            "list-of-functions": [
                "format_for_columns",
                "format_for_json",
                "add_options",
                "_build_package_finder",
                "run",
                "get_outdated",
                "get_uptodate",
                "get_not_required",
                "iter_packages_latest_infos",
                "output_package_listing",
                "output_package_listing_columns",
                "latest_info"
            ]
        },
        "check.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "index.py": {
            "list-of-functions": [
                "add_options",
                "run",
                "_build_package_finder",
                "get_available_package_versions"
            ]
        },
        "completion.py": {
            "list-of-functions": [
                "add_options",
                "run"
            ]
        },
        "download.py": {
            "list-of-functions": [
                "add_options",
                "run"
            ]
        },
        "cache.py": {
            "list-of-functions": [
                "add_options",
                "run",
                "get_cache_dir",
                "get_cache_info",
                "list_cache_items",
                "format_for_human",
                "format_for_abspath",
                "remove_cache_items",
                "purge_cache",
                "_cache_dir",
                "_find_http_files",
                "_find_wheels"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "create_command",
                "get_similar_commands"
            ]
        },
        "hash.py": {
            "list-of-functions": [
                "_hash_of_file",
                "add_options",
                "run"
            ]
        },
        "inspect.py": {
            "list-of-functions": [
                "add_options",
                "run",
                "_dist_to_dict"
            ]
        },
        "debug.py": {
            "list-of-functions": [
                "show_value",
                "show_sys_implementation",
                "create_vendor_txt_map",
                "get_module_from_module_name",
                "get_vendor_version_from_module",
                "show_actual_vendor_versions",
                "show_vendor_versions",
                "show_tags",
                "ca_bundle_info",
                "add_options",
                "run"
            ]
        },
        "uninstall.py": {
            "list-of-functions": [
                "add_options",
                "run"
            ]
        },
        "freeze.py": {
            "list-of-functions": [
                "add_options",
                "run"
            ]
        },
        "search.py": {
            "list-of-functions": [
                "transform_hits",
                "print_dist_installation_info",
                "print_results",
                "highest_version",
                "add_options",
                "run",
                "search"
            ]
        },
        "install.py": {
            "list-of-functions": [
                "get_lib_location_guesses",
                "site_packages_writable",
                "decide_user_install",
                "create_os_error_message",
                "add_options",
                "run",
                "_handle_target_dir",
                "_determine_conflicts",
                "_warn_about_conflicts"
            ]
        },
        "help.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "add_options",
                "run"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/metadata/": {
        "_json.py": {
            "list-of-functions": [
                "json_name",
                "msg_to_json",
                "sanitise_header"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_should_use_importlib_metadata",
                "select_backend",
                "get_default_environment",
                "get_environment",
                "get_directory_distribution",
                "get_wheel_distribution",
                "get_metadata_distribution"
            ]
        },
        "pkg_resources.py": {
            "list-of-functions": [
                "__init__",
                "has_metadata",
                "get_metadata",
                "get_metadata_lines",
                "metadata_isdir",
                "metadata_listdir",
                "run_script",
                "__init__",
                "from_directory",
                "from_metadata_file_contents",
                "from_wheel",
                "location",
                "installed_location",
                "info_location",
                "installed_by_distutils",
                "canonical_name",
                "version",
                "is_file",
                "iter_distutils_script_names",
                "read_text",
                "iter_entry_points",
                "_metadata_impl",
                "iter_dependencies",
                "iter_provided_extras",
                "__init__",
                "default",
                "from_paths",
                "_iter_distributions",
                "_search_distribution",
                "get_distribution"
            ]
        },
        "base.py": {
            "list-of-functions": [
                "_convert_installed_files_path",
                "name",
                "value",
                "group",
                "from_directory",
                "from_metadata_file_contents",
                "from_wheel",
                "__repr__",
                "__str__",
                "location",
                "editable_project_location",
                "installed_location",
                "info_location",
                "installed_by_distutils",
                "installed_as_egg",
                "installed_with_setuptools_egg_info",
                "installed_with_dist_info",
                "canonical_name",
                "version",
                "setuptools_filename",
                "direct_url",
                "installer",
                "requested",
                "editable",
                "local",
                "in_usersite",
                "in_site_packages",
                "is_file",
                "iter_distutils_script_names",
                "read_text",
                "iter_entry_points",
                "_metadata_impl",
                "_metadata_cached",
                "metadata",
                "metadata_dict",
                "metadata_version",
                "raw_name",
                "requires_python",
                "iter_dependencies",
                "iter_provided_extras",
                "_iter_declared_entries_from_record",
                "_iter_declared_entries_from_legacy",
                "iter_declared_entries",
                "_iter_requires_txt_entries",
                "_iter_egg_info_extras",
                "_iter_egg_info_dependencies",
                "_add_egg_info_requires",
                "default",
                "from_paths",
                "get_distribution",
                "_iter_distributions",
                "iter_all_distributions",
                "iter_installed_distributions",
                "as_zipfile",
                "__init__",
                "as_zipfile",
                "__init__",
                "as_zipfile"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/metadata/importlib/": {
        "_dists.py": {
            "list-of-functions": [
                "__init__",
                "from_zipfile",
                "iterdir",
                "read_text",
                "__init__",
                "from_directory",
                "from_metadata_file_contents",
                "from_wheel",
                "location",
                "info_location",
                "installed_location",
                "_get_dist_name_from_location",
                "canonical_name",
                "version",
                "is_file",
                "iter_distutils_script_names",
                "read_text",
                "iter_entry_points",
                "_metadata_impl",
                "iter_provided_extras",
                "iter_dependencies"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_compat.py": {
            "list-of-functions": [
                "get_info_location",
                "get_dist_name",
                "__init__",
                "__str__",
                "name",
                "parent"
            ]
        },
        "_envs.py": {
            "list-of-functions": [
                "_looks_like_wheel",
                "_emit_egg_deprecation",
                "__init__",
                "_find_impl",
                "find",
                "find_linked",
                "_find_eggs_in_dir",
                "_find_eggs_in_zip",
                "find_eggs",
                "__init__",
                "default",
                "from_paths",
                "_iter_distributions",
                "get_distribution"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_internal/distributions/": {
        "__init__.py": {
            "list-of-functions": [
                "make_distribution_for_install_requirement"
            ]
        },
        "sdist.py": {
            "list-of-functions": [
                "get_metadata_distribution",
                "prepare_distribution_metadata",
                "_prepare_build_backend",
                "_get_build_requires_wheel",
                "_get_build_requires_editable",
                "_install_build_reqs",
                "_raise_conflicts",
                "_raise_missing_reqs"
            ]
        },
        "installed.py": {
            "list-of-functions": [
                "get_metadata_distribution",
                "prepare_distribution_metadata"
            ]
        },
        "base.py": {
            "list-of-functions": [
                "__init__",
                "get_metadata_distribution",
                "prepare_distribution_metadata"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "get_metadata_distribution",
                "prepare_distribution_metadata"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/": {
        "__init__.py": {
            "list-of-functions": [
                "vendored"
            ]
        },
        "six.py": {
            "list-of-functions": [
                "_add_doc",
                "_import_module",
                "add_move",
                "remove_move",
                "assertCountEqual",
                "assertRaisesRegex",
                "assertRegex",
                "assertNotRegex",
                "with_metaclass",
                "add_metaclass",
                "ensure_binary",
                "ensure_str",
                "ensure_text",
                "python_2_unicode_compatible",
                "__init__",
                "__get__",
                "__init__",
                "_resolve",
                "__getattr__",
                "__init__",
                "__dir__",
                "__init__",
                "_resolve",
                "__init__",
                "_add_module",
                "_get_module",
                "find_module",
                "find_spec",
                "__get_module",
                "load_module",
                "is_package",
                "get_code",
                "create_module",
                "exec_module",
                "__dir__",
                "get_unbound_function",
                "create_unbound_method",
                "get_unbound_function",
                "create_bound_method",
                "create_unbound_method",
                "iterkeys",
                "itervalues",
                "iteritems",
                "iterlists",
                "iterkeys",
                "itervalues",
                "iteritems",
                "iterlists",
                "b",
                "u",
                "b",
                "u",
                "byte2int",
                "indexbytes",
                "reraise",
                "exec_",
                "raise_from",
                "print_",
                "print_",
                "_update_wrapper",
                "wraps",
                "wrapper",
                "advance_iterator",
                "callable",
                "next",
                "write",
                "__new__",
                "__prepare__",
                "__len__"
            ]
        },
        "typing_extensions.py": {
            "list-of-functions": [
                "_check_generic",
                "_collect_type_vars",
                "IntVar",
                "_get_protocol_attrs",
                "_is_callable_members_only",
                "_maybe_adjust_parameters",
                "_concatenate_getitem",
                "_should_collect_from_parameters",
                "final",
                "overload",
                "get_overloads",
                "clear_overloads",
                "_no_init",
                "runtime_checkable",
                "_check_fails",
                "_dict_new",
                "_typeddict_new",
                "is_typeddict",
                "assert_type",
                "_strip_extras",
                "get_type_hints",
                "get_origin",
                "get_args",
                "__init__",
                "__init__",
                "__init__",
                "__getattr__",
                "__mro_entries__",
                "__repr__",
                "__reduce__",
                "__call__",
                "__or__",
                "__ror__",
                "__instancecheck__",
                "__subclasscheck__",
                "__getitem__",
                "LiteralString",
                "Self",
                "Never",
                "reveal_type",
                "assert_never",
                "dataclass_transform",
                "override",
                "deprecated",
                "_caller",
                "_make_nmtuple",
                "NamedTuple",
                "_namedtuple_mro_entries",
                "_should_collect_from_parameters",
                "_should_collect_from_parameters",
                "__instancecheck__",
                "__repr__",
                "__new__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__getitem__",
                "__instancecheck__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "__index__",
                "__init__",
                "__new__",
                "__init__",
                "copy_with",
                "__repr__",
                "__reduce__",
                "__eq__",
                "__hash__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "TypeAlias",
                "__copy__",
                "__deepcopy__",
                "__init__",
                "__repr__",
                "__eq__",
                "__init__",
                "__repr__",
                "__eq__",
                "__init__",
                "args",
                "kwargs",
                "__init__",
                "__repr__",
                "__hash__",
                "__eq__",
                "__reduce__",
                "__call__",
                "__init__",
                "__repr__",
                "__hash__",
                "__call__",
                "__parameters__",
                "Concatenate",
                "TypeGuard",
                "Required",
                "NotRequired",
                "Unpack",
                "_is_unpack",
                "_is_unpack",
                "__init__",
                "__iter__",
                "__init__",
                "__repr__",
                "__hash__",
                "__eq__",
                "__reduce__",
                "__init_subclass__",
                "decorator",
                "decorator",
                "__new__",
                "_proto_hook",
                "__repr__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__new__",
                "wrapper"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/packaging/": {
        "tags.py": {
            "list-of-functions": [
                "parse_tag",
                "_get_config_var",
                "_normalize_string",
                "_abi3_applies",
                "_cpython_abis",
                "cpython_tags",
                "_generic_abi",
                "generic_tags",
                "_py_interpreter_range",
                "compatible_tags",
                "_mac_arch",
                "_mac_binary_formats",
                "mac_platforms",
                "_linux_platforms",
                "_generic_platforms",
                "platform_tags",
                "interpreter_name",
                "interpreter_version",
                "_version_nodot",
                "sys_tags",
                "__init__",
                "interpreter",
                "abi",
                "platform",
                "__eq__",
                "__hash__",
                "__str__",
                "__repr__"
            ]
        },
        "_musllinux.py": {
            "list-of-functions": [
                "_read_unpacked",
                "_parse_ld_musl_from_elf",
                "_parse_musl_version",
                "_get_musl_version",
                "platform_tags"
            ]
        },
        "version.py": {
            "list-of-functions": [
                "parse",
                "_parse_version_parts",
                "_legacy_cmpkey",
                "_parse_letter_version",
                "_parse_local_version",
                "_cmpkey",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__ge__",
                "__gt__",
                "__ne__",
                "__init__",
                "__str__",
                "__repr__",
                "public",
                "base_version",
                "epoch",
                "release",
                "pre",
                "post",
                "dev",
                "local",
                "is_prerelease",
                "is_postrelease",
                "is_devrelease",
                "__init__",
                "__repr__",
                "__str__",
                "epoch",
                "release",
                "pre",
                "post",
                "dev",
                "local",
                "public",
                "base_version",
                "is_prerelease",
                "is_postrelease",
                "is_devrelease",
                "major",
                "minor",
                "micro"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "utils.py": {
            "list-of-functions": [
                "canonicalize_name",
                "canonicalize_version",
                "parse_wheel_filename",
                "parse_sdist_filename"
            ]
        },
        "requirements.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__"
            ]
        },
        "_structures.py": {
            "list-of-functions": [
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__",
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__"
            ]
        },
        "markers.py": {
            "list-of-functions": [
                "_coerce_parse_result",
                "_format_marker",
                "_eval_op",
                "_get_env",
                "_evaluate_markers",
                "format_full_version",
                "default_environment",
                "__init__",
                "__str__",
                "__repr__",
                "serialize",
                "serialize",
                "serialize",
                "serialize",
                "__init__",
                "__str__",
                "__repr__",
                "evaluate"
            ]
        },
        "__about__.py": {
            "list-of-functions": []
        },
        "_manylinux.py": {
            "list-of-functions": [
                "_get_elf_header",
                "_is_linux_armhf",
                "_is_linux_i686",
                "_have_compatible_abi",
                "_glibc_version_string_confstr",
                "_glibc_version_string_ctypes",
                "_glibc_version_string",
                "_parse_glibc_version",
                "_get_glibc_version",
                "_is_compatible",
                "platform_tags",
                "__init__",
                "unpack"
            ]
        },
        "specifiers.py": {
            "list-of-functions": [
                "_require_version_compare",
                "_version_split",
                "_is_not_suffix",
                "_pad_version",
                "__str__",
                "__hash__",
                "__eq__",
                "prereleases",
                "prereleases",
                "contains",
                "filter",
                "__init__",
                "__repr__",
                "__str__",
                "_canonical_spec",
                "__hash__",
                "__eq__",
                "_get_operator",
                "_coerce_version",
                "operator",
                "version",
                "prereleases",
                "prereleases",
                "__contains__",
                "contains",
                "filter",
                "__init__",
                "_coerce_version",
                "_compare_equal",
                "_compare_not_equal",
                "_compare_less_than_equal",
                "_compare_greater_than_equal",
                "_compare_less_than",
                "_compare_greater_than",
                "wrapped",
                "_compare_compatible",
                "_compare_equal",
                "_compare_not_equal",
                "_compare_less_than_equal",
                "_compare_greater_than_equal",
                "_compare_less_than",
                "_compare_greater_than",
                "_compare_arbitrary",
                "prereleases",
                "prereleases",
                "__init__",
                "__repr__",
                "__str__",
                "__hash__",
                "__and__",
                "__eq__",
                "__len__",
                "__iter__",
                "prereleases",
                "prereleases",
                "__contains__",
                "contains",
                "filter"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/msgpack/": {
        "__init__.py": {
            "list-of-functions": [
                "pack",
                "packb",
                "unpack"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__str__"
            ]
        },
        "fallback.py": {
            "list-of-functions": [
                "_check_type_strict",
                "_get_data_from_buffer",
                "unpackb",
                "dict_iteritems",
                "dict_iteritems",
                "_is_recursionerror",
                "_is_recursionerror",
                "_unpack_from",
                "__init__",
                "feed",
                "_consume",
                "_got_extradata",
                "_get_extradata",
                "read_bytes",
                "_read",
                "_reserve",
                "_read_header",
                "_unpack",
                "__iter__",
                "__next__",
                "skip",
                "unpack",
                "read_array_header",
                "read_map_header",
                "tell",
                "__init__",
                "_pack",
                "pack",
                "pack_map_pairs",
                "pack_array_header",
                "pack_map_header",
                "pack_ext_type",
                "_pack_array_header",
                "_pack_map_header",
                "_pack_map_pairs",
                "_pack_raw_header",
                "_pack_bin_header",
                "bytes",
                "reset",
                "getbuffer",
                "__init__",
                "write",
                "getvalue"
            ]
        },
        "ext.py": {
            "list-of-functions": [
                "__new__",
                "__init__",
                "__repr__",
                "__eq__",
                "__ne__",
                "__hash__",
                "from_bytes",
                "to_bytes",
                "from_unix",
                "to_unix",
                "from_unix_nano",
                "to_unix_nano",
                "to_datetime",
                "from_datetime"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/chardet/": {
        "resultdict.py": {
            "list-of-functions": []
        },
        "enums.py": {
            "list-of-functions": [
                "get_num_categories"
            ]
        },
        "langhungarianmodel.py": {
            "list-of-functions": []
        },
        "mbcssm.py": {
            "list-of-functions": []
        },
        "johabfreq.py": {
            "list-of-functions": []
        },
        "langthaimodel.py": {
            "list-of-functions": []
        },
        "version.py": {
            "list-of-functions": []
        },
        "utf1632prober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "approx_32bit_chars",
                "approx_16bit_chars",
                "is_likely_utf32be",
                "is_likely_utf32le",
                "is_likely_utf16be",
                "is_likely_utf16le",
                "validate_utf32_characters",
                "validate_utf16_characters",
                "feed",
                "state",
                "get_confidence"
            ]
        },
        "langbulgarianmodel.py": {
            "list-of-functions": []
        },
        "euckrprober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "sjisprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "cp949prober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "detect",
                "detect_all"
            ]
        },
        "euctwfreq.py": {
            "list-of-functions": []
        },
        "langhebrewmodel.py": {
            "list-of-functions": []
        },
        "chardistribution.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "feed",
                "get_confidence",
                "got_enough_data",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order",
                "__init__",
                "get_order"
            ]
        },
        "latin1prober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "charsetprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "state",
                "get_confidence",
                "filter_high_byte_only",
                "filter_international_words",
                "remove_xml_tags"
            ]
        },
        "gb2312prober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "mbcharsetprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "feed",
                "get_confidence"
            ]
        },
        "euctwprober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "langrussianmodel.py": {
            "list-of-functions": []
        },
        "codingstatemachine.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "next_state",
                "get_current_charlen",
                "get_coding_state_machine",
                "language"
            ]
        },
        "escprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "get_confidence",
                "feed"
            ]
        },
        "universaldetector.py": {
            "list-of-functions": [
                "__init__",
                "input_state",
                "has_win_bytes",
                "charset_probers",
                "reset",
                "feed",
                "close"
            ]
        },
        "utf8prober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "gb2312freq.py": {
            "list-of-functions": []
        },
        "mbcsgroupprober.py": {
            "list-of-functions": [
                "__init__"
            ]
        },
        "langgreekmodel.py": {
            "list-of-functions": []
        },
        "eucjpprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "jisfreq.py": {
            "list-of-functions": []
        },
        "escsm.py": {
            "list-of-functions": []
        },
        "langturkishmodel.py": {
            "list-of-functions": []
        },
        "sbcharsetprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "big5freq.py": {
            "list-of-functions": []
        },
        "euckrfreq.py": {
            "list-of-functions": []
        },
        "codingstatemachinedict.py": {
            "list-of-functions": []
        },
        "big5prober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "johabprober.py": {
            "list-of-functions": [
                "__init__",
                "charset_name",
                "language"
            ]
        },
        "hebrewprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "set_model_probers",
                "is_final",
                "is_non_final",
                "feed",
                "charset_name",
                "language",
                "state"
            ]
        },
        "macromanprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "charsetgroupprober.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "charset_name",
                "language",
                "feed",
                "get_confidence"
            ]
        },
        "sbcsgroupprober.py": {
            "list-of-functions": [
                "__init__"
            ]
        },
        "jpcntx.py": {
            "list-of-functions": [
                "__init__",
                "reset",
                "feed",
                "got_enough_data",
                "get_confidence",
                "get_order",
                "__init__",
                "charset_name",
                "get_order",
                "get_order"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/chardet/cli/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "chardetect.py": {
            "list-of-functions": [
                "description_of",
                "main"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/chardet/metadata/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "languages.py": {
            "list-of-functions": [
                "__init__",
                "__repr__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/webencodings/": {
        "labels.py": {
            "list-of-functions": []
        },
        "mklabels.py": {
            "list-of-functions": [
                "assert_lower",
                "generate"
            ]
        },
        "x_user_defined.py": {
            "list-of-functions": [
                "encode",
                "decode",
                "encode",
                "decode"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "ascii_lower",
                "lookup",
                "_get_encoding",
                "decode",
                "_detect_bom",
                "encode",
                "iter_decode",
                "_iter_decode_generator",
                "iter_encode",
                "_iter_encode_generator",
                "__init__",
                "__repr__",
                "__init__",
                "decode",
                "__init__"
            ]
        },
        "tests.py": {
            "list-of-functions": [
                "assert_raises",
                "test_labels",
                "test_all_labels",
                "test_invalid_label",
                "test_decode",
                "test_encode",
                "test_iter_decode",
                "test_iter_encode",
                "test_x_user_defined",
                "iter_decode_to_string"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pygments/": {
        "modeline.py": {
            "list-of-functions": [
                "get_filetype_from_line",
                "get_filetype_from_buffer"
            ]
        },
        "console.py": {
            "list-of-functions": [
                "reset_color",
                "colorize",
                "ansiformat"
            ]
        },
        "scanner.py": {
            "list-of-functions": [
                "__init__",
                "eos",
                "check",
                "test",
                "scan",
                "get_char",
                "__repr__"
            ]
        },
        "formatter.py": {
            "list-of-functions": [
                "_lookup_style",
                "__init__",
                "get_style_defs",
                "format"
            ]
        },
        "token.py": {
            "list-of-functions": [
                "is_token_subtype",
                "string_to_tokentype",
                "split",
                "__init__",
                "__contains__",
                "__getattr__",
                "__repr__",
                "__copy__",
                "__deepcopy__"
            ]
        },
        "style.py": {
            "list-of-functions": [
                "__new__",
                "style_for_token",
                "list_styles",
                "styles_token",
                "__iter__",
                "__len__",
                "colorformat"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "get_choice_opt",
                "get_bool_opt",
                "get_int_opt",
                "get_list_opt",
                "docstring_headline",
                "make_analysator",
                "shebang_matches",
                "doctype_matches",
                "html_doctype_matches",
                "looks_like_xml",
                "surrogatepair",
                "format_lines",
                "duplicates_removed",
                "guess_decode",
                "guess_decode_from_terminal",
                "terminal_encoding",
                "text_analyse",
                "get",
                "close"
            ]
        },
        "sphinxext.py": {
            "list-of-functions": [
                "setup",
                "run",
                "document_lexers_overview",
                "document_lexers",
                "document_formatters",
                "document_filters",
                "format_link",
                "write_row",
                "write_seperator"
            ]
        },
        "cmdline.py": {
            "list-of-functions": [
                "_parse_options",
                "_parse_filters",
                "_print_help",
                "_print_list",
                "_print_list_as_json",
                "main_inner",
                "main",
                "is_only_option",
                "__init__"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "lex",
                "format",
                "highlight"
            ]
        },
        "unistring.py": {
            "list-of-functions": [
                "combine",
                "allexcept",
                "_handle_runs"
            ]
        },
        "lexer.py": {
            "list-of-functions": [
                "bygroups",
                "using",
                "do_insertions",
                "__new__",
                "__init__",
                "__repr__",
                "add_filter",
                "analyse_text",
                "get_tokens",
                "get_tokens_unprocessed",
                "__init__",
                "get_tokens_unprocessed",
                "__repr__",
                "__new__",
                "__init__",
                "__init__",
                "start",
                "end",
                "group",
                "groups",
                "groupdict",
                "callback",
                "__init__",
                "__init__",
                "get",
                "_process_regex",
                "_process_token",
                "_process_new_state",
                "_process_state",
                "process_tokendef",
                "get_tokendefs",
                "__call__",
                "get_tokens_unprocessed",
                "__init__",
                "__repr__",
                "get_tokens_unprocessed",
                "_process_regex",
                "get_tokens_unprocessed",
                "streamer",
                "callback",
                "callback",
                "match_func"
            ]
        },
        "regexopt.py": {
            "list-of-functions": [
                "make_charset",
                "regex_opt_inner",
                "regex_opt"
            ]
        },
        "plugin.py": {
            "list-of-functions": [
                "iter_entry_points",
                "find_plugin_lexers",
                "find_plugin_formatters",
                "find_plugin_styles",
                "find_plugin_filters"
            ]
        },
        "filter.py": {
            "list-of-functions": [
                "apply_filters",
                "simplefilter",
                "_apply",
                "__init__",
                "filter",
                "__init__",
                "filter"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pygments/filters/": {
        "__init__.py": {
            "list-of-functions": [
                "find_filter_class",
                "get_filter_by_name",
                "get_all_filters",
                "_replace_special",
                "__init__",
                "filter",
                "__init__",
                "filter",
                "__init__",
                "filter",
                "__init__",
                "filter",
                "__init__",
                "filter",
                "__init__",
                "filter",
                "__init__",
                "gobble",
                "filter",
                "__init__",
                "filter",
                "replacefunc"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pygments/lexers/": {
        "__init__.py": {
            "list-of-functions": [
                "_load_lexers",
                "get_all_lexers",
                "find_lexer_class",
                "find_lexer_class_by_name",
                "get_lexer_by_name",
                "load_lexer_from_file",
                "find_lexer_class_for_filename",
                "get_lexer_for_filename",
                "get_lexer_for_mimetype",
                "_iter_lexerclasses",
                "guess_lexer_for_filename",
                "guess_lexer",
                "get_rating",
                "type_sort",
                "__getattr__"
            ]
        },
        "python.py": {
            "list-of-functions": [
                "innerstring_rules",
                "fstring_rules",
                "analyse_text",
                "innerstring_rules",
                "analyse_text",
                "__init__",
                "get_tokens_unprocessed",
                "get_tokens_unprocessed",
                "analyse_text"
            ]
        },
        "_mapping.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pygments/formatters/": {
        "terminal.py": {
            "list-of-functions": [
                "__init__",
                "format",
                "_write_lineno",
                "_get_color",
                "format_unencoded"
            ]
        },
        "html.py": {
            "list-of-functions": [
                "escape_html",
                "webify",
                "_get_ttype_class",
                "__init__",
                "_get_css_class",
                "_get_css_classes",
                "_get_css_inline_styles",
                "_create_stylesheet",
                "get_style_defs",
                "get_token_style_defs",
                "get_background_style_defs",
                "get_linenos_style_defs",
                "get_css_prefix",
                "_pre_style",
                "_linenos_style",
                "_linenos_special_style",
                "_decodeifneeded",
                "_wrap_full",
                "_wrap_tablelinenos",
                "_wrap_inlinelinenos",
                "_wrap_lineanchors",
                "_wrap_linespans",
                "_wrap_div",
                "_wrap_pre",
                "_wrap_code",
                "_translate_parts",
                "_format_lines",
                "_lookup_ctag",
                "_highlight_lines",
                "wrap",
                "format_unencoded",
                "prefix"
            ]
        },
        "irc.py": {
            "list-of-functions": [
                "ircformat",
                "__init__",
                "_write_lineno",
                "format_unencoded"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_load_formatters",
                "get_all_formatters",
                "find_formatter_class",
                "get_formatter_by_name",
                "load_formatter_from_file",
                "get_formatter_for_filename",
                "__getattr__"
            ]
        },
        "other.py": {
            "list-of-functions": [
                "format",
                "__init__",
                "format",
                "__init__",
                "format",
                "write",
                "flush"
            ]
        },
        "img.py": {
            "list-of-functions": [
                "__init__",
                "_get_nix_font_path",
                "_create_nix",
                "_get_mac_font_path",
                "_create_mac",
                "_lookup_win",
                "_create_win",
                "get_char_size",
                "get_text_size",
                "get_font",
                "__init__",
                "get_style_defs",
                "_get_line_height",
                "_get_line_y",
                "_get_char_width",
                "_get_char_x",
                "_get_text_pos",
                "_get_linenumber_pos",
                "_get_text_color",
                "_get_text_bg_color",
                "_get_style_font",
                "_get_image_size",
                "_draw_linenumber",
                "_draw_text",
                "_create_drawables",
                "_draw_line_numbers",
                "_paint_line_number_bg",
                "format"
            ]
        },
        "terminal256.py": {
            "list-of-functions": [
                "__init__",
                "escape",
                "color_string",
                "true_color_string",
                "reset_string",
                "__init__",
                "_build_color_table",
                "_closest_color",
                "_color_index",
                "_setup_styles",
                "_write_lineno",
                "format",
                "format_unencoded",
                "_build_color_table",
                "_color_tuple",
                "_setup_styles"
            ]
        },
        "rtf.py": {
            "list-of-functions": [
                "__init__",
                "_escape",
                "_escape_text",
                "format_unencoded"
            ]
        },
        "svg.py": {
            "list-of-functions": [
                "escape_html",
                "__init__",
                "format_unencoded",
                "_get_style"
            ]
        },
        "bbcode.py": {
            "list-of-functions": [
                "__init__",
                "_make_styles",
                "format_unencoded"
            ]
        },
        "pangomarkup.py": {
            "list-of-functions": [
                "escape_special_chars",
                "__init__",
                "format_unencoded"
            ]
        },
        "_mapping.py": {
            "list-of-functions": []
        },
        "groff.py": {
            "list-of-functions": [
                "__init__",
                "_make_styles",
                "_define_colors",
                "_write_lineno",
                "_wrap_line",
                "_escape_chars",
                "format_unencoded"
            ]
        },
        "latex.py": {
            "list-of-functions": [
                "escape_tex",
                "_get_ttype_name",
                "__init__",
                "_create_stylesheet",
                "get_style_defs",
                "format_unencoded",
                "__init__",
                "get_tokens_unprocessed",
                "_find_safe_escape_tokens",
                "_filter_to",
                "_find_escape_tokens",
                "rgbcolor"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pygments/styles/": {
        "__init__.py": {
            "list-of-functions": [
                "get_style_by_name",
                "get_all_styles"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/distlib/": {
        "locators.py": {
            "list-of-functions": [
                "get_all_distribution_names",
                "http_error_302",
                "__init__",
                "get_errors",
                "clear_errors",
                "clear_cache",
                "_get_scheme",
                "_set_scheme",
                "_get_project",
                "get_distribution_names",
                "get_project",
                "score_url",
                "prefer_url",
                "split_filename",
                "convert_url_to_download_info",
                "_get_digest",
                "_update_version_data",
                "locate",
                "__init__",
                "get_distribution_names",
                "_get_project",
                "__init__",
                "get_distribution_names",
                "_get_project",
                "__init__",
                "links",
                "__init__",
                "_prepare_threads",
                "_wait_threads",
                "_get_project",
                "_is_platform_dependent",
                "_process_download",
                "_should_queue",
                "_fetch",
                "get_page",
                "get_distribution_names",
                "__init__",
                "should_include",
                "_get_project",
                "get_distribution_names",
                "get_distribution_names",
                "_get_project",
                "__init__",
                "_get_project",
                "__init__",
                "clear_cache",
                "_set_scheme",
                "_get_project",
                "get_distribution_names",
                "__init__",
                "add_distribution",
                "remove_distribution",
                "get_matcher",
                "find_providers",
                "try_to_replace",
                "find",
                "same_project",
                "clean"
            ]
        },
        "metadata.py": {
            "list-of-functions": [
                "_version2fieldlist",
                "_best_version",
                "_get_name_and_version",
                "_has_marker",
                "__init__",
                "set_metadata_version",
                "_write_field",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__contains__",
                "_convert_name",
                "_default_value",
                "_remove_line_prefix",
                "__getattr__",
                "get_fullname",
                "is_field",
                "is_multi_field",
                "read",
                "read_file",
                "write",
                "write_file",
                "update",
                "set",
                "get",
                "check",
                "todict",
                "add_requirements",
                "keys",
                "__iter__",
                "values",
                "items",
                "__repr__",
                "__init__",
                "__getattribute__",
                "_validate_value",
                "__setattr__",
                "name_and_version",
                "provides",
                "provides",
                "get_requirements",
                "dictionary",
                "dependencies",
                "dependencies",
                "_validate_mapping",
                "validate",
                "todict",
                "_from_legacy",
                "_to_legacy",
                "write",
                "add_requirements",
                "__repr__",
                "_set",
                "are_valid_constraints",
                "process_entries"
            ]
        },
        "version.py": {
            "list-of-functions": [
                "_pep_440_key",
                "_match_prefix",
                "_suggest_semantic_version",
                "_suggest_normalized_version",
                "_legacy_key",
                "is_semver",
                "_semantic_key",
                "get_scheme",
                "__init__",
                "parse",
                "_check_compatible",
                "__eq__",
                "__ne__",
                "__lt__",
                "__gt__",
                "__le__",
                "__ge__",
                "__hash__",
                "__repr__",
                "__str__",
                "is_prerelease",
                "parse_requirement",
                "__init__",
                "match",
                "exact_version",
                "_check_compatible",
                "__eq__",
                "__ne__",
                "__hash__",
                "__repr__",
                "__str__",
                "parse",
                "is_prerelease",
                "_adjust_local",
                "_match_lt",
                "_match_gt",
                "_match_le",
                "_match_ge",
                "_match_eq",
                "_match_arbitrary",
                "_match_ne",
                "_match_compatible",
                "get_parts",
                "parse",
                "is_prerelease",
                "_match_compatible",
                "make_tuple",
                "parse",
                "is_prerelease",
                "__init__",
                "is_valid_version",
                "is_valid_matcher",
                "is_valid_constraint_list",
                "suggest"
            ]
        },
        "compat.py": {
            "list-of-functions": [
                "quote",
                "_dnsname_match",
                "match_hostname",
                "which",
                "__init__",
                "__enter__",
                "__exit__",
                "__enter__",
                "__exit__",
                "open",
                "python_implementation",
                "callable",
                "fsencode",
                "fsdecode",
                "_get_normal_name",
                "detect_encoding",
                "cache_from_source",
                "valid_ident",
                "pop",
                "__init__",
                "_access_check",
                "read_or_stop",
                "find_cookie",
                "__init__",
                "__missing__",
                "__getitem__",
                "get",
                "__len__",
                "__iter__",
                "__contains__",
                "__bool__",
                "__repr__",
                "fromkeys",
                "copy",
                "new_child",
                "parents",
                "__setitem__",
                "__delitem__",
                "popitem",
                "pop",
                "clear",
                "__init__",
                "__setitem__",
                "__delitem__",
                "__iter__",
                "__reversed__",
                "clear",
                "popitem",
                "keys",
                "values",
                "items",
                "iterkeys",
                "itervalues",
                "iteritems",
                "update",
                "pop",
                "setdefault",
                "__repr__",
                "__reduce__",
                "copy",
                "fromkeys",
                "__eq__",
                "__ne__",
                "viewkeys",
                "viewvalues",
                "viewitems",
                "__getitem__",
                "get",
                "__getitem__",
                "pop",
                "__getitem__",
                "__init__",
                "resolve",
                "ext_convert",
                "cfg_convert",
                "convert",
                "configure_custom",
                "as_tuple",
                "_recursive_repr",
                "decorating_function",
                "wrapper"
            ]
        },
        "index.py": {
            "list-of-functions": [
                "__init__",
                "_get_pypirc_command",
                "read_configuration",
                "save_configuration",
                "check_credentials",
                "register",
                "_reader",
                "get_sign_command",
                "run_command",
                "sign_file",
                "upload_file",
                "upload_documentation",
                "get_verify_command",
                "verify_signature",
                "download_file",
                "send_request",
                "encode_request",
                "search"
            ]
        },
        "manifest.py": {
            "list-of-functions": [
                "__init__",
                "findall",
                "add",
                "add_many",
                "sorted",
                "clear",
                "process_directive",
                "_parse_directive",
                "_include_pattern",
                "_exclude_pattern",
                "_translate_pattern",
                "_glob_to_re",
                "add_dir"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "parse_marker",
                "parse_requirement",
                "get_resources_dests",
                "in_venv",
                "get_executable",
                "proceed",
                "extract_by_key",
                "read_exports",
                "write_exports",
                "tempdir",
                "chdir",
                "socket_timeout",
                "convert_path",
                "resolve",
                "get_export_entry",
                "get_cache_base",
                "path_to_cache_dir",
                "ensure_slash",
                "parse_credentials",
                "get_process_umask",
                "is_string_sequence",
                "split_filename",
                "parse_name_and_version",
                "get_extras",
                "_get_external_data",
                "get_project_data",
                "get_package_data",
                "unarchive",
                "zip_dir",
                "iglob",
                "_iglob",
                "_csv_open",
                "normalize_name",
                "_load_pypirc",
                "_store_pypirc",
                "get_host_platform",
                "get_platform",
                "marker_var",
                "marker_expr",
                "marker_and",
                "marker",
                "get_rel_path",
                "read_stream",
                "__init__",
                "__get__",
                "__init__",
                "_init_record",
                "record_as_written",
                "newer",
                "copy_file",
                "copy_stream",
                "write_binary_file",
                "write_text_file",
                "set_mode",
                "ensure_dir",
                "byte_compile",
                "ensure_removed",
                "is_writable",
                "commit",
                "rollback",
                "__init__",
                "value",
                "__repr__",
                "__eq__",
                "__init__",
                "prefix_to_dir",
                "clear",
                "__init__",
                "add",
                "remove",
                "get_subscribers",
                "publish",
                "__init__",
                "add_node",
                "remove_node",
                "add",
                "remove",
                "is_step",
                "get_steps",
                "strong_connections",
                "dot",
                "check_path",
                "__init__",
                "update",
                "increment",
                "start",
                "stop",
                "maximum",
                "percentage",
                "format_duration",
                "ETA",
                "speed",
                "__init__",
                "make_connection",
                "__init__",
                "__enter__",
                "__exit__",
                "__init__",
                "__iter__",
                "next",
                "__init__",
                "writerow",
                "__init__",
                "configure_custom",
                "__getitem__",
                "inc_convert",
                "__init__",
                "reader",
                "run_command",
                "__init__",
                "read",
                "update",
                "strongconnect",
                "connect",
                "__init__",
                "_conn_maker",
                "https_open",
                "http_open",
                "__init__",
                "make_connection",
                "convert",
                "get_versions"
            ]
        },
        "database.py": {
            "list-of-functions": [
                "make_graph",
                "get_dependent_dists",
                "get_required_dists",
                "make_dist",
                "__init__",
                "clear",
                "add",
                "__init__",
                "_get_cache_enabled",
                "_set_cache_enabled",
                "clear_cache",
                "_yield_distributions",
                "_generate_cache",
                "distinfo_dirname",
                "get_distributions",
                "get_distribution",
                "provides_distribution",
                "get_file_path",
                "get_exported_entries",
                "__init__",
                "source_url",
                "name_and_version",
                "provides",
                "_get_requirements",
                "run_requires",
                "meta_requires",
                "build_requires",
                "test_requires",
                "dev_requires",
                "matches_requirement",
                "__repr__",
                "__eq__",
                "__hash__",
                "__init__",
                "get_hash",
                "__init__",
                "__repr__",
                "__str__",
                "_get_records",
                "exports",
                "read_exports",
                "write_exports",
                "get_resource_path",
                "list_installed_files",
                "write_installed_files",
                "check_installed_files",
                "shared_locations",
                "write_shared_locations",
                "get_distinfo_resource",
                "get_distinfo_file",
                "list_distinfo_files",
                "__eq__",
                "__init__",
                "_get_metadata",
                "__repr__",
                "__str__",
                "check_installed_files",
                "list_installed_files",
                "list_distinfo_files",
                "__eq__",
                "__init__",
                "add_distribution",
                "add_edge",
                "add_missing",
                "_repr_dist",
                "repr_node",
                "to_dot",
                "topological_sort",
                "__repr__",
                "set_name_and_version",
                "parse_requires_data",
                "parse_requires_path",
                "_md5",
                "_size"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "handle",
                "emit",
                "createLock"
            ]
        },
        "markers.py": {
            "list-of-functions": [
                "_is_literal",
                "_get_versions",
                "default_context",
                "interpret",
                "evaluate",
                "format_full_version"
            ]
        },
        "resources.py": {
            "list-of-functions": [
                "register_finder",
                "finder",
                "finder_for_path",
                "__init__",
                "is_stale",
                "get",
                "__init__",
                "as_stream",
                "file_path",
                "bytes",
                "size",
                "resources",
                "__init__",
                "_adjust_path",
                "_make_path",
                "_find",
                "get_cache_info",
                "find",
                "get_stream",
                "get_bytes",
                "get_size",
                "get_resources",
                "is_container",
                "iterator",
                "__init__",
                "_adjust_path",
                "_find",
                "get_cache_info",
                "get_bytes",
                "get_stream",
                "get_size",
                "get_resources",
                "_is_directory",
                "allowed"
            ]
        },
        "scripts.py": {
            "list-of-functions": [
                "enquote_executable",
                "__init__",
                "_get_alternate_executable",
                "_build_shebang",
                "_get_shebang",
                "_get_script_text",
                "get_manifest",
                "_write_script",
                "get_script_filenames",
                "_make_script",
                "_copy_script",
                "dry_run",
                "dry_run",
                "make",
                "make_multiple",
                "_is_shell",
                "_fix_jython_executable",
                "_get_launcher"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "_get_suffixes",
                "_load_dynamic",
                "_get_glibc_version",
                "compatible_tags",
                "is_compatible",
                "_derive_abi",
                "__init__",
                "add",
                "remove",
                "find_module",
                "load_module",
                "__init__",
                "filename",
                "exists",
                "tags",
                "metadata",
                "get_wheel_metadata",
                "info",
                "process_shebang",
                "get_hash",
                "write_record",
                "write_records",
                "build_zip",
                "build",
                "skip_entry",
                "install",
                "_get_dylib_cache",
                "_get_extensions",
                "is_compatible",
                "is_mountable",
                "mount",
                "unmount",
                "verify",
                "update",
                "sorter",
                "get_version",
                "update_version"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pyparsing/": {
        "results.py": {
            "list-of-functions": [
                "__init__",
                "__getitem__",
                "__getstate__",
                "__setstate__",
                "__new__",
                "__init__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__contains__",
                "__len__",
                "__bool__",
                "__iter__",
                "__reversed__",
                "keys",
                "values",
                "items",
                "haskeys",
                "pop",
                "get",
                "insert",
                "append",
                "extend",
                "clear",
                "__getattr__",
                "__add__",
                "__iadd__",
                "__radd__",
                "__repr__",
                "__str__",
                "_asStringList",
                "as_list",
                "as_dict",
                "copy",
                "get_name",
                "dump",
                "pprint",
                "__getstate__",
                "__setstate__",
                "__getnewargs__",
                "__dir__",
                "from_dict",
                "__new__",
                "to_item",
                "is_iterable",
                "find_in_parent"
            ]
        },
        "unicode.py": {
            "list-of-functions": [
                "__init__",
                "__get__",
                "_chars_for_ranges",
                "printables",
                "alphas",
                "nums",
                "alphanums",
                "identchars",
                "identbodychars"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "col",
                "lineno",
                "line",
                "_escape_regex_range_chars",
                "_collapse_string_to_ranges",
                "_flatten",
                "_set",
                "__init__",
                "__init__",
                "__init__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "clear",
                "__delitem__",
                "is_consecutive",
                "escape_re_range_char",
                "no_escape_re_range_char",
                "get",
                "set_",
                "clear",
                "get",
                "set_",
                "clear"
            ]
        },
        "actions.py": {
            "list-of-functions": [
                "match_only_at_col",
                "replace_with",
                "remove_quotes",
                "with_attribute",
                "with_class",
                "__init__",
                "__call__",
                "reset",
                "verify_col",
                "pa"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "__version__",
                "__str__",
                "__repr__"
            ]
        },
        "core.py": {
            "list-of-functions": [
                "enable_diag",
                "disable_diag",
                "enable_all_warnings",
                "_should_enable_warnings",
                "_trim_arity",
                "condition_as_parse_action",
                "_default_start_debug_action",
                "_default_success_debug_action",
                "_default_exception_debug_action",
                "null_debug_action",
                "trace_parse_action",
                "srange",
                "token_map",
                "autoname_elements",
                "enable_all_warnings",
                "extract_tb",
                "wrapper",
                "pa",
                "set_default_whitespace_chars",
                "inline_literals_using",
                "__init__",
                "suppress_warning",
                "copy",
                "set_results_name",
                "_setResultsName",
                "set_break",
                "set_parse_action",
                "add_parse_action",
                "add_condition",
                "set_fail_action",
                "_skipIgnorables",
                "preParse",
                "parseImpl",
                "postParse",
                "_parseNoCache",
                "try_parse",
                "can_parse_next",
                "_parseCache",
                "reset_cache",
                "disable_memoization",
                "enable_left_recursion",
                "enable_packrat",
                "parse_string",
                "scan_string",
                "transform_string",
                "search_string",
                "split",
                "__add__",
                "__radd__",
                "__sub__",
                "__rsub__",
                "__mul__",
                "__rmul__",
                "__or__",
                "__ror__",
                "__xor__",
                "__rxor__",
                "__and__",
                "__rand__",
                "__invert__",
                "__getitem__",
                "__call__",
                "suppress",
                "ignore_whitespace",
                "leave_whitespace",
                "set_whitespace_chars",
                "parse_with_tabs",
                "ignore",
                "set_debug_actions",
                "set_debug",
                "default_name",
                "_generateDefaultName",
                "set_name",
                "name",
                "__str__",
                "__repr__",
                "streamline",
                "recurse",
                "_checkRecursion",
                "validate",
                "parse_file",
                "__eq__",
                "__hash__",
                "matches",
                "run_tests",
                "create_diagram",
                "__init__",
                "_generateDefaultName",
                "__add__",
                "__repr__",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "__init__",
                "__init__",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "set_default_keyword_chars",
                "__init__",
                "parseImpl",
                "__init__",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "parseImpl",
                "__init__",
                "__init__",
                "re",
                "re_match",
                "mayReturnEmpty",
                "_generateDefaultName",
                "parseImpl",
                "parseImplAsGroupList",
                "parseImplAsMatch",
                "sub",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "__init__",
                "_generateDefaultName",
                "parseImpl",
                "__init__",
                "__init__",
                "preParse",
                "parseImpl",
                "__init__",
                "preParse",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "recurse",
                "append",
                "leave_whitespace",
                "ignore_whitespace",
                "ignore",
                "_generateDefaultName",
                "streamline",
                "validate",
                "copy",
                "_setResultsName",
                "__init__",
                "streamline",
                "parseImpl",
                "__iadd__",
                "_checkRecursion",
                "_generateDefaultName",
                "__init__",
                "streamline",
                "parseImpl",
                "__ixor__",
                "_generateDefaultName",
                "_setResultsName",
                "__init__",
                "streamline",
                "parseImpl",
                "__ior__",
                "_generateDefaultName",
                "_setResultsName",
                "__init__",
                "streamline",
                "parseImpl",
                "_generateDefaultName",
                "__init__",
                "recurse",
                "parseImpl",
                "leave_whitespace",
                "ignore_whitespace",
                "ignore",
                "streamline",
                "_checkRecursion",
                "validate",
                "_generateDefaultName",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "__init__",
                "parseImpl",
                "parseImpl",
                "__init__",
                "parseImpl",
                "_generateDefaultName",
                "__init__",
                "stopOn",
                "parseImpl",
                "_setResultsName",
                "_generateDefaultName",
                "__init__",
                "parseImpl",
                "_generateDefaultName",
                "__bool__",
                "__str__",
                "__init__",
                "parseImpl",
                "_generateDefaultName",
                "__init__",
                "parseImpl",
                "__init__",
                "__lshift__",
                "__ilshift__",
                "__or__",
                "__del__",
                "parseImpl",
                "leave_whitespace",
                "ignore_whitespace",
                "streamline",
                "validate",
                "_generateDefaultName",
                "copy",
                "_setResultsName",
                "__init__",
                "__init__",
                "ignore",
                "postParse",
                "__init__",
                "postParse",
                "__init__",
                "postParse",
                "__init__",
                "__add__",
                "__sub__",
                "postParse",
                "suppress",
                "z",
                "pa",
                "__init__",
                "__get__",
                "charsAsStr",
                "__init__",
                "_generateDefaultName",
                "__init__",
                "__init__",
                "breaker",
                "makeOptionalList",
                "must_skip",
                "show_skip",
                "pa",
                "pa"
            ]
        },
        "common.py": {
            "list-of-functions": [
                "convert_to_date",
                "convert_to_datetime",
                "strip_html_tags",
                "cvt_fn",
                "cvt_fn"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "explain_exception",
                "_from_exception",
                "line",
                "lineno",
                "col",
                "column",
                "__str__",
                "__repr__",
                "mark_input_line",
                "explain",
                "__init__",
                "__str__"
            ]
        },
        "testing.py": {
            "list-of-functions": [
                "with_line_numbers",
                "__init__",
                "save",
                "restore",
                "copy",
                "__enter__",
                "__exit__",
                "assertParseResultsEquals",
                "assertParseAndCheckList",
                "assertParseAndCheckDict",
                "assertRunTestResults",
                "assertRaisesParseException"
            ]
        },
        "helpers.py": {
            "list-of-functions": [
                "delimited_list",
                "counted_array",
                "match_previous_literal",
                "match_previous_expr",
                "one_of",
                "dict_of",
                "original_text_for",
                "ungroup",
                "locatedExpr",
                "nested_expr",
                "_makeTags",
                "make_html_tags",
                "make_xml_tags",
                "replace_html_entity",
                "infix_notation",
                "indentedBlock",
                "count_field_parse_action",
                "copy_token_to_repeater",
                "copy_token_to_repeater",
                "reset_stack",
                "checkPeerIndent",
                "checkSubIndent",
                "checkUnindent",
                "must_match_these_tokens",
                "extractText",
                "parseImpl"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pyparsing/diagram/": {
        "__init__.py": {
            "list-of-functions": [
                "railroad_to_html",
                "resolve_partial",
                "to_railroad",
                "_should_vertical",
                "_worth_extracting",
                "_apply_diagram_item_enhancements",
                "_visible_exprs",
                "_to_diagram_element",
                "__init__",
                "__init__",
                "__init__",
                "from_call",
                "name",
                "__call__",
                "__init__",
                "mark_for_extraction",
                "__init__",
                "__setitem__",
                "__getitem__",
                "__delitem__",
                "__contains__",
                "generate_unnamed",
                "generate_index",
                "extract_into_diagram",
                "_inner"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/distro/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "distro.py": {
            "list-of-functions": [
                "linux_distribution",
                "id",
                "name",
                "version",
                "version_parts",
                "major_version",
                "minor_version",
                "build_number",
                "like",
                "codename",
                "info",
                "os_release_info",
                "lsb_release_info",
                "distro_release_info",
                "uname_info",
                "os_release_attr",
                "lsb_release_attr",
                "distro_release_attr",
                "uname_attr",
                "main",
                "__init__",
                "__repr__",
                "linux_distribution",
                "id",
                "name",
                "version",
                "version_parts",
                "major_version",
                "minor_version",
                "build_number",
                "like",
                "codename",
                "info",
                "os_release_info",
                "lsb_release_info",
                "distro_release_info",
                "uname_info",
                "oslevel_info",
                "os_release_attr",
                "lsb_release_attr",
                "distro_release_attr",
                "uname_attr",
                "_os_release_info",
                "_parse_os_release_content",
                "_lsb_release_info",
                "_parse_lsb_release_content",
                "_uname_info",
                "_oslevel_info",
                "_debian_version",
                "_parse_uname_content",
                "_to_str",
                "_distro_release_info",
                "_parse_distro_release_file",
                "_parse_distro_release_content",
                "normalize",
                "__init__",
                "__get__"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/colorama/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "win32.py": {
            "list-of-functions": [
                "_winapi_test",
                "winapi_test",
                "GetConsoleScreenBufferInfo",
                "SetConsoleTextAttribute",
                "SetConsoleCursorPosition",
                "FillConsoleOutputCharacter",
                "FillConsoleOutputAttribute",
                "SetConsoleTitle",
                "GetConsoleMode",
                "SetConsoleMode",
                "__str__"
            ]
        },
        "ansitowin32.py": {
            "list-of-functions": [
                "__init__",
                "__getattr__",
                "__enter__",
                "__exit__",
                "__setstate__",
                "__getstate__",
                "write",
                "isatty",
                "closed",
                "__init__",
                "should_wrap",
                "get_win32_calls",
                "write",
                "reset_all",
                "write_and_convert",
                "write_plain_text",
                "convert_ansi",
                "extract_params",
                "call_win32",
                "convert_osc",
                "flush"
            ]
        },
        "ansi.py": {
            "list-of-functions": [
                "code_to_chars",
                "set_title",
                "clear_screen",
                "clear_line",
                "__init__",
                "UP",
                "DOWN",
                "FORWARD",
                "BACK",
                "POS"
            ]
        },
        "winterm.py": {
            "list-of-functions": [
                "enable_vt_processing",
                "__init__",
                "get_attrs",
                "set_attrs",
                "reset_all",
                "fore",
                "back",
                "style",
                "set_console",
                "get_position",
                "set_cursor_position",
                "cursor_adjust",
                "erase_screen",
                "erase_line",
                "set_title",
                "get_osfhandle"
            ]
        },
        "initialise.py": {
            "list-of-functions": [
                "_wipe_internal_state_for_tests",
                "reset_all",
                "init",
                "deinit",
                "just_fix_windows_console",
                "colorama_text",
                "reinit",
                "wrap_stream"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/colorama/tests/": {
        "isatty_test.py": {
            "list-of-functions": [
                "is_a_tty",
                "test_TTY",
                "test_nonTTY",
                "test_withPycharm",
                "test_withPycharmTTYOverride",
                "test_withPycharmNonTTYOverride",
                "test_withPycharmNoneOverride",
                "test_withPycharmStreamWrapped"
            ]
        },
        "initialise_test.py": {
            "list-of-functions": [
                "setUp",
                "tearDown",
                "assertWrapped",
                "assertNotWrapped",
                "testInitWrapsOnWindows",
                "testInitDoesntWrapOnEmulatedWindows",
                "testInitDoesntWrapOnNonWindows",
                "testInitDoesntWrapIfNone",
                "testInitAutoresetOnWrapsOnAllPlatforms",
                "testInitWrapOffDoesntWrapOnWindows",
                "testInitWrapOffIncompatibleWithAutoresetOn",
                "testAutoResetPassedOn",
                "testAutoResetChangeable",
                "testAtexitRegisteredOnlyOnce",
                "_reset",
                "tearDown",
                "testJustFixWindowsConsole",
                "fake_std"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "ansi_test.py": {
            "list-of-functions": [
                "setUp",
                "tearDown",
                "testForeAttributes",
                "testBackAttributes",
                "testStyleAttributes"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "osname",
                "replace_by",
                "replace_original_by",
                "pycharm",
                "isatty",
                "isatty"
            ]
        },
        "winterm_test.py": {
            "list-of-functions": [
                "testInit",
                "testGetAttrs",
                "testResetAll",
                "testFore",
                "testBack",
                "testStyle",
                "testSetConsole",
                "testSetConsoleOnStderr"
            ]
        },
        "ansitowin32_test.py": {
            "list-of-functions": [
                "testIsAProxy",
                "testDelegatesWrite",
                "testDelegatesContext",
                "testProxyNoContextManager",
                "test_closed_shouldnt_raise_on_closed_stream",
                "test_closed_shouldnt_raise_on_detached_stream",
                "testInit",
                "testStripIsTrueOnWindows",
                "testStripIsFalseOffWindows",
                "testWriteStripsAnsi",
                "testWriteDoesNotStripAnsi",
                "assert_autoresets",
                "testWriteAutoresets",
                "testWriteAndConvertWritesPlainText",
                "testWriteAndConvertStripsAllValidAnsi",
                "testWriteAndConvertSkipsEmptySnippets",
                "testWriteAndConvertCallsWin32WithParamsAndCommand",
                "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
                "test_wrap_shouldnt_raise_on_closed_orig_stdout",
                "test_wrap_shouldnt_raise_on_missing_closed_attr",
                "testExtractParams",
                "testCallWin32UsesLookup",
                "test_osc_codes",
                "test_native_windows_ansi",
                "p"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/": {
        "serialize.py": {
            "list-of-functions": [
                "_b64_decode_bytes",
                "_b64_decode_str",
                "dumps",
                "loads",
                "prepare_response",
                "_loads_v0",
                "_loads_v1",
                "_loads_v2",
                "_loads_v3",
                "_loads_v4"
            ]
        },
        "wrapper.py": {
            "list-of-functions": [
                "CacheControl"
            ]
        },
        "controller.py": {
            "list-of-functions": [
                "parse_uri",
                "__init__",
                "_urlnorm",
                "cache_url",
                "parse_cache_control",
                "cached_request",
                "conditional_headers",
                "_cache_set",
                "cache_response",
                "update_cached_response"
            ]
        },
        "compat.py": {
            "list-of-functions": []
        },
        "filewrapper.py": {
            "list-of-functions": [
                "__init__",
                "__getattr__",
                "__is_fp_closed",
                "_close",
                "read",
                "_safe_read"
            ]
        },
        "heuristics.py": {
            "list-of-functions": [
                "expire_after",
                "datetime_to_header",
                "warning",
                "update_headers",
                "apply",
                "update_headers",
                "__init__",
                "update_headers",
                "warning",
                "update_headers",
                "warning"
            ]
        },
        "adapter.py": {
            "list-of-functions": [
                "__init__",
                "send",
                "build_response",
                "close",
                "_update_chunk_length"
            ]
        },
        "cache.py": {
            "list-of-functions": [
                "get",
                "set",
                "delete",
                "close",
                "__init__",
                "get",
                "set",
                "delete",
                "set_body",
                "get_body"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_cmd.py": {
            "list-of-functions": [
                "setup_logging",
                "get_session",
                "get_args",
                "main"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/cachecontrol/caches/": {
        "file_cache.py": {
            "list-of-functions": [
                "_secure_open_write",
                "url_to_file_path",
                "__init__",
                "encode",
                "_fn",
                "get",
                "set",
                "_write",
                "_delete",
                "delete",
                "get_body",
                "set_body",
                "delete"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "redis_cache.py": {
            "list-of-functions": [
                "__init__",
                "get",
                "set",
                "delete",
                "clear",
                "close"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/idna/": {
        "intranges.py": {
            "list-of-functions": [
                "intranges_from_list",
                "_encode_range",
                "_decode_range",
                "intranges_contain"
            ]
        },
        "package_data.py": {
            "list-of-functions": []
        },
        "compat.py": {
            "list-of-functions": [
                "ToASCII",
                "ToUnicode",
                "nameprep"
            ]
        },
        "idnadata.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "core.py": {
            "list-of-functions": [
                "_combining_class",
                "_is_script",
                "_punycode",
                "_unot",
                "valid_label_length",
                "valid_string_length",
                "check_bidi",
                "check_initial_combiner",
                "check_hyphen_ok",
                "check_nfc",
                "valid_contextj",
                "valid_contexto",
                "check_label",
                "alabel",
                "ulabel",
                "uts46_remap",
                "encode",
                "decode"
            ]
        },
        "codec.py": {
            "list-of-functions": [
                "getregentry",
                "encode",
                "decode",
                "_buffer_encode",
                "_buffer_decode"
            ]
        },
        "uts46data.py": {
            "list-of-functions": [
                "_seg_0",
                "_seg_1",
                "_seg_2",
                "_seg_3",
                "_seg_4",
                "_seg_5",
                "_seg_6",
                "_seg_7",
                "_seg_8",
                "_seg_9",
                "_seg_10",
                "_seg_11",
                "_seg_12",
                "_seg_13",
                "_seg_14",
                "_seg_15",
                "_seg_16",
                "_seg_17",
                "_seg_18",
                "_seg_19",
                "_seg_20",
                "_seg_21",
                "_seg_22",
                "_seg_23",
                "_seg_24",
                "_seg_25",
                "_seg_26",
                "_seg_27",
                "_seg_28",
                "_seg_29",
                "_seg_30",
                "_seg_31",
                "_seg_32",
                "_seg_33",
                "_seg_34",
                "_seg_35",
                "_seg_36",
                "_seg_37",
                "_seg_38",
                "_seg_39",
                "_seg_40",
                "_seg_41",
                "_seg_42",
                "_seg_43",
                "_seg_44",
                "_seg_45",
                "_seg_46",
                "_seg_47",
                "_seg_48",
                "_seg_49",
                "_seg_50",
                "_seg_51",
                "_seg_52",
                "_seg_53",
                "_seg_54",
                "_seg_55",
                "_seg_56",
                "_seg_57",
                "_seg_58",
                "_seg_59",
                "_seg_60",
                "_seg_61",
                "_seg_62",
                "_seg_63",
                "_seg_64",
                "_seg_65",
                "_seg_66",
                "_seg_67",
                "_seg_68",
                "_seg_69",
                "_seg_70",
                "_seg_71",
                "_seg_72",
                "_seg_73",
                "_seg_74",
                "_seg_75",
                "_seg_76",
                "_seg_77",
                "_seg_78",
                "_seg_79",
                "_seg_80",
                "_seg_81"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/tenacity/": {
        "before.py": {
            "list-of-functions": [
                "before_nothing",
                "before_log",
                "log_it"
            ]
        },
        "before_sleep.py": {
            "list-of-functions": [
                "before_sleep_nothing",
                "before_sleep_log",
                "log_it"
            ]
        },
        "_asyncio.py": {
            "list-of-functions": [
                "__init__",
                "__iter__",
                "__aiter__",
                "wraps"
            ]
        },
        "stop.py": {
            "list-of-functions": [
                "__call__",
                "__and__",
                "__or__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__"
            ]
        },
        "wait.py": {
            "list-of-functions": [
                "__call__",
                "__add__",
                "__radd__",
                "__init__",
                "__call__",
                "__init__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__call__",
                "__init__",
                "__call__"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_first_set",
                "retry",
                "retry",
                "retry",
                "__repr__",
                "__str__",
                "__init__",
                "__init__",
                "reraise",
                "__str__",
                "__init__",
                "__enter__",
                "__exit__",
                "__init__",
                "copy",
                "__repr__",
                "statistics",
                "wraps",
                "begin",
                "iter",
                "__iter__",
                "__call__",
                "__call__",
                "__init__",
                "failed",
                "construct",
                "__init__",
                "seconds_since_start",
                "prepare_for_next_attempt",
                "set_result",
                "set_exception",
                "__repr__",
                "wrapped_f",
                "retry_with",
                "wrap"
            ]
        },
        "nap.py": {
            "list-of-functions": [
                "sleep",
                "__init__",
                "__call__"
            ]
        },
        "after.py": {
            "list-of-functions": [
                "after_nothing",
                "after_log",
                "log_it"
            ]
        },
        "retry.py": {
            "list-of-functions": [
                "__call__",
                "__and__",
                "__or__",
                "__call__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__init__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "__init__",
                "__call__",
                "message_fnc",
                "match_fnc"
            ]
        },
        "tornadoweb.py": {
            "list-of-functions": [
                "__init__",
                "__call__"
            ]
        },
        "_utils.py": {
            "list-of-functions": [
                "find_ordinal",
                "to_ordinal",
                "get_callback_name",
                "to_seconds"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/requests/": {
        "cookies.py": {
            "list-of-functions": [
                "extract_cookies_to_jar",
                "get_cookie_header",
                "remove_cookie_by_name",
                "_copy_cookie_jar",
                "create_cookie",
                "morsel_to_cookie",
                "cookiejar_from_dict",
                "merge_cookies",
                "__init__",
                "get_type",
                "get_host",
                "get_origin_req_host",
                "get_full_url",
                "is_unverifiable",
                "has_header",
                "get_header",
                "add_header",
                "add_unredirected_header",
                "get_new_headers",
                "unverifiable",
                "origin_req_host",
                "host",
                "__init__",
                "info",
                "getheaders",
                "get",
                "set",
                "iterkeys",
                "keys",
                "itervalues",
                "values",
                "iteritems",
                "items",
                "list_domains",
                "list_paths",
                "multiple_domains",
                "get_dict",
                "__contains__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "set_cookie",
                "update",
                "_find",
                "_find_no_duplicates",
                "__getstate__",
                "__setstate__",
                "copy",
                "get_policy"
            ]
        },
        "auth.py": {
            "list-of-functions": [
                "_basic_auth_str",
                "__call__",
                "__init__",
                "__eq__",
                "__ne__",
                "__call__",
                "__call__",
                "__init__",
                "init_per_thread_state",
                "build_digest_header",
                "handle_redirect",
                "handle_401",
                "__call__",
                "__eq__",
                "__ne__",
                "md5_utf8",
                "sha_utf8",
                "sha256_utf8",
                "sha512_utf8"
            ]
        },
        "sessions.py": {
            "list-of-functions": [
                "merge_setting",
                "merge_hooks",
                "session",
                "get_redirect_target",
                "should_strip_auth",
                "resolve_redirects",
                "rebuild_auth",
                "rebuild_proxies",
                "rebuild_method",
                "__init__",
                "__enter__",
                "__exit__",
                "prepare_request",
                "request",
                "get",
                "options",
                "head",
                "post",
                "put",
                "patch",
                "delete",
                "send",
                "merge_environment_settings",
                "get_adapter",
                "close",
                "mount",
                "__getstate__",
                "__setstate__"
            ]
        },
        "hooks.py": {
            "list-of-functions": [
                "default_hooks",
                "dispatch_hook"
            ]
        },
        "compat.py": {
            "list-of-functions": []
        },
        "models.py": {
            "list-of-functions": [
                "path_url",
                "_encode_params",
                "_encode_files",
                "register_hook",
                "deregister_hook",
                "__init__",
                "__repr__",
                "prepare",
                "__init__",
                "prepare",
                "__repr__",
                "copy",
                "prepare_method",
                "_get_idna_encoded_host",
                "prepare_url",
                "prepare_headers",
                "prepare_body",
                "prepare_content_length",
                "prepare_auth",
                "prepare_cookies",
                "prepare_hooks",
                "__init__",
                "__enter__",
                "__exit__",
                "__getstate__",
                "__setstate__",
                "__repr__",
                "__bool__",
                "__nonzero__",
                "__iter__",
                "ok",
                "is_redirect",
                "is_permanent_redirect",
                "next",
                "apparent_encoding",
                "iter_content",
                "iter_lines",
                "content",
                "text",
                "json",
                "links",
                "raise_for_status",
                "close",
                "generate"
            ]
        },
        "certs.py": {
            "list-of-functions": [
                "where"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "check_compatibility",
                "_check_cryptography"
            ]
        },
        "status_codes.py": {
            "list-of-functions": [
                "_init",
                "doc"
            ]
        },
        "packages.py": {
            "list-of-functions": []
        },
        "__version__.py": {
            "list-of-functions": []
        },
        "api.py": {
            "list-of-functions": [
                "request",
                "get",
                "options",
                "head",
                "post",
                "put",
                "patch",
                "delete"
            ]
        },
        "_internal_utils.py": {
            "list-of-functions": [
                "to_native_string",
                "unicode_is_ascii"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "dict_to_sequence",
                "super_len",
                "get_netrc_auth",
                "guess_filename",
                "extract_zipped_paths",
                "atomic_open",
                "from_key_val_list",
                "to_key_val_list",
                "parse_list_header",
                "parse_dict_header",
                "unquote_header_value",
                "dict_from_cookiejar",
                "add_dict_to_cookiejar",
                "get_encodings_from_content",
                "_parse_content_type_header",
                "get_encoding_from_headers",
                "stream_decode_response_unicode",
                "iter_slices",
                "get_unicode_from_response",
                "unquote_unreserved",
                "requote_uri",
                "address_in_network",
                "dotted_netmask",
                "is_ipv4_address",
                "is_valid_cidr",
                "set_environ",
                "should_bypass_proxies",
                "get_environ_proxies",
                "select_proxy",
                "resolve_proxies",
                "default_user_agent",
                "default_headers",
                "parse_header_links",
                "guess_json_utf",
                "prepend_scheme_if_needed",
                "get_auth_from_url",
                "check_header_validity",
                "_validate_header_part",
                "urldefragauth",
                "rewind_body",
                "proxy_bypass_registry",
                "proxy_bypass",
                "get_proxy"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__init__"
            ]
        },
        "structures.py": {
            "list-of-functions": [
                "__init__",
                "__setitem__",
                "__getitem__",
                "__delitem__",
                "__iter__",
                "__len__",
                "lower_items",
                "__eq__",
                "copy",
                "__repr__",
                "__init__",
                "__repr__",
                "__getitem__",
                "get"
            ]
        },
        "help.py": {
            "list-of-functions": [
                "_implementation",
                "info",
                "main"
            ]
        },
        "adapters.py": {
            "list-of-functions": [
                "__init__",
                "send",
                "close",
                "__init__",
                "__getstate__",
                "__setstate__",
                "init_poolmanager",
                "proxy_manager_for",
                "cert_verify",
                "build_response",
                "get_connection",
                "close",
                "request_url",
                "add_headers",
                "proxy_headers",
                "send",
                "SOCKSProxyManager"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/tomli/": {
        "_types.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_parser.py": {
            "list-of-functions": [
                "load",
                "loads",
                "skip_chars",
                "skip_until",
                "skip_comment",
                "skip_comments_and_array_ws",
                "create_dict_rule",
                "create_list_rule",
                "key_value_rule",
                "parse_key_value_pair",
                "parse_key",
                "parse_key_part",
                "parse_one_line_basic_str",
                "parse_array",
                "parse_inline_table",
                "parse_basic_str_escape",
                "parse_basic_str_escape_multiline",
                "parse_hex_char",
                "parse_literal_str",
                "parse_multiline_str",
                "parse_basic_str",
                "parse_value",
                "suffixed_err",
                "is_unicode_scalar_value",
                "make_safe_parse_float",
                "__init__",
                "add_pending",
                "finalize_pending",
                "unset_all",
                "set",
                "is_",
                "__init__",
                "get_or_create_nest",
                "append_nest_to_list",
                "coord_repr",
                "safe_parse_float"
            ]
        },
        "_re.py": {
            "list-of-functions": [
                "match_to_datetime",
                "cached_tz",
                "match_to_localtime",
                "match_to_number"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/certifi/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "core.py": {
            "list-of-functions": [
                "where",
                "contents",
                "where",
                "contents",
                "read_text",
                "where",
                "contents"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/": {
        "_impl.py": {
            "list-of-functions": [
                "write_json",
                "read_json",
                "default_subprocess_runner",
                "quiet_subprocess_runner",
                "norm_and_check",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "subprocess_runner",
                "_supported_features",
                "get_requires_for_build_wheel",
                "prepare_metadata_for_build_wheel",
                "build_wheel",
                "get_requires_for_build_editable",
                "prepare_metadata_for_build_editable",
                "build_editable",
                "get_requires_for_build_sdist",
                "build_sdist",
                "_call_hook"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_compat.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pyproject_hooks/_in_process/": {
        "_in_process.py": {
            "list-of-functions": [
                "write_json",
                "read_json",
                "contained_in",
                "_build_backend",
                "_supported_features",
                "get_requires_for_build_wheel",
                "get_requires_for_build_editable",
                "prepare_metadata_for_build_wheel",
                "prepare_metadata_for_build_editable",
                "_dist_info_files",
                "_get_wheel_metadata_from_wheel",
                "_find_already_built_wheel",
                "build_wheel",
                "build_editable",
                "get_requires_for_build_sdist",
                "build_sdist",
                "main",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_in_proc_script_path",
                "_in_proc_script_path"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/rich/": {
        "themes.py": {
            "list-of-functions": []
        },
        "screen.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__"
            ]
        },
        "logging.py": {
            "list-of-functions": [
                "__init__",
                "get_level_text",
                "emit",
                "render_message",
                "render",
                "divide"
            ]
        },
        "measure.py": {
            "list-of-functions": [
                "measure_renderables",
                "span",
                "normalize",
                "with_maximum",
                "with_minimum",
                "clamp",
                "get"
            ]
        },
        "tree.py": {
            "list-of-functions": [
                "__init__",
                "add",
                "__rich_console__",
                "__rich_measure__",
                "make_guide"
            ]
        },
        "console.py": {
            "list-of-functions": [
                "group",
                "_is_jupyter",
                "get_windows_console_features",
                "detect_legacy_windows",
                "_svg_hash",
                "ascii_only",
                "copy",
                "update",
                "update_width",
                "update_height",
                "reset_height",
                "update_dimensions",
                "__rich__",
                "__rich_console__",
                "__init__",
                "__rich_console__",
                "__init__",
                "__rich_console__",
                "__init__",
                "__enter__",
                "__exit__",
                "get",
                "__init__",
                "__enter__",
                "__exit__",
                "__init__",
                "__enter__",
                "__exit__",
                "__init__",
                "update",
                "__enter__",
                "__exit__",
                "__init__",
                "renderables",
                "__rich_measure__",
                "__rich_console__",
                "decorator",
                "process_renderables",
                "__init__",
                "__repr__",
                "file",
                "file",
                "_buffer",
                "_buffer_index",
                "_buffer_index",
                "_theme_stack",
                "_detect_color_system",
                "_enter_buffer",
                "_exit_buffer",
                "set_live",
                "clear_live",
                "push_render_hook",
                "pop_render_hook",
                "__enter__",
                "__exit__",
                "begin_capture",
                "end_capture",
                "push_theme",
                "pop_theme",
                "use_theme",
                "color_system",
                "encoding",
                "is_terminal",
                "is_dumb_terminal",
                "options",
                "size",
                "size",
                "width",
                "width",
                "height",
                "height",
                "bell",
                "capture",
                "pager",
                "line",
                "clear",
                "status",
                "show_cursor",
                "set_alt_screen",
                "is_alt_screen",
                "set_window_title",
                "screen",
                "measure",
                "render",
                "render_lines",
                "render_str",
                "get_style",
                "_collect_renderables",
                "rule",
                "control",
                "out",
                "print",
                "print_json",
                "update_screen",
                "update_screen_lines",
                "print_exception",
                "_caller_frame_info",
                "log",
                "_check_buffer",
                "_render_buffer",
                "input",
                "export_text",
                "save_text",
                "export_html",
                "save_html",
                "export_svg",
                "save_svg",
                "_replace",
                "check_text",
                "get_svg_style",
                "escape_text",
                "make_tag",
                "align_append",
                "stringify"
            ]
        },
        "live_render.py": {
            "list-of-functions": [
                "__init__",
                "set_renderable",
                "position_cursor",
                "restore_cursor",
                "__rich_console__"
            ]
        },
        "_emoji_codes.py": {
            "list-of-functions": []
        },
        "box.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__str__",
                "substitute",
                "get_plain_headed_box",
                "get_top",
                "get_row",
                "get_bottom"
            ]
        },
        "color.py": {
            "list-of-functions": [
                "parse_rgb_hex",
                "blend_rgb",
                "__repr__",
                "__str__",
                "__repr__",
                "__rich__",
                "__rich_repr__",
                "system",
                "is_system_defined",
                "is_default",
                "get_truecolor",
                "from_ansi",
                "from_triplet",
                "from_rgb",
                "default",
                "parse",
                "get_ansi_codes",
                "downgrade"
            ]
        },
        "_timer.py": {
            "list-of-functions": [
                "timer"
            ]
        },
        "_fileno.py": {
            "list-of-functions": [
                "get_fileno"
            ]
        },
        "align.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "left",
                "center",
                "right",
                "__rich_console__",
                "__rich_measure__",
                "__init__",
                "__repr__",
                "__rich_console__",
                "__rich_measure__",
                "generate_segments",
                "blank_lines",
                "blank_lines"
            ]
        },
        "theme.py": {
            "list-of-functions": [
                "__init__",
                "config",
                "from_file",
                "read",
                "__init__",
                "push_theme",
                "pop_theme"
            ]
        },
        "style.py": {
            "list-of-functions": [
                "__init__",
                "__get__",
                "__init__",
                "null",
                "from_color",
                "from_meta",
                "on",
                "link_id",
                "__str__",
                "__bool__",
                "_make_ansi_codes",
                "normalize",
                "pick_first",
                "__rich_repr__",
                "__eq__",
                "__ne__",
                "__hash__",
                "color",
                "bgcolor",
                "link",
                "transparent_background",
                "background_style",
                "meta",
                "without_color",
                "parse",
                "get_html_style",
                "combine",
                "chain",
                "copy",
                "clear_meta_and_links",
                "update_link",
                "render",
                "test",
                "_add",
                "__add__",
                "__init__",
                "__repr__",
                "current",
                "push",
                "pop",
                "_make_color"
            ]
        },
        "default_styles.py": {
            "list-of-functions": []
        },
        "_wrap.py": {
            "list-of-functions": [
                "words",
                "divide_line"
            ]
        },
        "_log_render.py": {
            "list-of-functions": [
                "__init__",
                "__call__"
            ]
        },
        "emoji.py": {
            "list-of-functions": [
                "__init__",
                "replace",
                "__repr__",
                "__str__",
                "__rich_console__"
            ]
        },
        "layout.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__",
                "get_tree_icon",
                "divide",
                "get_tree_icon",
                "divide",
                "get_tree_icon",
                "divide",
                "__init__",
                "__rich_repr__",
                "renderable",
                "children",
                "map",
                "get",
                "__getitem__",
                "tree",
                "split",
                "add_split",
                "split_row",
                "split_column",
                "unsplit",
                "update",
                "refresh_screen",
                "_make_region_map",
                "render",
                "__rich_console__",
                "summary",
                "recurse"
            ]
        },
        "containers.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__",
                "__rich_measure__",
                "append",
                "__iter__",
                "__init__",
                "__repr__",
                "__iter__",
                "__getitem__",
                "__getitem__",
                "__getitem__",
                "__setitem__",
                "__len__",
                "__rich_console__",
                "append",
                "extend",
                "pop",
                "justify"
            ]
        },
        "_emoji_replace.py": {
            "list-of-functions": [
                "_emoji_replace",
                "do_replace"
            ]
        },
        "traceback.py": {
            "list-of-functions": [
                "install",
                "excepthook",
                "ipy_excepthook_closure",
                "__init__",
                "from_exception",
                "extract",
                "__rich_console__",
                "_render_syntax_error",
                "_guess_lexer",
                "_render_stack",
                "bar",
                "foo",
                "error",
                "ipy_show_traceback",
                "ipy_display_traceback",
                "safe_str",
                "read_code",
                "render_locals",
                "get_locals"
            ]
        },
        "region.py": {
            "list-of-functions": []
        },
        "protocol.py": {
            "list-of-functions": [
                "is_renderable",
                "rich_cast"
            ]
        },
        "_loop.py": {
            "list-of-functions": [
                "loop_first",
                "loop_last",
                "loop_first_last"
            ]
        },
        "control.py": {
            "list-of-functions": [
                "strip_control_codes",
                "escape_control_codes",
                "__init__",
                "bell",
                "home",
                "move",
                "move_to_column",
                "move_to",
                "clear",
                "show_cursor",
                "alt_screen",
                "title",
                "__str__",
                "__rich_console__",
                "get_codes"
            ]
        },
        "filesize.py": {
            "list-of-functions": [
                "_to_str",
                "pick_unit_and_suffix",
                "decimal"
            ]
        },
        "_null_file.py": {
            "list-of-functions": [
                "close",
                "isatty",
                "read",
                "readable",
                "readline",
                "readlines",
                "seek",
                "seekable",
                "tell",
                "truncate",
                "writable",
                "writelines",
                "__next__",
                "__iter__",
                "__enter__",
                "__exit__",
                "write",
                "flush",
                "fileno"
            ]
        },
        "_palettes.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": [
                "get_console",
                "reconfigure",
                "print",
                "print_json",
                "inspect"
            ]
        },
        "_pick.py": {
            "list-of-functions": [
                "pick_bool"
            ]
        },
        "file_proxy.py": {
            "list-of-functions": [
                "__init__",
                "rich_proxied_file",
                "__getattr__",
                "write",
                "flush",
                "fileno"
            ]
        },
        "palette.py": {
            "list-of-functions": [
                "__init__",
                "__getitem__",
                "__rich__",
                "match",
                "get_color_distance",
                "__rich_console__"
            ]
        },
        "markup.py": {
            "list-of-functions": [
                "escape",
                "_parse",
                "render",
                "__str__",
                "markup",
                "escape_backslashes",
                "pop_style"
            ]
        },
        "_ratio.py": {
            "list-of-functions": [
                "ratio_resolve",
                "ratio_reduce",
                "ratio_distribute"
            ]
        },
        "repr.py": {
            "list-of-functions": [
                "auto",
                "auto",
                "auto",
                "rich_repr",
                "rich_repr",
                "rich_repr",
                "do_replace",
                "auto_repr",
                "auto_rich_repr",
                "__rich_repr__"
            ]
        },
        "constrain.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__",
                "__rich_measure__"
            ]
        },
        "pretty.py": {
            "list-of-functions": [
                "_is_attr_object",
                "_get_attr_fields",
                "_is_dataclass_repr",
                "_has_default_namedtuple_repr",
                "_ipy_display_hook",
                "_safe_isinstance",
                "install",
                "_get_braces_for_defaultdict",
                "_get_braces_for_array",
                "is_expandable",
                "_is_namedtuple",
                "traverse",
                "pretty_repr",
                "pprint",
                "display_hook",
                "__init__",
                "__rich_console__",
                "__rich_measure__",
                "iter_tokens",
                "check_length",
                "__str__",
                "render",
                "expandable",
                "check_length",
                "expand",
                "__str__",
                "to_repr",
                "_traverse",
                "iter_rich_args",
                "__repr__",
                "__repr__",
                "__call__",
                "iter_attrs"
            ]
        },
        "diagnose.py": {
            "list-of-functions": [
                "report"
            ]
        },
        "columns.py": {
            "list-of-functions": [
                "__init__",
                "add_renderable",
                "__rich_console__",
                "iter_renderables"
            ]
        },
        "rule.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__rich_console__",
                "_rule_line",
                "__rich_measure__"
            ]
        },
        "_inspect.py": {
            "list-of-functions": [
                "_first_paragraph",
                "get_object_types_mro",
                "get_object_types_mro_as_strings",
                "is_object_one_of_types",
                "__init__",
                "_make_title",
                "__rich__",
                "_get_signature",
                "_render",
                "_get_formatted_doc",
                "sort_items",
                "safe_getattr"
            ]
        },
        "pager.py": {
            "list-of-functions": [
                "show",
                "_pager",
                "show"
            ]
        },
        "text.py": {
            "list-of-functions": [
                "__repr__",
                "__bool__",
                "split",
                "move",
                "right_crop",
                "__init__",
                "__len__",
                "__bool__",
                "__str__",
                "__repr__",
                "__add__",
                "__eq__",
                "__contains__",
                "__getitem__",
                "cell_len",
                "markup",
                "from_markup",
                "from_ansi",
                "styled",
                "assemble",
                "plain",
                "plain",
                "spans",
                "spans",
                "blank_copy",
                "copy",
                "stylize",
                "stylize_before",
                "apply_meta",
                "on",
                "remove_suffix",
                "get_style_at_offset",
                "highlight_regex",
                "highlight_words",
                "rstrip",
                "rstrip_end",
                "set_length",
                "__rich_console__",
                "__rich_measure__",
                "render",
                "join",
                "expand_tabs",
                "truncate",
                "_trim_spans",
                "pad",
                "pad_left",
                "pad_right",
                "align",
                "append",
                "append_text",
                "append_tokens",
                "copy_styles",
                "split",
                "divide",
                "right_crop",
                "wrap",
                "fit",
                "detect_indentation",
                "with_indent_guides",
                "get_text_at",
                "get_current_style",
                "iter_text",
                "flatten_spans"
            ]
        },
        "highlighter.py": {
            "list-of-functions": [
                "_combine_regex",
                "__call__",
                "highlight",
                "highlight",
                "highlight",
                "highlight"
            ]
        },
        "_spinners.py": {
            "list-of-functions": []
        },
        "terminal_theme.py": {
            "list-of-functions": [
                "__init__"
            ]
        },
        "bar.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__rich_console__",
                "__rich_measure__"
            ]
        },
        "live.py": {
            "list-of-functions": [
                "__init__",
                "stop",
                "run",
                "__init__",
                "is_started",
                "get_renderable",
                "start",
                "stop",
                "__enter__",
                "__exit__",
                "_enable_redirect_io",
                "_disable_redirect_io",
                "renderable",
                "update",
                "refresh",
                "process_renderables"
            ]
        },
        "syntax.py": {
            "list-of-functions": [
                "_get_code_index_for_syntax_position",
                "get_style_for_token",
                "get_background_style",
                "__init__",
                "get_style_for_token",
                "get_background_style",
                "__init__",
                "get_style_for_token",
                "get_background_style",
                "get_theme",
                "__init__",
                "from_path",
                "guess_lexer",
                "_get_base_style",
                "_get_token_color",
                "lexer",
                "highlight",
                "stylize_range",
                "_get_line_numbers_color",
                "_numbers_column_width",
                "_get_number_styles",
                "__rich_measure__",
                "__rich_console__",
                "_get_syntax",
                "_apply_stylized_ranges",
                "_process_code",
                "line_tokenize",
                "tokens_to_spans"
            ]
        },
        "table.py": {
            "list-of-functions": [
                "copy",
                "cells",
                "flexible",
                "__init__",
                "grid",
                "expand",
                "expand",
                "_extra_width",
                "row_count",
                "get_row_style",
                "__rich_measure__",
                "padding",
                "padding",
                "add_column",
                "add_row",
                "add_section",
                "__rich_console__",
                "_calculate_column_widths",
                "_collapse_widths",
                "_get_cells",
                "_get_padding_width",
                "_measure_column",
                "_render",
                "add_cell",
                "render_annotation",
                "get_padding",
                "header",
                "align_cell"
            ]
        },
        "_export_format.py": {
            "list-of-functions": []
        },
        "progress_bar.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "percentage_completed",
                "_get_pulse_segments",
                "update",
                "_render_pulse",
                "__rich_console__",
                "__rich_measure__"
            ]
        },
        "errors.py": {
            "list-of-functions": []
        },
        "prompt.py": {
            "list-of-functions": [
                "__init__",
                "__rich__",
                "__init__",
                "ask",
                "ask",
                "ask",
                "render_default",
                "make_prompt",
                "get_input",
                "check_choice",
                "process_response",
                "on_validate_error",
                "pre_prompt",
                "__call__",
                "__call__",
                "__call__",
                "render_default",
                "process_response"
            ]
        },
        "segment.py": {
            "list-of-functions": [
                "cell_length",
                "__rich_repr__",
                "__bool__",
                "is_control",
                "_split_cells",
                "split_cells",
                "line",
                "apply_style",
                "filter_control",
                "split_lines",
                "split_and_crop_lines",
                "adjust_line_length",
                "get_line_length",
                "get_shape",
                "set_shape",
                "align_top",
                "align_bottom",
                "align_middle",
                "simplify",
                "strip_links",
                "strip_styles",
                "remove_color",
                "divide",
                "__init__",
                "__rich_console__",
                "__init__",
                "__rich_console__"
            ]
        },
        "ansi.py": {
            "list-of-functions": [
                "_ansi_tokenize",
                "__init__",
                "decode",
                "decode_line",
                "read"
            ]
        },
        "progress.py": {
            "list-of-functions": [
                "track",
                "wrap_file",
                "open",
                "open",
                "open",
                "__init__",
                "run",
                "__enter__",
                "__exit__",
                "__init__",
                "__enter__",
                "__exit__",
                "__iter__",
                "__next__",
                "closed",
                "fileno",
                "isatty",
                "mode",
                "name",
                "readable",
                "seekable",
                "writable",
                "read",
                "readinto",
                "readline",
                "readlines",
                "close",
                "seek",
                "tell",
                "write",
                "__init__",
                "__enter__",
                "__exit__",
                "__init__",
                "get_table_column",
                "__call__",
                "render",
                "__init__",
                "render",
                "__init__",
                "set_spinner",
                "render",
                "__init__",
                "render",
                "__init__",
                "render",
                "render",
                "__init__",
                "render_speed",
                "render",
                "__init__",
                "render",
                "render",
                "render",
                "__init__",
                "render",
                "__init__",
                "render",
                "render",
                "get_time",
                "started",
                "remaining",
                "elapsed",
                "finished",
                "percentage",
                "speed",
                "time_remaining",
                "_reset",
                "__init__",
                "get_default_columns",
                "console",
                "tasks",
                "task_ids",
                "finished",
                "start",
                "stop",
                "__enter__",
                "__exit__",
                "track",
                "wrap_file",
                "open",
                "open",
                "open",
                "start_task",
                "stop_task",
                "update",
                "reset",
                "advance",
                "refresh",
                "get_renderable",
                "get_renderables",
                "make_tasks_table",
                "__rich__",
                "add_task",
                "remove_task"
            ]
        },
        "_stack.py": {
            "list-of-functions": [
                "top",
                "push"
            ]
        },
        "_windows.py": {
            "list-of-functions": [
                "get_windows_console_features",
                "get_windows_console_features"
            ]
        },
        "_cell_widths.py": {
            "list-of-functions": []
        },
        "cells.py": {
            "list-of-functions": [
                "cached_cell_len",
                "cell_len",
                "get_character_cell_size",
                "_get_codepoint_cell_size",
                "set_cell_size",
                "chop_cells"
            ]
        },
        "_win32_console.py": {
            "list-of-functions": [
                "GetStdHandle",
                "GetConsoleMode",
                "FillConsoleOutputCharacter",
                "FillConsoleOutputAttribute",
                "SetConsoleTextAttribute",
                "GetConsoleScreenBufferInfo",
                "SetConsoleCursorPosition",
                "GetConsoleCursorInfo",
                "SetConsoleCursorInfo",
                "SetConsoleTitle",
                "from_param",
                "__init__",
                "cursor_position",
                "screen_size",
                "write_text",
                "write_styled",
                "move_cursor_to",
                "erase_line",
                "erase_end_of_line",
                "erase_start_of_line",
                "move_cursor_up",
                "move_cursor_down",
                "move_cursor_forward",
                "move_cursor_to_column",
                "move_cursor_backward",
                "hide_cursor",
                "show_cursor",
                "set_title",
                "_get_cursor_size"
            ]
        },
        "panel.py": {
            "list-of-functions": [
                "__init__",
                "fit",
                "_title",
                "_subtitle",
                "__rich_console__",
                "__rich_measure__",
                "align_text"
            ]
        },
        "styled.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__",
                "__rich_measure__"
            ]
        },
        "spinner.py": {
            "list-of-functions": [
                "__init__",
                "__rich_console__",
                "__rich_measure__",
                "render",
                "update"
            ]
        },
        "_windows_renderer.py": {
            "list-of-functions": [
                "legacy_windows_render"
            ]
        },
        "json.py": {
            "list-of-functions": [
                "__init__",
                "from_data",
                "__rich__"
            ]
        },
        "padding.py": {
            "list-of-functions": [
                "__init__",
                "indent",
                "unpack",
                "__repr__",
                "__rich_console__",
                "__rich_measure__"
            ]
        },
        "__main__.py": {
            "list-of-functions": [
                "make_test_card",
                "__rich_console__",
                "__rich_measure__",
                "comparison"
            ]
        },
        "scope.py": {
            "list-of-functions": [
                "render_scope",
                "sort_items",
                "test"
            ]
        },
        "_extension.py": {
            "list-of-functions": [
                "load_ipython_extension"
            ]
        },
        "status.py": {
            "list-of-functions": [
                "__init__",
                "renderable",
                "console",
                "update",
                "start",
                "stop",
                "__rich__",
                "__enter__",
                "__exit__"
            ]
        },
        "abc.py": {
            "list-of-functions": [
                "__subclasshook__"
            ]
        },
        "jupyter.py": {
            "list-of-functions": [
                "_render_segments",
                "display",
                "print",
                "__init__",
                "_repr_mimebundle_",
                "_repr_mimebundle_",
                "escape"
            ]
        },
        "color_triplet.py": {
            "list-of-functions": [
                "hex",
                "rgb",
                "normalized"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/": {
        "filepost.py": {
            "list-of-functions": [
                "choose_boundary",
                "iter_field_objects",
                "iter_fields",
                "encode_multipart_formdata"
            ]
        },
        "fields.py": {
            "list-of-functions": [
                "guess_content_type",
                "format_header_param_rfc2231",
                "_replace_multiple",
                "format_header_param_html5",
                "replacer",
                "__init__",
                "from_tuples",
                "_render_part",
                "_render_parts",
                "render_headers",
                "make_multipart"
            ]
        },
        "_version.py": {
            "list-of-functions": []
        },
        "request.py": {
            "list-of-functions": [
                "__init__",
                "urlopen",
                "request",
                "request_encode_url",
                "request_encode_body"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "add_stderr_logger",
                "disable_warnings"
            ]
        },
        "poolmanager.py": {
            "list-of-functions": [
                "_default_key_normalizer",
                "proxy_from_url",
                "__init__",
                "__enter__",
                "__exit__",
                "_new_pool",
                "clear",
                "connection_from_host",
                "connection_from_context",
                "connection_from_pool_key",
                "connection_from_url",
                "_merge_pool_kwargs",
                "_proxy_requires_url_absolute_form",
                "_validate_proxy_scheme_url_selection",
                "urlopen",
                "__init__",
                "connection_from_host",
                "_set_proxy_headers",
                "urlopen"
            ]
        },
        "response.py": {
            "list-of-functions": [
                "_get_decoder",
                "__init__",
                "__getattr__",
                "decompress",
                "__init__",
                "__getattr__",
                "decompress",
                "__init__",
                "flush",
                "decompress",
                "__init__",
                "get_redirect_location",
                "release_conn",
                "drain_conn",
                "data",
                "connection",
                "isclosed",
                "tell",
                "_init_length",
                "_init_decoder",
                "_decode",
                "_flush_decoder",
                "_error_catcher",
                "_fp_read",
                "read",
                "stream",
                "from_httplib",
                "getheaders",
                "getheader",
                "info",
                "close",
                "closed",
                "fileno",
                "flush",
                "readable",
                "readinto",
                "supports_chunked_reads",
                "_update_chunk_length",
                "_handle_chunk",
                "read_chunked",
                "geturl",
                "__iter__",
                "__init__",
                "flush"
            ]
        },
        "connection.py": {
            "list-of-functions": [
                "_match_hostname",
                "_get_default_user_agent",
                "__init__",
                "host",
                "host",
                "_new_conn",
                "_is_using_tunnel",
                "_prepare_conn",
                "connect",
                "putrequest",
                "putheader",
                "request",
                "request_chunked",
                "__init__",
                "set_cert",
                "connect",
                "_connect_tls_proxy"
            ]
        },
        "_collections.py": {
            "list-of-functions": [
                "__init__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "clear",
                "keys",
                "__init__",
                "__setitem__",
                "__getitem__",
                "__delitem__",
                "__contains__",
                "__eq__",
                "__ne__",
                "__len__",
                "__iter__",
                "pop",
                "discard",
                "add",
                "extend",
                "getlist",
                "__repr__",
                "_copy_from",
                "copy",
                "iteritems",
                "itermerged",
                "items",
                "from_httplib",
                "__enter__",
                "__exit__"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__reduce__",
                "__init__",
                "__reduce__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__repr__",
                "__init__",
                "__repr__",
                "__init__",
                "__init__"
            ]
        },
        "connectionpool.py": {
            "list-of-functions": [
                "connection_from_url",
                "_normalize_host",
                "__init__",
                "__str__",
                "__enter__",
                "__exit__",
                "close",
                "__init__",
                "_new_conn",
                "_get_conn",
                "_put_conn",
                "_validate_conn",
                "_prepare_proxy",
                "_get_timeout",
                "_raise_timeout",
                "_make_request",
                "_absolute_url",
                "close",
                "is_same_host",
                "urlopen",
                "__init__",
                "_prepare_conn",
                "_prepare_proxy",
                "_new_conn",
                "_validate_conn",
                "_is_ssl_error_message_from_http_proxy"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/util/": {
        "queue.py": {
            "list-of-functions": [
                "_init",
                "_qsize",
                "_put",
                "_get"
            ]
        },
        "ssltransport.py": {
            "list-of-functions": [
                "_validate_ssl_context_for_tls_in_tls",
                "__init__",
                "__enter__",
                "__exit__",
                "fileno",
                "read",
                "recv",
                "recv_into",
                "sendall",
                "send",
                "makefile",
                "unwrap",
                "close",
                "getpeercert",
                "version",
                "cipher",
                "selected_alpn_protocol",
                "selected_npn_protocol",
                "shared_ciphers",
                "compression",
                "settimeout",
                "gettimeout",
                "_decref_socketios",
                "_wrap_ssl_read",
                "_ssl_io_loop"
            ]
        },
        "proxy.py": {
            "list-of-functions": [
                "connection_requires_http_tunnel",
                "create_proxy_ssl_context"
            ]
        },
        "wait.py": {
            "list-of-functions": [
                "select_wait_for_socket",
                "poll_wait_for_socket",
                "null_wait_for_socket",
                "_have_working_poll",
                "wait_for_socket",
                "wait_for_read",
                "wait_for_write",
                "_retry_on_intr",
                "_retry_on_intr",
                "do_poll"
            ]
        },
        "request.py": {
            "list-of-functions": [
                "make_headers",
                "set_file_position",
                "rewind_body"
            ]
        },
        "timeout.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "resolve_default_timeout",
                "_validate_timeout",
                "from_float",
                "clone",
                "start_connect",
                "get_connect_duration",
                "connect_timeout",
                "read_timeout"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "response.py": {
            "list-of-functions": [
                "is_fp_closed",
                "assert_header_parsing",
                "is_response_to_head"
            ]
        },
        "ssl_.py": {
            "list-of-functions": [
                "_const_compare_digest_backport",
                "assert_fingerprint",
                "resolve_cert_reqs",
                "resolve_ssl_version",
                "create_urllib3_context",
                "ssl_wrap_socket",
                "is_ipaddress",
                "_is_key_file_encrypted",
                "_ssl_wrap_socket_impl",
                "disable_check_hostname",
                "__init__",
                "load_cert_chain",
                "load_verify_locations",
                "set_ciphers",
                "wrap_socket"
            ]
        },
        "retry.py": {
            "list-of-functions": [
                "DEFAULT_METHOD_WHITELIST",
                "DEFAULT_METHOD_WHITELIST",
                "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
                "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
                "BACKOFF_MAX",
                "BACKOFF_MAX",
                "__init__",
                "new",
                "from_int",
                "get_backoff_time",
                "parse_retry_after",
                "get_retry_after",
                "sleep_for_retry",
                "_sleep_backoff",
                "sleep",
                "_is_connection_error",
                "_is_read_error",
                "_is_method_retryable",
                "is_retry",
                "is_exhausted",
                "increment",
                "__repr__",
                "__getattr__"
            ]
        },
        "url.py": {
            "list-of-functions": [
                "split_first",
                "_encode_invalid_chars",
                "_remove_path_dot_segments",
                "_normalize_host",
                "_idna_encode",
                "_encode_target",
                "parse_url",
                "get_host",
                "__new__",
                "hostname",
                "request_uri",
                "netloc",
                "url",
                "__str__",
                "ensure_type"
            ]
        },
        "connection.py": {
            "list-of-functions": [
                "is_connection_dropped",
                "create_connection",
                "_set_socket_options",
                "allowed_gai_family",
                "_has_ipv6"
            ]
        },
        "ssl_match_hostname.py": {
            "list-of-functions": [
                "_dnsname_match",
                "_to_unicode",
                "_ipaddress_match",
                "match_hostname"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/": {
        "securetransport.py": {
            "list-of-functions": [
                "inject_into_urllib3",
                "extract_from_urllib3",
                "_read_callback",
                "_write_callback",
                "__init__",
                "_raise_on_error",
                "_set_ciphers",
                "_set_alpn_protocols",
                "_custom_validate",
                "_evaluate_trust",
                "handshake",
                "fileno",
                "_decref_socketios",
                "recv",
                "recv_into",
                "settimeout",
                "gettimeout",
                "send",
                "sendall",
                "shutdown",
                "close",
                "getpeercert",
                "version",
                "_reuse",
                "_drop",
                "makefile",
                "makefile",
                "__init__",
                "check_hostname",
                "check_hostname",
                "options",
                "options",
                "verify_mode",
                "verify_mode",
                "set_default_verify_paths",
                "load_default_certs",
                "set_ciphers",
                "load_verify_locations",
                "load_cert_chain",
                "set_alpn_protocols",
                "wrap_socket"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "socks.py": {
            "list-of-functions": [
                "__init__",
                "_new_conn",
                "__init__"
            ]
        },
        "_appengine_environ.py": {
            "list-of-functions": [
                "is_appengine",
                "is_appengine_sandbox",
                "is_local_appengine",
                "is_prod_appengine",
                "is_prod_appengine_mvms"
            ]
        },
        "pyopenssl.py": {
            "list-of-functions": [
                "inject_into_urllib3",
                "extract_from_urllib3",
                "_validate_dependencies_met",
                "_dnsname_to_stdlib",
                "get_subj_alt_name",
                "_verify_callback",
                "idna_encode",
                "__init__",
                "fileno",
                "_decref_socketios",
                "recv",
                "recv_into",
                "settimeout",
                "_send_until_done",
                "sendall",
                "shutdown",
                "close",
                "getpeercert",
                "version",
                "_reuse",
                "_drop",
                "makefile",
                "__init__",
                "options",
                "options",
                "verify_mode",
                "verify_mode",
                "set_default_verify_paths",
                "set_ciphers",
                "load_verify_locations",
                "load_cert_chain",
                "set_alpn_protocols",
                "wrap_socket"
            ]
        },
        "appengine.py": {
            "list-of-functions": [
                "__init__",
                "__enter__",
                "__exit__",
                "urlopen",
                "_urlfetch_response_to_http_response",
                "_get_absolute_timeout",
                "_get_retries"
            ]
        },
        "ntlmpool.py": {
            "list-of-functions": [
                "__init__",
                "_new_conn",
                "urlopen"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/contrib/_securetransport/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "low_level.py": {
            "list-of-functions": [
                "_cf_data_from_bytes",
                "_cf_dictionary_from_tuples",
                "_cfstr",
                "_create_cfstring_array",
                "_cf_string_to_unicode",
                "_assert_no_error",
                "_cert_array_from_pem",
                "_is_cert",
                "_is_identity",
                "_temporary_keychain",
                "_load_items_from_file",
                "_load_client_cert_chain",
                "_build_tls_unknown_ca_alert"
            ]
        },
        "bindings.py": {
            "list-of-functions": [
                "load_cdll"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/packages/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "six.py": {
            "list-of-functions": [
                "_add_doc",
                "_import_module",
                "add_move",
                "remove_move",
                "assertCountEqual",
                "assertRaisesRegex",
                "assertRegex",
                "assertNotRegex",
                "with_metaclass",
                "add_metaclass",
                "ensure_binary",
                "ensure_str",
                "ensure_text",
                "python_2_unicode_compatible",
                "__init__",
                "__get__",
                "__init__",
                "_resolve",
                "__getattr__",
                "__init__",
                "__dir__",
                "__init__",
                "_resolve",
                "__init__",
                "_add_module",
                "_get_module",
                "find_module",
                "find_spec",
                "__get_module",
                "load_module",
                "is_package",
                "get_code",
                "create_module",
                "exec_module",
                "__dir__",
                "get_unbound_function",
                "create_unbound_method",
                "get_unbound_function",
                "create_bound_method",
                "create_unbound_method",
                "iterkeys",
                "itervalues",
                "iteritems",
                "iterlists",
                "iterkeys",
                "itervalues",
                "iteritems",
                "iterlists",
                "b",
                "u",
                "b",
                "u",
                "byte2int",
                "indexbytes",
                "reraise",
                "exec_",
                "raise_from",
                "print_",
                "print_",
                "_update_wrapper",
                "wraps",
                "wrapper",
                "advance_iterator",
                "callable",
                "next",
                "write",
                "__new__",
                "__prepare__",
                "__len__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/urllib3/packages/backports/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "makefile.py": {
            "list-of-functions": [
                "backport_makefile"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/pkg_resources/": {
        "__init__.py": {
            "list-of-functions": [
                "_declare_state",
                "__getstate__",
                "__setstate__",
                "_sget_dict",
                "_sset_dict",
                "_sget_object",
                "_sset_object",
                "get_supported_platform",
                "register_loader_type",
                "get_provider",
                "_macos_vers",
                "_macos_arch",
                "get_build_platform",
                "compatible_platforms",
                "run_script",
                "get_distribution",
                "load_entry_point",
                "get_entry_map",
                "get_entry_info",
                "get_default_cache",
                "safe_name",
                "safe_version",
                "_forgiving_version",
                "_safe_segment",
                "safe_extra",
                "to_filename",
                "invalid_marker",
                "evaluate_marker",
                "_parents",
                "register_finder",
                "find_distributions",
                "find_eggs_in_zip",
                "find_nothing",
                "find_on_path",
                "dist_factory",
                "safe_listdir",
                "distributions_from_metadata",
                "non_empty_lines",
                "resolve_egg_link",
                "register_namespace_handler",
                "_handle_ns",
                "_rebuild_mod_path",
                "declare_namespace",
                "fixup_namespace_packages",
                "file_ns_handler",
                "null_ns_handler",
                "normalize_path",
                "_cygwin_patch",
                "_normalize_cached",
                "_is_egg_path",
                "_is_zip_egg",
                "_is_unpacked_egg",
                "_set_parent_ns",
                "_version_from_file",
                "issue_warning",
                "parse_requirements",
                "_always_object",
                "_find_adapter",
                "ensure_directory",
                "_bypass_ensure_directory",
                "split_sections",
                "_mkstemp",
                "_call_aside",
                "_initialize",
                "_initialize_master_working_set",
                "__repr__",
                "dist",
                "req",
                "report",
                "with_context",
                "required_by",
                "req",
                "requirers",
                "requirers_str",
                "report",
                "__str__",
                "has_metadata",
                "get_metadata",
                "get_metadata_lines",
                "metadata_isdir",
                "metadata_listdir",
                "run_script",
                "get_resource_filename",
                "get_resource_stream",
                "get_resource_string",
                "has_resource",
                "resource_isdir",
                "resource_listdir",
                "__init__",
                "_build_master",
                "_build_from_requirements",
                "add_entry",
                "__contains__",
                "find",
                "iter_entry_points",
                "run_script",
                "__iter__",
                "add",
                "resolve",
                "_resolve_dist",
                "find_plugins",
                "require",
                "subscribe",
                "_added_new",
                "__getstate__",
                "__setstate__",
                "markers_pass",
                "__init__",
                "can_add",
                "remove",
                "scan",
                "__getitem__",
                "add",
                "best_match",
                "obtain",
                "__iter__",
                "__iadd__",
                "__add__",
                "__init__",
                "resource_exists",
                "resource_isdir",
                "resource_filename",
                "resource_stream",
                "resource_string",
                "resource_listdir",
                "extraction_error",
                "get_cache_path",
                "_warn_unsafe_extraction_path",
                "postprocess",
                "set_extraction_path",
                "cleanup_resources",
                "__init__",
                "get_resource_filename",
                "get_resource_stream",
                "get_resource_string",
                "has_resource",
                "_get_metadata_path",
                "has_metadata",
                "get_metadata",
                "get_metadata_lines",
                "resource_isdir",
                "metadata_isdir",
                "resource_listdir",
                "metadata_listdir",
                "run_script",
                "_has",
                "_isdir",
                "_listdir",
                "_fn",
                "_validate_resource_path",
                "_get",
                "__init__",
                "_setup_prefix",
                "_set_egg",
                "_has",
                "_isdir",
                "_listdir",
                "get_resource_stream",
                "_get",
                "_register",
                "_get",
                "_listdir",
                "__init__",
                "build",
                "load",
                "__init__",
                "_zipinfo_name",
                "_parts",
                "zipinfo",
                "get_resource_filename",
                "_get_date_and_size",
                "_extract_resource",
                "_is_current",
                "_get_eager_resources",
                "_index",
                "_has",
                "_isdir",
                "_listdir",
                "_eager_to_zip",
                "_resource_to_zip",
                "__init__",
                "_get_metadata_path",
                "has_metadata",
                "get_metadata",
                "_warn_on_replacement",
                "get_metadata_lines",
                "__init__",
                "__init__",
                "__bool__",
                "__call__",
                "safe_sys_path_index",
                "position_in_sys_path",
                "__init__",
                "__str__",
                "__repr__",
                "load",
                "resolve",
                "require",
                "parse",
                "_parse_extras",
                "parse_group",
                "parse_map",
                "is_version_line",
                "__init__",
                "from_location",
                "_reload_version",
                "hashcmp",
                "__hash__",
                "__lt__",
                "__le__",
                "__gt__",
                "__ge__",
                "__eq__",
                "__ne__",
                "key",
                "parsed_version",
                "_forgiving_parsed_version",
                "version",
                "_dep_map",
                "_filter_extras",
                "_build_dep_map",
                "requires",
                "_get_metadata_path_for_display",
                "_get_metadata",
                "_get_version",
                "activate",
                "egg_name",
                "__repr__",
                "__str__",
                "__getattr__",
                "__dir__",
                "from_filename",
                "as_requirement",
                "load_entry_point",
                "get_entry_map",
                "get_entry_info",
                "insert_on",
                "check_version_conflict",
                "has_version",
                "clone",
                "extras",
                "_reload_version",
                "_parsed_pkg_info",
                "_dep_map",
                "_compute_dependencies",
                "__init__",
                "__eq__",
                "__ne__",
                "__contains__",
                "__hash__",
                "__repr__",
                "parse",
                "reqs_for_extra"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/": {
        "resolvers.py": {
            "list-of-functions": [
                "_has_route_to_root",
                "_build_result",
                "__init__",
                "__str__",
                "__init__",
                "__str__",
                "__init__",
                "__repr__",
                "iter_requirement",
                "iter_parent",
                "__init__",
                "__init__",
                "__init__",
                "state",
                "_push_new_state",
                "_add_to_criteria",
                "_remove_information_from_criteria",
                "_get_preference",
                "_is_current_pin_satisfying",
                "_get_updated_criteria",
                "_attempt_to_pin_criterion",
                "_backjump",
                "resolve",
                "resolve",
                "_patch_criteria"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "providers.py": {
            "list-of-functions": [
                "identify",
                "get_preference",
                "find_matches",
                "is_satisfied_by",
                "get_dependencies",
                "__init__",
                "resolve"
            ]
        },
        "structs.py": {
            "list-of-functions": [
                "build_iter_view",
                "__init__",
                "__iter__",
                "__len__",
                "__contains__",
                "copy",
                "add",
                "remove",
                "connected",
                "connect",
                "iter_edges",
                "iter_children",
                "iter_parents",
                "__init__",
                "__repr__",
                "__bool__",
                "__contains__",
                "__getitem__",
                "__iter__",
                "__len__",
                "__init__",
                "__repr__",
                "__bool__",
                "__iter__",
                "__init__",
                "__repr__",
                "__bool__",
                "__iter__"
            ]
        },
        "reporters.py": {
            "list-of-functions": [
                "starting",
                "starting_round",
                "ending_round",
                "ending",
                "adding_requirement",
                "resolving_conflicts",
                "rejecting_candidate",
                "pinning"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/resolvelib/compat/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "collections_abc.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pip/_vendor/platformdirs/": {
        "macos.py": {
            "list-of-functions": [
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "unix.py": {
            "list-of-functions": [
                "_get_user_dirs_folder",
                "getuid",
                "user_data_dir",
                "site_data_dir",
                "_with_multi_path",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "site_data_path",
                "site_config_path",
                "site_cache_path",
                "_first_item_as_path_if_multipath"
            ]
        },
        "version.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": [
                "_set_platform_dir_class",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "user_data_path",
                "site_data_path",
                "user_config_path",
                "site_config_path",
                "site_cache_path",
                "user_cache_path",
                "user_state_path",
                "user_log_path",
                "user_documents_path",
                "user_runtime_path"
            ]
        },
        "api.py": {
            "list-of-functions": [
                "__init__",
                "_append_app_name_and_version",
                "_optionally_create_directory",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "user_data_path",
                "site_data_path",
                "user_config_path",
                "site_config_path",
                "user_cache_path",
                "site_cache_path",
                "user_state_path",
                "user_log_path",
                "user_documents_path",
                "user_runtime_path"
            ]
        },
        "android.py": {
            "list-of-functions": [
                "_android_folder",
                "_android_documents_folder",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "windows.py": {
            "list-of-functions": [
                "get_win_folder_from_env_vars",
                "get_win_folder_from_registry",
                "get_win_folder_via_ctypes",
                "_pick_get_win_folder",
                "user_data_dir",
                "_append_parts",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "site_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "__main__.py": {
            "list-of-functions": [
                "main"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/certifi/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "core.py": {
            "list-of-functions": [
                "where",
                "contents",
                "where",
                "contents",
                "read_text",
                "where",
                "contents"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/attr/": {
        "setters.py": {
            "list-of-functions": [
                "pipe",
                "frozen",
                "validate",
                "convert",
                "wrapped_pipe"
            ]
        },
        "validators.py": {
            "list-of-functions": [
                "set_disabled",
                "get_disabled",
                "disabled",
                "instance_of",
                "matches_re",
                "provides",
                "optional",
                "in_",
                "is_callable",
                "deep_iterable",
                "deep_mapping",
                "lt",
                "le",
                "ge",
                "gt",
                "max_len",
                "min_len",
                "_subclass_of",
                "not_",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__",
                "__call__",
                "__repr__"
            ]
        },
        "_make.py": {
            "list-of-functions": [
                "attrib",
                "_compile_and_eval",
                "_make_method",
                "_make_attr_tuple_class",
                "_is_class_var",
                "_has_own_attribute",
                "_get_annotations",
                "_collect_base_attrs",
                "_collect_base_attrs_broken",
                "_transform_attrs",
                "_frozen_setattrs",
                "_frozen_delattrs",
                "_determine_attrs_eq_order",
                "_determine_attrib_eq_order",
                "_determine_whether_to_implement",
                "attrs",
                "_has_frozen_base_class",
                "_generate_unique_filename",
                "_make_hash",
                "_add_hash",
                "_make_ne",
                "_make_eq",
                "_make_order",
                "_add_eq",
                "_make_repr",
                "_add_repr",
                "fields",
                "fields_dict",
                "validate",
                "_is_slot_cls",
                "_is_slot_attr",
                "_make_init",
                "_setattr",
                "_setattr_with_converter",
                "_assign",
                "_assign_with_converter",
                "_attrs_to_init_script",
                "_default_init_alias_for",
                "make_class",
                "and_",
                "pipe",
                "__repr__",
                "__bool__",
                "__reduce__",
                "__init__",
                "__repr__",
                "_patch_original_class",
                "_create_slots_class",
                "add_repr",
                "add_str",
                "_make_getstate_setstate",
                "make_unhashable",
                "add_hash",
                "add_init",
                "add_match_args",
                "add_attrs_init",
                "add_eq",
                "add_order",
                "add_setattr",
                "_add_method_dunders",
                "decide_callable_or_boolean",
                "wrap",
                "append_hash_computation_lines",
                "__ne__",
                "attrs_to_tuple",
                "__lt__",
                "__le__",
                "__gt__",
                "__ge__",
                "__init__",
                "__setattr__",
                "from_counting_attr",
                "evolve",
                "__getstate__",
                "__setstate__",
                "_setattrs",
                "__init__",
                "validator",
                "default",
                "__init__",
                "__getstate__",
                "__setstate__",
                "__call__",
                "pipe_converter",
                "build_class",
                "build_class",
                "__str__",
                "slots_getstate",
                "slots_setstate",
                "__setattr__",
                "fmt_setter",
                "fmt_setter_with_converter"
            ]
        },
        "_cmp.py": {
            "list-of-functions": [
                "cmp_using",
                "_make_init",
                "_make_operator",
                "_is_comparable_to",
                "_check_same_type",
                "__init__",
                "method"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_make_getattr",
                "__getattr__"
            ]
        },
        "_next_gen.py": {
            "list-of-functions": [
                "define",
                "field",
                "asdict",
                "astuple",
                "do_it",
                "wrap"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__str__"
            ]
        },
        "_version_info.py": {
            "list-of-functions": [
                "_from_version_string",
                "_ensure_tuple",
                "__eq__",
                "__lt__"
            ]
        },
        "converters.py": {
            "list-of-functions": [
                "optional",
                "default_if_none",
                "to_bool",
                "optional_converter",
                "default_if_none_converter",
                "default_if_none_converter"
            ]
        },
        "_compat.py": {
            "list-of-functions": [
                "just_warn",
                "make_set_closure_cell",
                "get_generic_base",
                "__init__",
                "get_first_param_type",
                "get_return_type",
                "set_closure_cell",
                "make_func_with_cell",
                "set_closure_cell",
                "set_first_cellvar_to",
                "set_closure_cell",
                "func",
                "force_x_to_be_a_cell"
            ]
        },
        "_config.py": {
            "list-of-functions": [
                "set_run_validators",
                "get_run_validators"
            ]
        },
        "_funcs.py": {
            "list-of-functions": [
                "asdict",
                "_asdict_anything",
                "astuple",
                "has",
                "assoc",
                "evolve",
                "resolve_types"
            ]
        },
        "filters.py": {
            "list-of-functions": [
                "_split_what",
                "include",
                "exclude",
                "include_",
                "exclude_"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/tqdm/": {
        "version.py": {
            "list-of-functions": []
        },
        "_main.py": {
            "list-of-functions": []
        },
        "_monitor.py": {
            "list-of-functions": [
                "__init__",
                "exit",
                "get_instances",
                "run",
                "report"
            ]
        },
        "keras.py": {
            "list-of-functions": [
                "bar2callback",
                "__init__",
                "on_train_begin",
                "on_epoch_begin",
                "on_train_end",
                "display",
                "_implements_train_batch_hooks",
                "_implements_test_batch_hooks",
                "_implements_predict_batch_hooks",
                "callback"
            ]
        },
        "_tqdm_gui.py": {
            "list-of-functions": []
        },
        "asyncio.py": {
            "list-of-functions": [
                "tarange",
                "__init__",
                "__aiter__",
                "send",
                "as_completed"
            ]
        },
        "_dist_ver.py": {
            "list-of-functions": []
        },
        "std.py": {
            "list-of-functions": [
                "TRLock",
                "trange",
                "__init__",
                "__init__",
                "acquire",
                "release",
                "__enter__",
                "__exit__",
                "create_mp_lock",
                "create_th_lock",
                "__init__",
                "colour",
                "colour",
                "__format__",
                "__init__",
                "__call__",
                "format_sizeof",
                "format_interval",
                "format_num",
                "status_printer",
                "format_meter",
                "__new__",
                "_get_free_pos",
                "_decr_instances",
                "write",
                "external_write_mode",
                "set_lock",
                "get_lock",
                "pandas",
                "__init__",
                "__bool__",
                "__len__",
                "__reversed__",
                "__contains__",
                "__enter__",
                "__exit__",
                "__del__",
                "__str__",
                "_comparable",
                "__hash__",
                "__iter__",
                "update",
                "close",
                "clear",
                "refresh",
                "unpause",
                "reset",
                "set_description",
                "set_description_str",
                "set_postfix",
                "set_postfix_str",
                "moveto",
                "format_dict",
                "display",
                "wrapattr",
                "fp_write",
                "print_status",
                "inner_generator",
                "fp_write",
                "inner",
                "wrapper"
            ]
        },
        "_tqdm_notebook.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": [
                "tqdm_notebook",
                "tnrange"
            ]
        },
        "rich.py": {
            "list-of-functions": [
                "trrange",
                "__init__",
                "render",
                "__init__",
                "render",
                "__init__",
                "close",
                "clear",
                "display",
                "reset"
            ]
        },
        "tk.py": {
            "list-of-functions": [
                "ttkrange",
                "__init__",
                "close",
                "clear",
                "display",
                "set_description",
                "set_description_str",
                "cancel",
                "reset",
                "_tk_dispatching_helper",
                "_close"
            ]
        },
        "cli.py": {
            "list-of-functions": [
                "cast",
                "posix_pipe",
                "main",
                "cp",
                "write",
                "write",
                "callback",
                "callback",
                "callback",
                "callback"
            ]
        },
        "dask.py": {
            "list-of-functions": [
                "__init__",
                "_start_state",
                "_posttask",
                "_finish",
                "display"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "_is_utf",
                "_supports_unicode",
                "_is_ascii",
                "_screen_shape_wrapper",
                "_screen_shape_windows",
                "_screen_shape_tput",
                "_screen_shape_linux",
                "_environ_cols_wrapper",
                "_term_move_up",
                "_text_width",
                "disp_len",
                "disp_trim",
                "__init__",
                "__format__",
                "__lt__",
                "__le__",
                "__eq__",
                "__ne__",
                "__gt__",
                "__ge__",
                "__getattr__",
                "__setattr__",
                "wrapper_getattr",
                "wrapper_setattr",
                "__init__",
                "__init__",
                "write",
                "__eq__",
                "disable_on_exception",
                "__init__",
                "__eq__",
                "__init__",
                "inner",
                "inner",
                "write",
                "read"
            ]
        },
        "_tqdm.py": {
            "list-of-functions": []
        },
        "_tqdm_pandas.py": {
            "list-of-functions": [
                "tqdm_pandas"
            ]
        },
        "autonotebook.py": {
            "list-of-functions": []
        },
        "notebook.py": {
            "list-of-functions": [
                "tnrange",
                "_json_",
                "__repr__",
                "_repr_pretty_",
                "status_printer",
                "display",
                "colour",
                "colour",
                "__init__",
                "__iter__",
                "update",
                "close",
                "clear",
                "reset"
            ]
        },
        "gui.py": {
            "list-of-functions": [
                "tgrange",
                "__init__",
                "close",
                "clear",
                "display"
            ]
        },
        "__main__.py": {
            "list-of-functions": []
        },
        "_utils.py": {
            "list-of-functions": []
        },
        "auto.py": {
            "list-of-functions": [
                "trange"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/tqdm/contrib/": {
        "logging.py": {
            "list-of-functions": [
                "_is_console_logging_handler",
                "_get_first_found_console_logging_handler",
                "logging_redirect_tqdm",
                "tqdm_logging_redirect",
                "__init__",
                "emit"
            ]
        },
        "concurrent.py": {
            "list-of-functions": [
                "ensure_lock",
                "_executor_map",
                "thread_map",
                "process_map"
            ]
        },
        "bells.py": {
            "list-of-functions": []
        },
        "telegram.py": {
            "list-of-functions": [
                "ttgrange",
                "__init__",
                "message_id",
                "write",
                "delete",
                "__init__",
                "display",
                "clear",
                "close"
            ]
        },
        "discord.py": {
            "list-of-functions": [
                "tdrange",
                "__init__",
                "write",
                "__init__",
                "display",
                "clear"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "builtin_iterable",
                "tenumerate",
                "tzip",
                "tmap",
                "__init__",
                "write",
                "__del__"
            ]
        },
        "slack.py": {
            "list-of-functions": [
                "tsrange",
                "__init__",
                "write",
                "__init__",
                "display",
                "clear"
            ]
        },
        "itertools.py": {
            "list-of-functions": [
                "product"
            ]
        },
        "utils_worker.py": {
            "list-of-functions": [
                "__init__",
                "submit"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/_yaml/": {
        "__init__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/yaml/": {
        "scanner.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "check_token",
                "peek_token",
                "get_token",
                "need_more_tokens",
                "fetch_more_tokens",
                "next_possible_simple_key",
                "stale_possible_simple_keys",
                "save_possible_simple_key",
                "remove_possible_simple_key",
                "unwind_indent",
                "add_indent",
                "fetch_stream_start",
                "fetch_stream_end",
                "fetch_directive",
                "fetch_document_start",
                "fetch_document_end",
                "fetch_document_indicator",
                "fetch_flow_sequence_start",
                "fetch_flow_mapping_start",
                "fetch_flow_collection_start",
                "fetch_flow_sequence_end",
                "fetch_flow_mapping_end",
                "fetch_flow_collection_end",
                "fetch_flow_entry",
                "fetch_block_entry",
                "fetch_key",
                "fetch_value",
                "fetch_alias",
                "fetch_anchor",
                "fetch_tag",
                "fetch_literal",
                "fetch_folded",
                "fetch_block_scalar",
                "fetch_single",
                "fetch_double",
                "fetch_flow_scalar",
                "fetch_plain",
                "check_directive",
                "check_document_start",
                "check_document_end",
                "check_block_entry",
                "check_key",
                "check_value",
                "check_plain",
                "scan_to_next_token",
                "scan_directive",
                "scan_directive_name",
                "scan_yaml_directive_value",
                "scan_yaml_directive_number",
                "scan_tag_directive_value",
                "scan_tag_directive_handle",
                "scan_tag_directive_prefix",
                "scan_directive_ignored_line",
                "scan_anchor",
                "scan_tag",
                "scan_block_scalar",
                "scan_block_scalar_indicators",
                "scan_block_scalar_ignored_line",
                "scan_block_scalar_indentation",
                "scan_block_scalar_breaks",
                "scan_flow_scalar",
                "scan_flow_scalar_non_spaces",
                "scan_flow_scalar_spaces",
                "scan_flow_scalar_breaks",
                "scan_plain",
                "scan_plain_spaces",
                "scan_tag_handle",
                "scan_tag_uri",
                "scan_uri_escapes",
                "scan_line_break"
            ]
        },
        "error.py": {
            "list-of-functions": [
                "__init__",
                "get_snippet",
                "__str__",
                "__init__",
                "__str__"
            ]
        },
        "constructor.py": {
            "list-of-functions": [
                "__init__",
                "check_data",
                "check_state_key",
                "get_data",
                "get_single_data",
                "construct_document",
                "construct_object",
                "construct_scalar",
                "construct_sequence",
                "construct_mapping",
                "construct_pairs",
                "add_constructor",
                "add_multi_constructor",
                "construct_scalar",
                "flatten_mapping",
                "construct_mapping",
                "construct_yaml_null",
                "construct_yaml_bool",
                "construct_yaml_int",
                "construct_yaml_float",
                "construct_yaml_binary",
                "construct_yaml_timestamp",
                "construct_yaml_omap",
                "construct_yaml_pairs",
                "construct_yaml_set",
                "construct_yaml_str",
                "construct_yaml_seq",
                "construct_yaml_map",
                "construct_yaml_object",
                "construct_undefined",
                "get_state_keys_blacklist",
                "get_state_keys_blacklist_regexp",
                "construct_python_str",
                "construct_python_unicode",
                "construct_python_bytes",
                "construct_python_long",
                "construct_python_complex",
                "construct_python_tuple",
                "find_python_module",
                "find_python_name",
                "construct_python_name",
                "construct_python_module",
                "make_python_instance",
                "set_python_instance_state",
                "construct_python_object",
                "construct_python_object_apply",
                "construct_python_object_new",
                "find_python_module",
                "find_python_name",
                "make_python_instance",
                "set_python_instance_state"
            ]
        },
        "composer.py": {
            "list-of-functions": [
                "__init__",
                "check_node",
                "get_node",
                "get_single_node",
                "compose_document",
                "compose_node",
                "compose_scalar_node",
                "compose_sequence_node",
                "compose_mapping_node"
            ]
        },
        "events.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "warnings",
                "scan",
                "parse",
                "compose",
                "compose_all",
                "load",
                "load_all",
                "full_load",
                "full_load_all",
                "safe_load",
                "safe_load_all",
                "unsafe_load",
                "unsafe_load_all",
                "emit",
                "serialize_all",
                "serialize",
                "dump_all",
                "dump",
                "safe_dump_all",
                "safe_dump",
                "add_implicit_resolver",
                "add_path_resolver",
                "add_constructor",
                "add_multi_constructor",
                "add_representer",
                "add_multi_representer",
                "__init__",
                "from_yaml",
                "to_yaml"
            ]
        },
        "representer.py": {
            "list-of-functions": [
                "__init__",
                "represent",
                "represent_data",
                "add_representer",
                "add_multi_representer",
                "represent_scalar",
                "represent_sequence",
                "represent_mapping",
                "ignore_aliases",
                "ignore_aliases",
                "represent_none",
                "represent_str",
                "represent_binary",
                "represent_bool",
                "represent_int",
                "represent_float",
                "represent_list",
                "represent_dict",
                "represent_set",
                "represent_date",
                "represent_datetime",
                "represent_yaml_object",
                "represent_undefined",
                "represent_complex",
                "represent_tuple",
                "represent_name",
                "represent_module",
                "represent_object",
                "represent_ordered_dict"
            ]
        },
        "tokens.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "dumper.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "cyaml.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "parser.py": {
            "list-of-functions": [
                "__init__",
                "dispose",
                "check_event",
                "peek_event",
                "get_event",
                "parse_stream_start",
                "parse_implicit_document_start",
                "parse_document_start",
                "parse_document_end",
                "parse_document_content",
                "process_directives",
                "parse_block_node",
                "parse_flow_node",
                "parse_block_node_or_indentless_sequence",
                "parse_node",
                "parse_block_sequence_first_entry",
                "parse_block_sequence_entry",
                "parse_indentless_sequence_entry",
                "parse_block_mapping_first_key",
                "parse_block_mapping_key",
                "parse_block_mapping_value",
                "parse_flow_sequence_first_entry",
                "parse_flow_sequence_entry",
                "parse_flow_sequence_entry_mapping_key",
                "parse_flow_sequence_entry_mapping_value",
                "parse_flow_sequence_entry_mapping_end",
                "parse_flow_mapping_first_key",
                "parse_flow_mapping_key",
                "parse_flow_mapping_value",
                "parse_flow_mapping_empty_value",
                "process_empty_scalar"
            ]
        },
        "reader.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__init__",
                "peek",
                "prefix",
                "forward",
                "get_mark",
                "determine_encoding",
                "check_printable",
                "update",
                "update_raw"
            ]
        },
        "loader.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__init__"
            ]
        },
        "resolver.py": {
            "list-of-functions": [
                "__init__",
                "add_implicit_resolver",
                "add_path_resolver",
                "descend_resolver",
                "ascend_resolver",
                "check_resolver_prefix",
                "resolve"
            ]
        },
        "serializer.py": {
            "list-of-functions": [
                "__init__",
                "open",
                "close",
                "serialize",
                "anchor_node",
                "generate_anchor",
                "serialize_node"
            ]
        },
        "nodes.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "__init__",
                "__init__"
            ]
        },
        "emitter.py": {
            "list-of-functions": [
                "__init__",
                "__init__",
                "dispose",
                "emit",
                "need_more_events",
                "need_events",
                "increase_indent",
                "expect_stream_start",
                "expect_nothing",
                "expect_first_document_start",
                "expect_document_start",
                "expect_document_end",
                "expect_document_root",
                "expect_node",
                "expect_alias",
                "expect_scalar",
                "expect_flow_sequence",
                "expect_first_flow_sequence_item",
                "expect_flow_sequence_item",
                "expect_flow_mapping",
                "expect_first_flow_mapping_key",
                "expect_flow_mapping_key",
                "expect_flow_mapping_simple_value",
                "expect_flow_mapping_value",
                "expect_block_sequence",
                "expect_first_block_sequence_item",
                "expect_block_sequence_item",
                "expect_block_mapping",
                "expect_first_block_mapping_key",
                "expect_block_mapping_key",
                "expect_block_mapping_simple_value",
                "expect_block_mapping_value",
                "check_empty_sequence",
                "check_empty_mapping",
                "check_empty_document",
                "check_simple_key",
                "process_anchor",
                "process_tag",
                "choose_scalar_style",
                "process_scalar",
                "prepare_version",
                "prepare_tag_handle",
                "prepare_tag_prefix",
                "prepare_tag",
                "prepare_anchor",
                "analyze_scalar",
                "flush_stream",
                "write_stream_start",
                "write_stream_end",
                "write_indicator",
                "write_indent",
                "write_line_break",
                "write_version_directive",
                "write_tag_directive",
                "write_single_quoted",
                "write_double_quoted",
                "determine_block_hints",
                "write_folded",
                "write_literal",
                "write_plain"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/urllib3/": {
        "filepost.py": {
            "list-of-functions": [
                "choose_boundary",
                "iter_field_objects",
                "encode_multipart_formdata"
            ]
        },
        "fields.py": {
            "list-of-functions": [
                "guess_content_type",
                "format_header_param_rfc2231",
                "format_multipart_header_param",
                "format_header_param_html5",
                "format_header_param",
                "__init__",
                "from_tuples",
                "_render_part",
                "_render_parts",
                "render_headers",
                "make_multipart"
            ]
        },
        "_version.py": {
            "list-of-functions": []
        },
        "_base_connection.py": {
            "list-of-functions": [
                "__init__",
                "set_tunnel",
                "connect",
                "request",
                "getresponse",
                "close",
                "is_closed",
                "is_connected",
                "has_connected_to_proxy",
                "__init__"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "add_stderr_logger",
                "disable_warnings",
                "request"
            ]
        },
        "poolmanager.py": {
            "list-of-functions": [
                "_default_key_normalizer",
                "proxy_from_url",
                "__init__",
                "__enter__",
                "__exit__",
                "_new_pool",
                "clear",
                "connection_from_host",
                "connection_from_context",
                "connection_from_pool_key",
                "connection_from_url",
                "_merge_pool_kwargs",
                "_proxy_requires_url_absolute_form",
                "urlopen",
                "__init__",
                "connection_from_host",
                "_set_proxy_headers",
                "urlopen"
            ]
        },
        "response.py": {
            "list-of-functions": [
                "_get_decoder",
                "decompress",
                "flush",
                "__init__",
                "decompress",
                "flush",
                "__init__",
                "decompress",
                "flush",
                "__init__",
                "flush",
                "decompress",
                "__init__",
                "__len__",
                "put",
                "get",
                "__init__",
                "get_redirect_location",
                "data",
                "json",
                "url",
                "url",
                "connection",
                "retries",
                "retries",
                "stream",
                "read",
                "read_chunked",
                "release_conn",
                "drain_conn",
                "close",
                "_init_decoder",
                "_decode",
                "_flush_decoder",
                "readinto",
                "getheaders",
                "getheader",
                "info",
                "geturl",
                "__init__",
                "release_conn",
                "drain_conn",
                "data",
                "connection",
                "isclosed",
                "tell",
                "_init_length",
                "_error_catcher",
                "_fp_read",
                "_raw_read",
                "read",
                "stream",
                "readable",
                "close",
                "closed",
                "fileno",
                "flush",
                "supports_chunked_reads",
                "_update_chunk_length",
                "_handle_chunk",
                "read_chunked",
                "url",
                "url",
                "__iter__",
                "__init__",
                "flush",
                "__init__",
                "decompress",
                "flush"
            ]
        },
        "connection.py": {
            "list-of-functions": [
                "_ssl_wrap_socket_and_match_hostname",
                "_match_hostname",
                "_wrap_proxy_error",
                "_get_default_user_agent",
                "_url_from_connection",
                "__init__",
                "host",
                "host",
                "_new_conn",
                "set_tunnel",
                "connect",
                "is_closed",
                "is_connected",
                "has_connected_to_proxy",
                "close",
                "putrequest",
                "putheader",
                "request",
                "request_chunked",
                "getresponse",
                "__init__",
                "set_cert",
                "connect",
                "_connect_tls_proxy"
            ]
        },
        "_collections.py": {
            "list-of-functions": [
                "ensure_can_construct_http_header_dict",
                "__init__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__len__",
                "__iter__",
                "clear",
                "keys",
                "__init__",
                "__len__",
                "__iter__",
                "__contains__",
                "__init__",
                "__setitem__",
                "__getitem__",
                "__delitem__",
                "__contains__",
                "setdefault",
                "__eq__",
                "__ne__",
                "__len__",
                "__iter__",
                "discard",
                "add",
                "extend",
                "getlist",
                "getlist",
                "getlist",
                "__repr__",
                "_copy_from",
                "copy",
                "iteritems",
                "itermerged",
                "items",
                "_has_value_for_header",
                "keys",
                "__getitem__"
            ]
        },
        "exceptions.py": {
            "list-of-functions": [
                "__init__",
                "__reduce__",
                "__init__",
                "__reduce__",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "pool",
                "__init__",
                "__init__",
                "__init__",
                "__init__",
                "__repr__",
                "__init__",
                "__repr__",
                "__init__",
                "__init__"
            ]
        },
        "_request_methods.py": {
            "list-of-functions": [
                "__init__",
                "urlopen",
                "request",
                "request_encode_url",
                "request_encode_body"
            ]
        },
        "connectionpool.py": {
            "list-of-functions": [
                "connection_from_url",
                "_normalize_host",
                "_normalize_host",
                "_normalize_host",
                "_url_from_pool",
                "_close_pool_connections",
                "__init__",
                "__str__",
                "__enter__",
                "__exit__",
                "close",
                "__init__",
                "_new_conn",
                "_get_conn",
                "_put_conn",
                "_validate_conn",
                "_prepare_proxy",
                "_get_timeout",
                "_raise_timeout",
                "_make_request",
                "close",
                "is_same_host",
                "urlopen",
                "__init__",
                "_prepare_proxy",
                "_new_conn",
                "_validate_conn"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/urllib3/util/": {
        "ssltransport.py": {
            "list-of-functions": [
                "_validate_ssl_context_for_tls_in_tls",
                "__init__",
                "__enter__",
                "__exit__",
                "fileno",
                "read",
                "recv",
                "recv_into",
                "sendall",
                "send",
                "makefile",
                "unwrap",
                "close",
                "getpeercert",
                "getpeercert",
                "getpeercert",
                "version",
                "cipher",
                "selected_alpn_protocol",
                "selected_npn_protocol",
                "shared_ciphers",
                "compression",
                "settimeout",
                "gettimeout",
                "_decref_socketios",
                "_wrap_ssl_read",
                "_ssl_io_loop",
                "_ssl_io_loop",
                "_ssl_io_loop",
                "_ssl_io_loop"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "to_bytes",
                "to_str",
                "reraise"
            ]
        },
        "proxy.py": {
            "list-of-functions": [
                "connection_requires_http_tunnel"
            ]
        },
        "wait.py": {
            "list-of-functions": [
                "select_wait_for_socket",
                "poll_wait_for_socket",
                "_have_working_poll",
                "wait_for_socket",
                "wait_for_read",
                "wait_for_write",
                "do_poll"
            ]
        },
        "request.py": {
            "list-of-functions": [
                "make_headers",
                "set_file_position",
                "rewind_body",
                "body_to_chunks",
                "chunk_readable"
            ]
        },
        "timeout.py": {
            "list-of-functions": [
                "__init__",
                "__repr__",
                "resolve_default_timeout",
                "_validate_timeout",
                "from_float",
                "clone",
                "start_connect",
                "get_connect_duration",
                "connect_timeout",
                "read_timeout"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "response.py": {
            "list-of-functions": [
                "is_fp_closed",
                "assert_header_parsing",
                "is_response_to_head"
            ]
        },
        "ssl_.py": {
            "list-of-functions": [
                "_is_bpo_43522_fixed",
                "_is_has_never_check_common_name_reliable",
                "assert_fingerprint",
                "resolve_cert_reqs",
                "resolve_ssl_version",
                "create_urllib3_context",
                "ssl_wrap_socket",
                "ssl_wrap_socket",
                "ssl_wrap_socket",
                "is_ipaddress",
                "_is_key_file_encrypted",
                "_ssl_wrap_socket_impl"
            ]
        },
        "retry.py": {
            "list-of-functions": [
                "__init__",
                "new",
                "from_int",
                "get_backoff_time",
                "parse_retry_after",
                "get_retry_after",
                "sleep_for_retry",
                "_sleep_backoff",
                "sleep",
                "_is_connection_error",
                "_is_read_error",
                "_is_method_retryable",
                "is_retry",
                "is_exhausted",
                "increment",
                "__repr__"
            ]
        },
        "url.py": {
            "list-of-functions": [
                "_encode_invalid_chars",
                "_encode_invalid_chars",
                "_encode_invalid_chars",
                "_remove_path_dot_segments",
                "_normalize_host",
                "_normalize_host",
                "_normalize_host",
                "_idna_encode",
                "_encode_target",
                "parse_url",
                "__new__",
                "hostname",
                "request_uri",
                "authority",
                "netloc",
                "url",
                "__str__"
            ]
        },
        "connection.py": {
            "list-of-functions": [
                "is_connection_dropped",
                "create_connection",
                "_set_socket_options",
                "allowed_gai_family",
                "_has_ipv6"
            ]
        },
        "ssl_match_hostname.py": {
            "list-of-functions": [
                "_dnsname_match",
                "_ipaddress_match",
                "match_hostname"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/urllib3/contrib/": {
        "securetransport.py": {
            "list-of-functions": [
                "inject_into_urllib3",
                "extract_from_urllib3",
                "_read_callback",
                "_write_callback",
                "makefile",
                "__init__",
                "_raise_on_error",
                "_set_alpn_protocols",
                "_custom_validate",
                "_evaluate_trust",
                "handshake",
                "fileno",
                "_decref_socketios",
                "recv",
                "recv_into",
                "settimeout",
                "gettimeout",
                "send",
                "sendall",
                "shutdown",
                "close",
                "_real_close",
                "getpeercert",
                "version",
                "__init__",
                "check_hostname",
                "check_hostname",
                "options",
                "options",
                "verify_mode",
                "verify_mode",
                "set_default_verify_paths",
                "load_default_certs",
                "set_ciphers",
                "load_verify_locations",
                "load_cert_chain",
                "set_alpn_protocols",
                "wrap_socket",
                "minimum_version",
                "minimum_version",
                "maximum_version",
                "maximum_version"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "socks.py": {
            "list-of-functions": [
                "__init__",
                "_new_conn",
                "__init__"
            ]
        },
        "pyopenssl.py": {
            "list-of-functions": [
                "inject_into_urllib3",
                "extract_from_urllib3",
                "_validate_dependencies_met",
                "_dnsname_to_stdlib",
                "get_subj_alt_name",
                "_verify_callback",
                "idna_encode",
                "__init__",
                "fileno",
                "_decref_socketios",
                "recv",
                "recv_into",
                "settimeout",
                "_send_until_done",
                "sendall",
                "shutdown",
                "close",
                "_real_close",
                "getpeercert",
                "version",
                "__init__",
                "options",
                "options",
                "verify_mode",
                "verify_mode",
                "set_default_verify_paths",
                "set_ciphers",
                "load_verify_locations",
                "load_cert_chain",
                "set_alpn_protocols",
                "wrap_socket",
                "_set_ctx_options",
                "minimum_version",
                "minimum_version",
                "maximum_version",
                "maximum_version"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/urllib3/contrib/_securetransport/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "low_level.py": {
            "list-of-functions": [
                "_cf_data_from_bytes",
                "_cf_dictionary_from_tuples",
                "_cfstr",
                "_create_cfstring_array",
                "_cf_string_to_unicode",
                "_assert_no_error",
                "_cert_array_from_pem",
                "_is_cert",
                "_is_identity",
                "_temporary_keychain",
                "_load_items_from_file",
                "_load_client_cert_chain",
                "_build_tls_unknown_ca_alert"
            ]
        },
        "bindings.py": {
            "list-of-functions": [
                "load_cdll"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/": {
        "_path.py": {
            "list-of-functions": [
                "ensure_directory",
                "same_path",
                "normpath"
            ]
        },
        "logging.py": {
            "list-of-functions": [
                "_not_warning",
                "configure",
                "set_threshold"
            ]
        },
        "windows_support.py": {
            "list-of-functions": [
                "windows_only",
                "hide_file"
            ]
        },
        "_deprecation_warning.py": {
            "list-of-functions": []
        },
        "_normalization.py": {
            "list-of-functions": [
                "safe_identifier",
                "safe_name",
                "safe_version",
                "best_effort_version",
                "filename_component",
                "safer_name",
                "safer_best_effort_version"
            ]
        },
        "package_index.py": {
            "list-of-functions": [
                "parse_requirement_arg",
                "parse_bdist_wininst",
                "egg_info_for_url",
                "distros_for_url",
                "distros_for_location",
                "distros_for_filename",
                "interpret_distro_name",
                "unique_values",
                "find_external_links",
                "decode_entity",
                "htmldecode",
                "socket_timeout",
                "_encode_auth",
                "open_with_auth",
                "_splituser",
                "fix_sf_url",
                "local_open",
                "wrapper",
                "feed",
                "is_valid",
                "report",
                "__init__",
                "from_url",
                "feed",
                "is_valid",
                "report",
                "__init__",
                "add",
                "process_url",
                "process_filename",
                "url_ok",
                "scan_egg_links",
                "scan_egg_link",
                "_scan",
                "process_index",
                "need_version_info",
                "scan_all",
                "find_packages",
                "obtain",
                "check_hash",
                "add_find_links",
                "prescan",
                "not_found_in_index",
                "download",
                "fetch_distribution",
                "fetch",
                "gen_setup",
                "_download_to",
                "reporthook",
                "open_url",
                "_download_url",
                "scan_url",
                "_attempt_download",
                "_download_html",
                "_download_svn",
                "_vcs_split_rev_from_url",
                "_download_git",
                "_download_hg",
                "debug",
                "info",
                "warn",
                "_socket_timeout",
                "__init__",
                "__iter__",
                "__str__",
                "__init__",
                "creds_by_repository",
                "_get_repo_cred",
                "find_credential",
                "find",
                "_socket_timeout"
            ]
        },
        "archive_util.py": {
            "list-of-functions": [
                "default_filter",
                "unpack_archive",
                "unpack_directory",
                "unpack_zipfile",
                "_unpack_zipfile_obj",
                "_resolve_tar_file_or_dir",
                "_iter_open_tar",
                "unpack_tarfile"
            ]
        },
        "_imp.py": {
            "list-of-functions": [
                "find_spec",
                "find_module",
                "get_frozen_object",
                "get_module"
            ]
        },
        "version.py": {
            "list-of-functions": []
        },
        "discovery.py": {
            "list-of-functions": [
                "_valid_name",
                "_find_packages_within",
                "remove_nested_packages",
                "remove_stubs",
                "find_parent_package",
                "find_package_path",
                "construct_package_dir",
                "__init__",
                "__call__",
                "__contains__",
                "find",
                "_find_iter",
                "_find_iter",
                "_looks_like_package",
                "_looks_like_package",
                "_find_iter",
                "_looks_like_package",
                "__init__",
                "_disable",
                "_ignore_ext_modules",
                "_root_dir",
                "_package_dir",
                "__call__",
                "_explicitly_specified",
                "_analyse_package_layout",
                "_analyse_explicit_layout",
                "_analyse_src_layout",
                "_analyse_flat_layout",
                "_analyse_flat_packages",
                "_analyse_flat_modules",
                "_ensure_no_accidental_inclusion",
                "analyse_name",
                "_find_name_single_package_or_module",
                "_find_name_from_packages"
            ]
        },
        "_reqs.py": {
            "list-of-functions": [
                "parse_strings",
                "parse",
                "parse",
                "parse"
            ]
        },
        "depends.py": {
            "list-of-functions": [
                "maybe_close",
                "get_module_constant",
                "extract_constant",
                "_update_globals",
                "__init__",
                "full_name",
                "version_ok",
                "get_version",
                "is_present",
                "is_current",
                "empty"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "_install_setup_requires",
                "_fetch_build_eggs",
                "setup",
                "_find_all_simple",
                "findall",
                "convert_path",
                "__init__",
                "_ensure_stringlike",
                "ensure_string_list",
                "reinitialize_command",
                "__init__",
                "_get_project_config_files",
                "finalize_options"
            ]
        },
        "installer.py": {
            "list-of-functions": [
                "_fixup_find_links",
                "fetch_build_egg",
                "_fetch_build_eggs",
                "_fetch_build_egg_no_warn",
                "strip_marker",
                "_warn_wheel_not_available",
                "warn"
            ]
        },
        "glob.py": {
            "list-of-functions": [
                "glob",
                "iglob",
                "_iglob",
                "glob1",
                "glob0",
                "glob2",
                "_rlistdir",
                "has_magic",
                "_isrecursive",
                "escape"
            ]
        },
        "sandbox.py": {
            "list-of-functions": [
                "_execfile",
                "save_argv",
                "save_path",
                "override_temp",
                "pushd",
                "save_modules",
                "_clear_modules",
                "save_pkg_resources_state",
                "setup_context",
                "_needs_hiding",
                "hide_setuptools",
                "run_setup",
                "dump",
                "__enter__",
                "__exit__",
                "resume",
                "__init__",
                "_copy",
                "__enter__",
                "__exit__",
                "run",
                "_mk_dual_path_wrapper",
                "_mk_single_path_wrapper",
                "_mk_single_with_return",
                "_mk_query",
                "_validate_path",
                "_remap_input",
                "_remap_output",
                "_remap_pair",
                "__init__",
                "_violation",
                "_open",
                "tmpnam",
                "_ok",
                "_exempted",
                "_remap_input",
                "_remap_pair",
                "open",
                "__str__",
                "wrap",
                "wrap",
                "wrap",
                "wrap",
                "_file"
            ]
        },
        "py34compat.py": {
            "list-of-functions": [
                "module_from_spec"
            ]
        },
        "launch.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "extension.py": {
            "list-of-functions": [
                "_have_cython",
                "__init__",
                "_convert_pyx_sources_to_lang"
            ]
        },
        "unicode_utils.py": {
            "list-of-functions": [
                "decompose",
                "filesys_decode",
                "try_encode"
            ]
        },
        "_itertools.py": {
            "list-of-functions": [
                "ensure_unique"
            ]
        },
        "monkey.py": {
            "list-of-functions": [
                "_get_mro",
                "get_unpatched",
                "get_unpatched_class",
                "patch_all",
                "_patch_distribution_metadata",
                "patch_func",
                "get_unpatched_function",
                "patch_for_msvc_specialized_compiler",
                "patch_params"
            ]
        },
        "build_meta.py": {
            "list-of-functions": [
                "no_install_setup_requires",
                "_get_immediate_subdirectories",
                "_file_with_extension",
                "_open_setup_script",
                "suppress_known_deprecation",
                "__init__",
                "fetch_build_eggs",
                "patch",
                "_get_config",
                "_valid_global_options",
                "_global_args",
                "__dist_info_args",
                "_editable_args",
                "_arbitrary_args",
                "_get_build_requires",
                "run_setup",
                "get_requires_for_build_wheel",
                "get_requires_for_build_sdist",
                "_bubble_up_info_directory",
                "_find_info_directory",
                "prepare_metadata_for_build_wheel",
                "_build_with_temp_dir",
                "build_wheel",
                "build_sdist",
                "_get_dist_info_dir",
                "run_setup",
                "build_editable",
                "get_requires_for_build_editable",
                "prepare_metadata_for_build_editable"
            ]
        },
        "errors.py": {
            "list-of-functions": []
        },
        "dep_util.py": {
            "list-of-functions": [
                "newer_pairwise_group"
            ]
        },
        "msvc.py": {
            "list-of-functions": [
                "_msvc14_find_vc2015",
                "_msvc14_find_vc2017",
                "_msvc14_find_vcvarsall",
                "_msvc14_get_vc_env",
                "msvc14_get_vc_env",
                "_augment_exception",
                "__init__",
                "target_cpu",
                "target_is_x86",
                "current_is_x86",
                "current_dir",
                "target_dir",
                "cross_dir",
                "__init__",
                "visualstudio",
                "sxs",
                "vc",
                "vs",
                "vc_for_python",
                "microsoft_sdk",
                "windows_sdk",
                "netfx_sdk",
                "windows_kits_roots",
                "microsoft",
                "lookup",
                "__init__",
                "_find_latest_available_vs_ver",
                "find_reg_vs_vers",
                "find_programdata_vs_vers",
                "_as_float_version",
                "VSInstallDir",
                "VCInstallDir",
                "_guess_vc",
                "_guess_vc_legacy",
                "WindowsSdkVersion",
                "WindowsSdkLastVersion",
                "WindowsSdkDir",
                "WindowsSDKExecutablePath",
                "FSharpInstallDir",
                "UniversalCRTSdkDir",
                "UniversalCRTSdkLastVersion",
                "NetFxSdkVersion",
                "NetFxSdkDir",
                "FrameworkDir32",
                "FrameworkDir64",
                "FrameworkVersion32",
                "FrameworkVersion64",
                "_find_dot_net_versions",
                "_use_last_dir_name",
                "__init__",
                "vs_ver",
                "vc_ver",
                "VSTools",
                "VCIncludes",
                "VCLibraries",
                "VCStoreRefs",
                "VCTools",
                "OSLibraries",
                "OSIncludes",
                "OSLibpath",
                "SdkTools",
                "_sdk_tools",
                "_sdk_subdir",
                "SdkSetup",
                "FxTools",
                "NetFxSDKLibraries",
                "NetFxSDKIncludes",
                "VsTDb",
                "MSBuild",
                "HTMLHelpWorkshop",
                "UCRTLibraries",
                "UCRTIncludes",
                "_ucrt_subdir",
                "FSharp",
                "VCRuntimeRedist",
                "return_env",
                "_build_paths"
            ]
        },
        "_importlib.py": {
            "list-of-functions": [
                "disable_importlib_metadata_finder"
            ]
        },
        "_entry_points.py": {
            "list-of-functions": [
                "ensure_valid",
                "load_group",
                "by_group_and_name",
                "validate",
                "load",
                "_",
                "render",
                "render_items"
            ]
        },
        "dist.py": {
            "list-of-functions": [
                "_get_unpatched",
                "get_metadata_version",
                "rfc822_unescape",
                "_read_field_from_msg",
                "_read_field_unescaped_from_msg",
                "_read_list_from_msg",
                "_read_payload_from_msg",
                "read_pkg_file",
                "single_line",
                "write_pkg_file",
                "check_importable",
                "assert_string_list",
                "check_nsp",
                "check_extras",
                "_check_extra",
                "_check_marker",
                "assert_bool",
                "invalid_unless_false",
                "check_requirements",
                "check_specifier",
                "check_entry_points",
                "check_test_suite",
                "check_package_data",
                "check_packages",
                "write_field",
                "patch_missing_pkg_info",
                "__init__",
                "_validate_metadata",
                "_set_metadata_defaults",
                "_normalize_version",
                "_validate_version",
                "_finalize_requires",
                "_convert_extras_requirements",
                "_suffix_for",
                "_move_install_requirements_markers",
                "_clean_req",
                "_finalize_license_files",
                "_expand_patterns",
                "_parse_config_files",
                "warn_dash_deprecation",
                "_setuptools_commands",
                "make_option_lowercase",
                "_set_command_options",
                "_get_project_config_files",
                "parse_config_files",
                "fetch_build_eggs",
                "finalize_options",
                "_removed",
                "_finalize_setup_keywords",
                "get_egg_cache_dir",
                "fetch_build_egg",
                "get_command_class",
                "print_commands",
                "get_command_list",
                "include",
                "exclude_package",
                "has_contents_for",
                "_exclude_misc",
                "_include_misc",
                "exclude",
                "_exclude_packages",
                "_parse_command_opts",
                "get_cmdline_options",
                "iter_distribution_names",
                "handle_display_options",
                "run_command",
                "is_simple_req",
                "by_order"
            ]
        },
        "wheel.py": {
            "list-of-functions": [
                "_get_supported_tags",
                "unpack",
                "disable_info_traces",
                "__init__",
                "tags",
                "is_compatible",
                "egg_name",
                "get_dist_info",
                "install_as_egg",
                "_install_as_egg",
                "_convert_metadata",
                "_move_data_entries",
                "_fix_namespace_packages",
                "get_metadata",
                "raw_req"
            ]
        },
        "namespaces.py": {
            "list-of-functions": [
                "install_namespaces",
                "uninstall_namespaces",
                "_get_target",
                "_get_root",
                "_gen_nspkg_line",
                "_get_all_ns_packages",
                "_pkg_names",
                "_get_root",
                "_get_target"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "zipp.py": {
            "list-of-functions": [
                "_parents",
                "_ancestry",
                "_difference",
                "_pathlib_compat",
                "_implied_dirs",
                "namelist",
                "_name_set",
                "resolve_dir",
                "make",
                "namelist",
                "_name_set",
                "__init__",
                "open",
                "name",
                "suffix",
                "suffixes",
                "stem",
                "filename",
                "read_text",
                "read_bytes",
                "_is_child",
                "_next",
                "is_dir",
                "is_file",
                "exists",
                "iterdir",
                "__str__",
                "__repr__",
                "joinpath",
                "parent"
            ]
        },
        "ordered_set.py": {
            "list-of-functions": [
                "is_iterable",
                "__init__",
                "__len__",
                "__getitem__",
                "copy",
                "__getstate__",
                "__setstate__",
                "__contains__",
                "add",
                "update",
                "index",
                "pop",
                "discard",
                "clear",
                "__iter__",
                "__reversed__",
                "__repr__",
                "__eq__",
                "union",
                "__and__",
                "intersection",
                "difference",
                "issubset",
                "issuperset",
                "symmetric_difference",
                "_update_items",
                "difference_update",
                "intersection_update",
                "symmetric_difference_update"
            ]
        },
        "typing_extensions.py": {
            "list-of-functions": [
                "_no_slots_copy",
                "_check_generic",
                "IntVar",
                "_gorg",
                "_get_protocol_attrs",
                "_is_callable_members_only",
                "_concatenate_getitem",
                "final",
                "__subclasscheck__",
                "runtime_checkable",
                "_check_fails",
                "_dict_new",
                "_typeddict_new",
                "__instancecheck__",
                "__subclasscheck__",
                "__new__",
                "__subclasshook__",
                "__new__",
                "_no_init",
                "_no_init",
                "__index__",
                "__init__",
                "__new__",
                "_strip_annotations",
                "get_type_hints",
                "_is_dunder",
                "get_origin",
                "get_args",
                "TypeAlias",
                "__copy__",
                "__deepcopy__",
                "__init__",
                "__repr__",
                "__init__",
                "__repr__",
                "args",
                "kwargs",
                "__init__",
                "__repr__",
                "__hash__",
                "__eq__",
                "__reduce__",
                "__call__",
                "__init__",
                "__repr__",
                "__hash__",
                "__call__",
                "__parameters__",
                "Concatenate",
                "TypeGuard",
                "Self",
                "Required",
                "NotRequired",
                "__repr__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "_eval_type",
                "__repr__",
                "__hash__",
                "__eq__",
                "__repr__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "_eval_type",
                "__repr__",
                "__hash__",
                "__eq__",
                "__new__",
                "__new__",
                "__instancecheck__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "__new__",
                "__init__",
                "__instancecheck__",
                "__subclasscheck__",
                "__getitem__",
                "__new__",
                "__init__",
                "copy_with",
                "__repr__",
                "__reduce__",
                "__eq__",
                "__hash__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "__new__",
                "__metadata__",
                "_tree_repr",
                "_subs_tree",
                "_get_cons",
                "__getitem__",
                "__call__",
                "__getattr__",
                "__setattr__",
                "__instancecheck__",
                "__subclasscheck__",
                "__repr__",
                "_get_type_vars",
                "_get_type_vars",
                "__repr__",
                "__init__",
                "__getattr__",
                "__mro_entries__",
                "__repr__",
                "__reduce__",
                "__call__",
                "__or__",
                "__ror__",
                "__instancecheck__",
                "__subclasscheck__",
                "__getitem__",
                "__instancecheck__",
                "__subclasscheck__",
                "__repr__",
                "_proto_hook",
                "_proto_hook",
                "__repr__",
                "__repr__",
                "__instancecheck__",
                "__subclasscheck__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__instancecheck__",
                "__subclasscheck__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "_eval_type",
                "__repr__",
                "__hash__",
                "__eq__",
                "__repr__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "_eval_type",
                "__repr__",
                "__hash__",
                "__eq__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/packaging/": {
        "tags.py": {
            "list-of-functions": [
                "parse_tag",
                "_get_config_var",
                "_normalize_string",
                "_abi3_applies",
                "_cpython_abis",
                "cpython_tags",
                "_generic_abi",
                "generic_tags",
                "_py_interpreter_range",
                "compatible_tags",
                "_mac_arch",
                "_mac_binary_formats",
                "mac_platforms",
                "_linux_platforms",
                "_generic_platforms",
                "platform_tags",
                "interpreter_name",
                "interpreter_version",
                "_version_nodot",
                "sys_tags",
                "__init__",
                "interpreter",
                "abi",
                "platform",
                "__eq__",
                "__hash__",
                "__str__",
                "__repr__"
            ]
        },
        "_musllinux.py": {
            "list-of-functions": [
                "_parse_musl_version",
                "_get_musl_version",
                "platform_tags"
            ]
        },
        "version.py": {
            "list-of-functions": [
                "parse",
                "_parse_letter_version",
                "_parse_local_version",
                "_cmpkey",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__ge__",
                "__gt__",
                "__ne__",
                "__init__",
                "__repr__",
                "__str__",
                "epoch",
                "release",
                "pre",
                "post",
                "dev",
                "local",
                "public",
                "base_version",
                "is_prerelease",
                "is_postrelease",
                "is_devrelease",
                "major",
                "minor",
                "micro"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_parser.py": {
            "list-of-functions": [
                "parse_requirement",
                "_parse_requirement",
                "_parse_requirement_details",
                "_parse_requirement_marker",
                "_parse_extras",
                "_parse_extras_list",
                "_parse_specifier",
                "_parse_version_many",
                "parse_marker",
                "_parse_marker",
                "_parse_marker_atom",
                "_parse_marker_item",
                "_parse_marker_var",
                "process_env_var",
                "process_python_str",
                "_parse_marker_op",
                "__init__",
                "__str__",
                "__repr__",
                "serialize",
                "serialize",
                "serialize",
                "serialize"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "canonicalize_name",
                "canonicalize_version",
                "parse_wheel_filename",
                "parse_sdist_filename"
            ]
        },
        "requirements.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__"
            ]
        },
        "_structures.py": {
            "list-of-functions": [
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__",
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__"
            ]
        },
        "markers.py": {
            "list-of-functions": [
                "_normalize_extra_values",
                "_format_marker",
                "_eval_op",
                "_normalize",
                "_evaluate_markers",
                "format_full_version",
                "default_environment",
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__",
                "evaluate"
            ]
        },
        "_manylinux.py": {
            "list-of-functions": [
                "_parse_elf",
                "_is_linux_armhf",
                "_is_linux_i686",
                "_have_compatible_abi",
                "_glibc_version_string_confstr",
                "_glibc_version_string_ctypes",
                "_glibc_version_string",
                "_parse_glibc_version",
                "_get_glibc_version",
                "_is_compatible",
                "platform_tags"
            ]
        },
        "_tokenizer.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__init__",
                "consume",
                "check",
                "expect",
                "read",
                "raise_syntax_error",
                "enclosing_tokens"
            ]
        },
        "specifiers.py": {
            "list-of-functions": [
                "_coerce_version",
                "_version_split",
                "_is_not_suffix",
                "_pad_version",
                "__str__",
                "__hash__",
                "__eq__",
                "prereleases",
                "prereleases",
                "contains",
                "filter",
                "__init__",
                "prereleases",
                "prereleases",
                "operator",
                "version",
                "__repr__",
                "__str__",
                "_canonical_spec",
                "__hash__",
                "__eq__",
                "_get_operator",
                "_compare_compatible",
                "_compare_equal",
                "_compare_not_equal",
                "_compare_less_than_equal",
                "_compare_greater_than_equal",
                "_compare_less_than",
                "_compare_greater_than",
                "_compare_arbitrary",
                "__contains__",
                "contains",
                "filter",
                "__init__",
                "prereleases",
                "prereleases",
                "__repr__",
                "__str__",
                "__hash__",
                "__and__",
                "__eq__",
                "__len__",
                "__iter__",
                "__contains__",
                "contains",
                "filter"
            ]
        },
        "_elffile.py": {
            "list-of-functions": [
                "__init__",
                "_read",
                "interpreter"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/jaraco/": {
        "functools.py": {
            "list-of-functions": [
                "compose",
                "method_caller",
                "once",
                "method_cache",
                "_special_method_cache",
                "apply",
                "result_invoke",
                "call_aside",
                "first_invoke",
                "retry_call",
                "retry",
                "print_yielded",
                "pass_none",
                "assign_params",
                "save_method_args",
                "except_",
                "compose_two",
                "call_method",
                "wrapper",
                "wrapper",
                "proxy",
                "wrap",
                "wrap",
                "__init__",
                "reset",
                "__call__",
                "_wait",
                "__get__",
                "wrapper",
                "decorate",
                "wrapper",
                "wrapper",
                "decorate",
                "wrapper",
                "wrapper",
                "wrapper"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "context.py": {
            "list-of-functions": [
                "pushd",
                "tarball_context",
                "infer_compression",
                "temp_dir",
                "repo_context",
                "null",
                "__init__",
                "__enter__",
                "type",
                "value",
                "tb",
                "__exit__",
                "__bool__",
                "raises",
                "passes",
                "__init__",
                "__enter__",
                "__exit__",
                "wrapper"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/jaraco/text/": {
        "__init__.py": {
            "list-of-functions": [
                "substitution",
                "multi_substitution",
                "is_decodable",
                "is_binary",
                "trim",
                "wrap",
                "unwrap",
                "indent",
                "simple_html_strip",
                "remove_prefix",
                "remove_suffix",
                "normalize_newlines",
                "_nonblank",
                "yield_lines",
                "_",
                "drop_comment",
                "join_continuation",
                "__lt__",
                "__gt__",
                "__eq__",
                "__ne__",
                "__hash__",
                "__contains__",
                "in_",
                "lower",
                "index",
                "split",
                "__init__",
                "__call__",
                "capitalized",
                "lowered",
                "camel_case",
                "headless_camel_case",
                "underscore_separated",
                "dash_separated",
                "space_separated",
                "trim_right",
                "trim_left",
                "trim",
                "__getitem__",
                "parse",
                "from_class_name",
                "__iter__",
                "__init__",
                "strip_prefix",
                "__call__",
                "common_prefix"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/importlib_metadata/": {
        "_meta.py": {
            "list-of-functions": [
                "__len__",
                "__contains__",
                "__getitem__",
                "__iter__",
                "get_all",
                "json",
                "joinpath",
                "__truediv__",
                "parent",
                "read_text"
            ]
        },
        "_text.py": {
            "list-of-functions": [
                "__lt__",
                "__gt__",
                "__eq__",
                "__ne__",
                "__hash__",
                "__contains__",
                "in_",
                "lower",
                "index",
                "split"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "distribution",
                "distributions",
                "metadata",
                "version",
                "entry_points",
                "files",
                "requires",
                "packages_distributions",
                "_top_level_declared",
                "_top_level_inferred",
                "__str__",
                "name",
                "section_pairs",
                "read",
                "valid",
                "__getitem__",
                "__init__",
                "load",
                "module",
                "attr",
                "extras",
                "_for",
                "matches",
                "_key",
                "__lt__",
                "__eq__",
                "__setattr__",
                "__repr__",
                "__hash__",
                "__getitem__",
                "select",
                "names",
                "groups",
                "_from_text_for",
                "_from_text",
                "read_text",
                "read_binary",
                "locate",
                "__init__",
                "__repr__",
                "read_text",
                "locate_file",
                "from_name",
                "discover",
                "at",
                "_discover_resolvers",
                "metadata",
                "name",
                "_normalized_name",
                "version",
                "entry_points",
                "files",
                "_read_files_distinfo",
                "_read_files_egginfo",
                "requires",
                "_read_dist_info_reqs",
                "_read_egg_info_reqs",
                "_deps_from_requires_text",
                "_convert_egg_info_reqs_to_simple_reqs",
                "find_distributions",
                "__new__",
                "__init__",
                "joinpath",
                "children",
                "zip_children",
                "search",
                "mtime",
                "lookup",
                "__init__",
                "search",
                "__init__",
                "normalize",
                "legacy_normalize",
                "__bool__",
                "find_distributions",
                "_search_paths",
                "invalidate_caches",
                "__init__",
                "read_text",
                "locate_file",
                "_normalized_name",
                "_name_from_stem",
                "make_file",
                "make_files",
                "make_condition",
                "quoted_marker",
                "url_req_space",
                "__init__",
                "path"
            ]
        },
        "_functools.py": {
            "list-of-functions": [
                "method_cache",
                "pass_none",
                "wrapper",
                "wrapper"
            ]
        },
        "_py39compat.py": {
            "list-of-functions": [
                "normalized_name",
                "ep_matches"
            ]
        },
        "_collections.py": {
            "list-of-functions": [
                "__missing__",
                "freeze",
                "parse"
            ]
        },
        "_itertools.py": {
            "list-of-functions": [
                "unique_everseen",
                "always_iterable"
            ]
        },
        "_adapters.py": {
            "list-of-functions": [
                "__new__",
                "__init__",
                "__iter__",
                "__getitem__",
                "_repair_headers",
                "json",
                "redent",
                "transform"
            ]
        },
        "_compat.py": {
            "list-of-functions": [
                "install",
                "disable_stdlib_finder",
                "pypy_partial",
                "matches",
                "find_spec"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/more_itertools/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "more.py": {
            "list-of-functions": [
                "chunked",
                "first",
                "last",
                "nth_or_last",
                "collate",
                "consumer",
                "ilen",
                "iterate",
                "with_iter",
                "one",
                "distinct_permutations",
                "intersperse",
                "unique_to_each",
                "windowed",
                "substrings",
                "substrings_indexes",
                "spy",
                "interleave",
                "interleave_longest",
                "collapse",
                "side_effect",
                "sliced",
                "split_at",
                "split_before",
                "split_after",
                "split_when",
                "split_into",
                "padded",
                "repeat_last",
                "distribute",
                "stagger",
                "_zip_equal_generator",
                "zip_equal",
                "zip_offset",
                "sort_together",
                "unzip",
                "divide",
                "always_iterable",
                "adjacent",
                "groupby_transform",
                "count_cycle",
                "mark_ends",
                "locate",
                "lstrip",
                "rstrip",
                "strip",
                "_islice_helper",
                "always_reversible",
                "consecutive_groups",
                "difference",
                "exactly_n",
                "circular_shifts",
                "make_decorator",
                "map_reduce",
                "rlocate",
                "replace",
                "partitions",
                "set_partitions",
                "only",
                "ichunked",
                "distinct_combinations",
                "filter_except",
                "map_except",
                "_sample_unweighted",
                "_sample_weighted",
                "sample",
                "is_sorted",
                "windowed_complete",
                "all_unique",
                "nth_product",
                "nth_permutation",
                "value_chain",
                "product_index",
                "combination_index",
                "permutation_index",
                "__init__",
                "__iter__",
                "__bool__",
                "peek",
                "prepend",
                "__next__",
                "_get_slice",
                "__getitem__",
                "wrapper",
                "_full",
                "_partial",
                "__init__",
                "__contains__",
                "_get_values",
                "__iter__",
                "__getitem__",
                "walk",
                "__init__",
                "itemgetter",
                "__init__",
                "__bool__",
                "__contains__",
                "__eq__",
                "__getitem__",
                "__hash__",
                "__iter__",
                "__len__",
                "_init_len",
                "__reduce__",
                "__repr__",
                "__reversed__",
                "count",
                "index",
                "_get_by_index",
                "__init__",
                "__iter__",
                "__next__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "__len__",
                "__repr__",
                "__init__",
                "__iter__",
                "__next__",
                "__bool__",
                "peek",
                "elements",
                "seek",
                "encode",
                "decode",
                "decorator",
                "set_partitions_helper",
                "__init__",
                "__iter__",
                "__next__",
                "__init__",
                "__enter__",
                "__exit__",
                "__iter__",
                "__next__",
                "done",
                "result",
                "_reader",
                "__init__",
                "__iter__",
                "__next__",
                "ret",
                "ret",
                "getter",
                "outer_wrapper",
                "callback",
                "inner_wrapper"
            ]
        },
        "recipes.py": {
            "list-of-functions": [
                "take",
                "tabulate",
                "tail",
                "consume",
                "nth",
                "all_equal",
                "quantify",
                "pad_none",
                "ncycles",
                "dotproduct",
                "flatten",
                "repeatfunc",
                "_pairwise",
                "grouper",
                "roundrobin",
                "partition",
                "powerset",
                "unique_everseen",
                "unique_justseen",
                "iter_except",
                "first_true",
                "random_product",
                "random_permutation",
                "random_combination",
                "random_combination_with_replacement",
                "nth_combination",
                "prepend",
                "convolve",
                "pairwise"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/importlib_resources/": {
        "readers.py": {
            "list-of-functions": [
                "remove_duplicates",
                "__init__",
                "resource_path",
                "files",
                "__init__",
                "open_resource",
                "is_resource",
                "files",
                "__init__",
                "iterdir",
                "read_bytes",
                "read_text",
                "is_dir",
                "is_file",
                "joinpath",
                "open",
                "name",
                "__repr__",
                "__init__",
                "resource_path",
                "files"
            ]
        },
        "_common.py": {
            "list-of-functions": [
                "package_to_anchor",
                "files",
                "get_resource_reader",
                "resolve",
                "_",
                "_",
                "_infer_caller",
                "from_package",
                "_tempfile",
                "_temp_file",
                "_is_present_dir",
                "as_file",
                "_",
                "_temp_path",
                "_temp_dir",
                "_write_contents",
                "wrapper",
                "is_this_file",
                "is_wrapper"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_itertools.py": {
            "list-of-functions": [
                "unique_everseen"
            ]
        },
        "_adapters.py": {
            "list-of-functions": [
                "_io_wrapper",
                "wrap_spec",
                "__init__",
                "__getattr__",
                "__init__",
                "get_resource_reader",
                "__init__",
                "_reader",
                "_native",
                "__getattr__",
                "files",
                "__init__",
                "iterdir",
                "is_file",
                "joinpath",
                "name",
                "open",
                "__init__",
                "iterdir",
                "is_file",
                "is_dir",
                "joinpath",
                "name",
                "open",
                "__init__",
                "iterdir",
                "is_file",
                "joinpath",
                "name",
                "open"
            ]
        },
        "_compat.py": {
            "list-of-functions": [
                "wrap_spec",
                "__init__",
                "path",
                "get_resource_reader",
                "runtime_checkable",
                "_zip_reader",
                "_namespace_reader",
                "_available_reader",
                "_native_reader",
                "_file_reader"
            ]
        },
        "_legacy.py": {
            "list-of-functions": [
                "deprecated",
                "normalize_path",
                "open_binary",
                "read_binary",
                "open_text",
                "read_text",
                "contents",
                "is_resource",
                "path",
                "wrapper"
            ]
        },
        "simple.py": {
            "list-of-functions": [
                "package",
                "children",
                "resources",
                "open_binary",
                "name",
                "__init__",
                "is_dir",
                "is_file",
                "iterdir",
                "open",
                "__init__",
                "is_file",
                "is_dir",
                "open",
                "joinpath",
                "files"
            ]
        },
        "abc.py": {
            "list-of-functions": [
                "open_resource",
                "resource_path",
                "is_resource",
                "contents",
                "iterdir",
                "read_bytes",
                "read_text",
                "is_dir",
                "is_file",
                "joinpath",
                "__truediv__",
                "open",
                "name",
                "files",
                "open_resource",
                "resource_path",
                "is_resource",
                "contents"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_vendor/tomli/": {
        "_types.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_parser.py": {
            "list-of-functions": [
                "load",
                "loads",
                "skip_chars",
                "skip_until",
                "skip_comment",
                "skip_comments_and_array_ws",
                "create_dict_rule",
                "create_list_rule",
                "key_value_rule",
                "parse_key_value_pair",
                "parse_key",
                "parse_key_part",
                "parse_one_line_basic_str",
                "parse_array",
                "parse_inline_table",
                "parse_basic_str_escape",
                "parse_basic_str_escape_multiline",
                "parse_hex_char",
                "parse_literal_str",
                "parse_multiline_str",
                "parse_basic_str",
                "parse_value",
                "suffixed_err",
                "is_unicode_scalar_value",
                "make_safe_parse_float",
                "__init__",
                "add_pending",
                "finalize_pending",
                "unset_all",
                "set",
                "is_",
                "__init__",
                "get_or_create_nest",
                "append_nest_to_list",
                "coord_repr",
                "safe_parse_float"
            ]
        },
        "_re.py": {
            "list-of-functions": [
                "match_to_datetime",
                "cached_tz",
                "match_to_localtime",
                "match_to_number"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/config/": {
        "__init__.py": {
            "list-of-functions": [
                "_deprecation_notice",
                "_wrapper"
            ]
        },
        "setupcfg.py": {
            "list-of-functions": [
                "read_configuration",
                "apply_configuration",
                "_apply",
                "_get_option",
                "configuration_to_dict",
                "parse_configuration",
                "_warn_accidental_env_marker_misconfig",
                "__init__",
                "_section_options",
                "parsers",
                "__setitem__",
                "_parse_list",
                "_parse_dict",
                "_parse_bool",
                "_exclude_files_parser",
                "_parse_file",
                "_parse_attr",
                "_get_parser_compound",
                "_parse_section_to_dict_with_key",
                "_parse_section_to_dict",
                "parse_section",
                "parse",
                "_deprecated_config_handler",
                "__init__",
                "parsers",
                "_parse_version",
                "__init__",
                "_parse_list_semicolon",
                "_parse_file_in_root",
                "_parse_requirements_list",
                "parsers",
                "_parse_cmdclass",
                "_parse_packages",
                "parse_section_packages__find",
                "parse_section_entry_points",
                "_parse_package_data",
                "parse_section_package_data",
                "parse_section_exclude_package_data",
                "parse_section_extras_require",
                "parse_section_data_files",
                "parser",
                "parse",
                "config_handler"
            ]
        },
        "_apply_pyprojecttoml.py": {
            "list-of-functions": [
                "apply",
                "_apply_project_table",
                "_apply_tool_table",
                "_handle_missing_dynamic",
                "json_compatible_key",
                "_set_config",
                "_guess_content_type",
                "_long_description",
                "_license",
                "_people",
                "_project_urls",
                "_python_requires",
                "_dependencies",
                "_optional_dependencies",
                "_unify_entry_points",
                "_copy_command_options",
                "_valid_command_options",
                "_load_ep",
                "_normalise_cmd_option_key",
                "_normalise_cmd_options",
                "_get_previous_entrypoints",
                "_attrgetter",
                "_some_attrgetter",
                "_acessor",
                "message"
            ]
        },
        "pyprojecttoml.py": {
            "list-of-functions": [
                "load_file",
                "validate",
                "apply_configuration",
                "read_configuration",
                "_skip_bad_config",
                "expand_configuration",
                "_parse_requirements_list",
                "_ignore_errors",
                "__init__",
                "_ensure_dist",
                "_process_field",
                "_canonic_package_data",
                "expand",
                "_expand_packages",
                "_expand_data_files",
                "_expand_cmdclass",
                "_expand_all_dynamic",
                "_ensure_previously_set",
                "_expand_directive",
                "_obtain",
                "_obtain_version",
                "_obtain_readme",
                "_obtain_entry_points",
                "_obtain_classifiers",
                "_obtain_dependencies",
                "_obtain_optional_dependencies",
                "__init__",
                "__enter__",
                "__exit__",
                "message",
                "_set_scripts"
            ]
        },
        "expand.py": {
            "list-of-functions": [
                "glob_relative",
                "read_files",
                "_filter_existing_files",
                "_read_file",
                "_assert_local",
                "read_attr",
                "_find_spec",
                "_load_spec",
                "_find_module",
                "resolve_class",
                "cmdclass",
                "find_packages",
                "_nest_path",
                "version",
                "canonic_package_data",
                "canonic_data_files",
                "entry_points",
                "__init__",
                "_find_assignments",
                "__getattr__",
                "__init__",
                "__call__",
                "__enter__",
                "__exit__",
                "_get_package_dir",
                "package_dir",
                "__init__",
                "_target",
                "__getitem__",
                "__len__",
                "__iter__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/config/_validate_pyproject/": {
        "fastjsonschema_exceptions.py": {
            "list-of-functions": [
                "__init__",
                "path",
                "rule_definition"
            ]
        },
        "extra_validations.py": {
            "list-of-functions": [
                "validate_project_dynamic"
            ]
        },
        "error_reporting.py": {
            "list-of-functions": [
                "detailed_errors",
                "_separate_terms",
                "_from_jsonschema",
                "__init__",
                "__str__",
                "summary",
                "details",
                "_simplify_name",
                "_expand_summary",
                "_expand_details",
                "__init__",
                "_jargon",
                "__call__",
                "_is_unecessary",
                "_filter_unecessary",
                "_handle_simple_dict",
                "_handle_list",
                "_is_property",
                "_label",
                "_value",
                "_inline_attrs",
                "_child_prefix"
            ]
        },
        "__init__.py": {
            "list-of-functions": [
                "validate"
            ]
        },
        "fastjsonschema_validations.py": {
            "list-of-functions": [
                "validate",
                "validate_https___packaging_python_org_en_latest_specifications_declaring_build_dependencies",
                "validate_https___setuptools_pypa_io_en_latest_references_keywords_html",
                "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_file_directive",
                "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_attr_directive",
                "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_find_directive",
                "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_package_name",
                "validate_https___docs_python_org_3_install",
                "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata",
                "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_dependency",
                "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_entry_point_group",
                "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_author"
            ]
        },
        "formats.py": {
            "list-of-functions": [
                "pep440",
                "pep508_identifier",
                "pep508_versionspec",
                "pep517_backend_reference",
                "_download_classifiers",
                "pep561_stub_name",
                "url",
                "python_identifier",
                "python_qualified_identifier",
                "python_module_name",
                "python_entrypoint_group",
                "python_entrypoint_name",
                "python_entrypoint_reference",
                "pep508",
                "__init__",
                "_disable_download",
                "__call__",
                "trove_classifier",
                "pep508"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/command/": {
        "build.py": {
            "list-of-functions": [
                "get_sub_commands",
                "initialize_options",
                "finalize_options",
                "run",
                "get_source_files",
                "get_outputs",
                "get_output_mapping"
            ]
        },
        "bdist_egg.py": {
            "list-of-functions": [
                "_get_purelib",
                "strip_module",
                "sorted_walk",
                "write_stub",
                "walk_egg",
                "analyze_egg",
                "write_safety_flag",
                "scan_module",
                "iter_symbols",
                "can_scan",
                "make_zipfile",
                "initialize_options",
                "finalize_options",
                "do_install_data",
                "get_outputs",
                "call_command",
                "run",
                "zap_pyfiles",
                "zip_safe",
                "gen_header",
                "copy_metadata_to",
                "get_ext_outputs",
                "visit"
            ]
        },
        "alias.py": {
            "list-of-functions": [
                "shquote",
                "format_alias",
                "initialize_options",
                "finalize_options",
                "run"
            ]
        },
        "py36compat.py": {
            "list-of-functions": [
                "add_defaults",
                "_cs_path_exists",
                "_add_defaults_standards",
                "_add_defaults_optional",
                "_add_defaults_python",
                "_add_defaults_data_files",
                "_add_defaults_ext",
                "_add_defaults_c_libs",
                "_add_defaults_scripts"
            ]
        },
        "build_ext.py": {
            "list-of-functions": [
                "_customize_compiler_for_shlib",
                "if_dl",
                "get_abi3_suffix",
                "run",
                "_get_inplace_equivalent",
                "copy_extensions_to_source",
                "_get_equivalent_stub",
                "_get_output_mapping",
                "get_ext_filename",
                "initialize_options",
                "finalize_options",
                "setup_shlib_compiler",
                "get_export_symbols",
                "build_extension",
                "links_to_dynamic",
                "get_outputs",
                "get_output_mapping",
                "__get_stubs_outputs",
                "__get_output_extensions",
                "write_stub",
                "_write_stub_file",
                "_compile_and_remove_stub",
                "link_shared_object",
                "link_shared_object"
            ]
        },
        "easy_install.py": {
            "list-of-functions": [
                "is_64bit",
                "_to_bytes",
                "isascii",
                "_one_liner",
                "_pythonpath",
                "get_site_dirs",
                "expand_paths",
                "extract_wininst_cfg",
                "get_exe_prefixes",
                "_first_line_re",
                "auto_chmod",
                "update_dist_caches",
                "_collect_zipimporter_cache_entries",
                "_update_zipimporter_cache",
                "_uncache",
                "_remove_and_clear_zip_directory_cache_data",
                "is_python",
                "is_sh",
                "nt_quote_arg",
                "is_python_script",
                "chmod",
                "get_win_launcher",
                "load_launcher_manifest",
                "rmtree",
                "current_umask",
                "only_strs",
                "initialize_options",
                "delete_blockers",
                "_delete_path",
                "_render_version",
                "finalize_options",
                "_process_site_dirs",
                "_validate_optimize",
                "_fix_install_dir_for_user_site",
                "_expand_attrs",
                "expand_basedirs",
                "expand_dirs",
                "run",
                "pseudo_tempname",
                "warn_deprecated_options",
                "check_site_dir",
                "cant_write_to_target",
                "check_pth_processing",
                "install_egg_scripts",
                "add_output",
                "not_editable",
                "check_editable",
                "_tmpdir",
                "easy_install",
                "install_item",
                "select_scheme",
                "process_distribution",
                "should_unzip",
                "maybe_move",
                "install_wrapper_scripts",
                "install_script",
                "_load_template",
                "write_script",
                "install_eggs",
                "egg_distribution",
                "install_egg",
                "install_exe",
                "exe_to_egg",
                "install_wheel",
                "installation_report",
                "report_editable",
                "run_setup",
                "build_and_install",
                "_set_fetcher_options",
                "update_pth",
                "unpack_progress",
                "unpack_and_compile",
                "byte_compile",
                "create_home_path",
                "_expand",
                "__init__",
                "_load",
                "save",
                "_wrap_lines",
                "add",
                "remove",
                "make_relative",
                "_wrap_lines",
                "clear_and_remove_cached_zip_archive_directory_data",
                "_replace_zip_directory_cache_data",
                "best",
                "_sys_executable",
                "from_param",
                "from_environment",
                "from_string",
                "install_options",
                "_extract_options",
                "as_header",
                "_strip_quotes",
                "_render",
                "get_script_args",
                "get_script_header",
                "get_args",
                "_ensure_safe_name",
                "get_writer",
                "best",
                "_get_script_args",
                "get_header",
                "get_writer",
                "best",
                "_get_script_args",
                "_adjust_header",
                "_use_header",
                "_get_script_args",
                "process",
                "pf",
                "replace_cached_zip_archive_directory_data",
                "_chmod"
            ]
        },
        "editable_wheel.py": {
            "list-of-functions": [
                "_can_symlink_files",
                "_simple_layout",
                "_parent_path",
                "_find_packages",
                "_find_top_level_modules",
                "_find_package_roots",
                "_absolute_root",
                "_find_virtual_namespaces",
                "_find_namespaces",
                "_remove_nested",
                "_is_nested",
                "_empty_dir",
                "_finder_template",
                "convert",
                "initialize_options",
                "finalize_options",
                "run",
                "_ensure_dist_info",
                "_install_namespaces",
                "_find_egg_info_dir",
                "_configure_build",
                "_set_editable_mode",
                "_collect_build_outputs",
                "_run_build_commands",
                "_run_build_subcommands",
                "_safely_run",
                "_create_wheel_file",
                "_run_install",
                "_select_strategy",
                "__call__",
                "__enter__",
                "__exit__",
                "__init__",
                "__call__",
                "__enter__",
                "__exit__",
                "__init__",
                "__call__",
                "_normalize_output",
                "_create_file",
                "_create_links",
                "__enter__",
                "__exit__",
                "__init__",
                "__call__",
                "__enter__",
                "__exit__",
                "__init__",
                "_get_target",
                "_get_root",
                "warn"
            ]
        },
        "install_scripts.py": {
            "list-of-functions": [
                "initialize_options",
                "run",
                "_install_ep_scripts",
                "write_script"
            ]
        },
        "upload.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "register.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "dist_info.py": {
            "list-of-functions": [
                "_rm",
                "_copy",
                "initialize_options",
                "finalize_options",
                "_maybe_bkp_dir",
                "run"
            ]
        },
        "install_lib.py": {
            "list-of-functions": [
                "run",
                "get_exclusions",
                "_exclude_pkg_path",
                "_all_packages",
                "_get_SVEM_NSPs",
                "_gen_exclusion_paths",
                "copy_tree",
                "get_outputs",
                "pf"
            ]
        },
        "upload_docs.py": {
            "list-of-functions": [
                "_encode",
                "has_sphinx",
                "initialize_options",
                "finalize_options",
                "create_zipfile",
                "run",
                "_build_part",
                "_build_multipart",
                "upload_file"
            ]
        },
        "build_py.py": {
            "list-of-functions": [
                "make_writable",
                "assert_relative",
                "finalize_options",
                "copy_file",
                "run",
                "__getattr__",
                "build_module",
                "_get_data_files",
                "get_data_files_without_manifest",
                "_get_pkg_data_files",
                "find_data_files",
                "get_outputs",
                "get_output_mapping",
                "_get_module_mapping",
                "_get_package_data_output_mapping",
                "build_package_data",
                "analyze_manifest",
                "_filter_build_files",
                "get_data_files",
                "check_package",
                "initialize_options",
                "get_package_dir",
                "exclude_data_files",
                "_get_platform_patterns",
                "__init__",
                "is_module",
                "importable_subpackage",
                "warn"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "sdist.py": {
            "list-of-functions": [
                "walk_revctrl",
                "run",
                "initialize_options",
                "_default_to_gztar",
                "make_distribution",
                "_remove_os_link",
                "add_defaults",
                "_add_defaults_optional",
                "_add_defaults_python",
                "_add_defaults_build_sub_commands",
                "_safe_data_files",
                "_add_data_files",
                "_add_defaults_data_files",
                "check_readme",
                "make_release_tree",
                "_manifest_is_not_generated",
                "read_manifest"
            ]
        },
        "test.py": {
            "list-of-functions": [
                "__init__",
                "loadTestsFromModule",
                "__init__",
                "__get__",
                "initialize_options",
                "finalize_options",
                "test_args",
                "_test_args",
                "with_project_on_sys_path",
                "project_on_sys_path",
                "paths_on_pythonpath",
                "install_dists",
                "run",
                "run_tests",
                "_argv",
                "_resolve_as_ep"
            ]
        },
        "saveopts.py": {
            "list-of-functions": [
                "run"
            ]
        },
        "bdist_rpm.py": {
            "list-of-functions": [
                "run",
                "_make_spec_file"
            ]
        },
        "build_clib.py": {
            "list-of-functions": [
                "build_libraries"
            ]
        },
        "egg_info.py": {
            "list-of-functions": [
                "translate_pattern",
                "write_file",
                "write_pkg_info",
                "warn_depends_obsolete",
                "_write_requirements",
                "write_requirements",
                "write_setup_requirements",
                "write_toplevel_names",
                "overwrite_arg",
                "write_arg",
                "write_entries",
                "get_pkg_info_revision",
                "_egg_basename",
                "name",
                "tagged_version",
                "_maybe_tag",
                "_already_tagged",
                "_safe_tags",
                "tags",
                "initialize_options",
                "tag_svn_revision",
                "tag_svn_revision",
                "save_version_info",
                "finalize_options",
                "_get_egg_basename",
                "write_or_delete_file",
                "write_file",
                "delete_file",
                "run",
                "find_sources",
                "check_broken_egg_info",
                "__init__",
                "process_template_line",
                "_remove_files",
                "include",
                "exclude",
                "recursive_include",
                "recursive_exclude",
                "graft",
                "prune",
                "global_include",
                "global_exclude",
                "append",
                "extend",
                "_repair",
                "_safe_path",
                "initialize_options",
                "finalize_options",
                "run",
                "_manifest_normalize",
                "write_manifest",
                "warn",
                "_should_suppress_warning",
                "add_defaults",
                "add_license_files",
                "_add_referenced_files",
                "prune_file_list",
                "_safe_data_files",
                "append_cr"
            ]
        },
        "install.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "handle_extra_path",
                "run",
                "_called_from_setup",
                "do_egg_install"
            ]
        },
        "develop.py": {
            "list-of-functions": [
                "run",
                "initialize_options",
                "finalize_options",
                "_resolve_setup_path",
                "install_for_development",
                "uninstall_link",
                "install_egg_scripts",
                "install_wrapper_scripts",
                "__init__",
                "__getattr__",
                "as_requirement"
            ]
        },
        "rotate.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run"
            ]
        },
        "install_egg_info.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "get_outputs",
                "copytree",
                "skimmer"
            ]
        },
        "setopt.py": {
            "list-of-functions": [
                "config_file",
                "edit_config",
                "initialize_options",
                "finalize_options",
                "initialize_options",
                "finalize_options",
                "run"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/extern/": {
        "__init__.py": {
            "list-of-functions": [
                "__init__",
                "search_path",
                "_module_matches_namespace",
                "load_module",
                "create_module",
                "exec_module",
                "find_spec",
                "install"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_distutils/": {
        "_msvccompiler.py": {
            "list-of-functions": [
                "_find_vc2015",
                "_find_vc2017",
                "_find_vcvarsall",
                "_get_vc_env",
                "_find_exe",
                "__init__",
                "_configure",
                "_parse_path",
                "initialize",
                "out_extensions",
                "compile",
                "create_static_lib",
                "link",
                "spawn",
                "_fallback_spawn",
                "library_dir_option",
                "runtime_library_dir_option",
                "library_option",
                "find_library_file"
            ]
        },
        "unixccompiler.py": {
            "list-of-functions": [
                "_split_env",
                "_split_aix",
                "_linker_params",
                "preprocess",
                "_compile",
                "create_static_lib",
                "link",
                "library_dir_option",
                "_is_gcc",
                "runtime_library_dir_option",
                "library_option",
                "_library_root",
                "find_library_file"
            ]
        },
        "filelist.py": {
            "list-of-functions": [
                "_find_all_simple",
                "findall",
                "glob_to_re",
                "translate_pattern",
                "__init__",
                "set_allfiles",
                "findall",
                "debug_print",
                "append",
                "extend",
                "sort",
                "remove_duplicates",
                "_parse_template_line",
                "process_template_line",
                "include_pattern",
                "exclude_pattern",
                "__call__",
                "filter"
            ]
        },
        "ccompiler.py": {
            "list-of-functions": [
                "get_default_compiler",
                "show_compilers",
                "new_compiler",
                "gen_preprocess_options",
                "gen_lib_options",
                "__init__",
                "set_executables",
                "set_executable",
                "_find_macro",
                "_check_macro_definitions",
                "define_macro",
                "undefine_macro",
                "add_include_dir",
                "set_include_dirs",
                "add_library",
                "set_libraries",
                "add_library_dir",
                "set_library_dirs",
                "add_runtime_library_dir",
                "set_runtime_library_dirs",
                "add_link_object",
                "set_link_objects",
                "_setup_compile",
                "_get_cc_args",
                "_fix_compile_args",
                "_prep_compile",
                "_fix_object_args",
                "_fix_lib_args",
                "_need_link",
                "detect_language",
                "preprocess",
                "compile",
                "_compile",
                "create_static_lib",
                "link",
                "link_shared_lib",
                "link_shared_object",
                "link_executable",
                "library_dir_option",
                "runtime_library_dir_option",
                "library_option",
                "has_function",
                "find_library_file",
                "object_filenames",
                "out_extensions",
                "_make_out_path",
                "_make_relative",
                "shared_object_filename",
                "executable_filename",
                "library_filename",
                "announce",
                "debug_print",
                "warn",
                "execute",
                "spawn",
                "move_file",
                "mkpath"
            ]
        },
        "msvc9compiler.py": {
            "list-of-functions": [
                "get_build_version",
                "normalize_and_reduce_paths",
                "removeDuplicates",
                "find_vcvarsall",
                "query_vcvarsall",
                "get_value",
                "read_keys",
                "read_values",
                "convert_mbcs",
                "__init__",
                "set_macro",
                "load_macros",
                "sub",
                "__init__",
                "initialize",
                "object_filenames",
                "compile",
                "create_static_lib",
                "link",
                "manifest_setup_ldargs",
                "manifest_get_embed_info",
                "_remove_visual_c_ref",
                "library_dir_option",
                "runtime_library_dir_option",
                "library_option",
                "find_library_file",
                "find_exe"
            ]
        },
        "archive_util.py": {
            "list-of-functions": [
                "_get_gid",
                "_get_uid",
                "make_tarball",
                "make_zipfile",
                "check_archive_formats",
                "make_archive",
                "_set_uid_gid"
            ]
        },
        "cmd.py": {
            "list-of-functions": [
                "__init__",
                "__getattr__",
                "ensure_finalized",
                "initialize_options",
                "finalize_options",
                "dump_options",
                "run",
                "announce",
                "debug_print",
                "_ensure_stringlike",
                "ensure_string",
                "ensure_string_list",
                "_ensure_tested_string",
                "ensure_filename",
                "ensure_dirname",
                "get_command_name",
                "set_undefined_options",
                "get_finalized_command",
                "reinitialize_command",
                "run_command",
                "get_sub_commands",
                "warn",
                "execute",
                "mkpath",
                "copy_file",
                "copy_tree",
                "move_file",
                "spawn",
                "make_archive",
                "make_file"
            ]
        },
        "config.py": {
            "list-of-functions": [
                "_get_rc_file",
                "_store_pypirc",
                "_read_pypirc",
                "_read_pypi_response",
                "initialize_options",
                "finalize_options"
            ]
        },
        "version.py": {
            "list-of-functions": [
                "suppress_known_deprecation",
                "__init__",
                "__repr__",
                "__eq__",
                "__lt__",
                "__le__",
                "__gt__",
                "__ge__",
                "parse",
                "__str__",
                "_cmp",
                "parse",
                "__str__",
                "__repr__",
                "_cmp"
            ]
        },
        "log.py": {
            "list-of-functions": [
                "set_threshold",
                "set_verbosity",
                "__init__",
                "threshold",
                "threshold"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "get_host_platform",
                "get_platform",
                "_clear_cached_macosx_ver",
                "get_macosx_target_ver_from_syscfg",
                "get_macosx_target_ver",
                "split_version",
                "convert_path",
                "change_root",
                "check_environ",
                "subst_vars",
                "_subst_compat",
                "grok_environment_error",
                "_init_regex",
                "split_quoted",
                "execute",
                "strtobool",
                "byte_compile",
                "rfc822_escape",
                "_subst"
            ]
        },
        "fancy_getopt.py": {
            "list-of-functions": [
                "fancy_getopt",
                "wrap_text",
                "translate_longopt",
                "__init__",
                "_build_index",
                "set_option_table",
                "add_option",
                "has_option",
                "get_attr_name",
                "_check_alias_dict",
                "set_aliases",
                "set_negative_aliases",
                "_grok_option_table",
                "getopt",
                "get_option_order",
                "generate_help",
                "print_help",
                "__init__"
            ]
        },
        "versionpredicate.py": {
            "list-of-functions": [
                "splitUp",
                "split_provision",
                "__init__",
                "__str__",
                "satisfied_by"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "file_util.py": {
            "list-of-functions": [
                "_copy_file_contents",
                "copy_file",
                "move_file",
                "write_file"
            ]
        },
        "core.py": {
            "list-of-functions": [
                "gen_usage",
                "setup",
                "run_commands",
                "run_setup"
            ]
        },
        "_functools.py": {
            "list-of-functions": [
                "pass_none",
                "wrapper"
            ]
        },
        "_collections.py": {
            "list-of-functions": [
                "__iter__",
                "__getitem__",
                "__contains__",
                "__len__",
                "__init__",
                "left",
                "__getitem__",
                "get",
                "_find_first_match_",
                "bounds"
            ]
        },
        "cygwinccompiler.py": {
            "list-of-functions": [
                "get_msvcr",
                "check_config_h",
                "is_cygwincc",
                "__init__",
                "gcc_version",
                "_compile",
                "link",
                "runtime_library_dir_option",
                "_make_out_path",
                "out_extensions",
                "__init__",
                "runtime_library_dir_option"
            ]
        },
        "extension.py": {
            "list-of-functions": [
                "read_setup_file",
                "__init__",
                "__repr__"
            ]
        },
        "debug.py": {
            "list-of-functions": []
        },
        "spawn.py": {
            "list-of-functions": [
                "spawn",
                "find_executable"
            ]
        },
        "text_file.py": {
            "list-of-functions": [
                "__init__",
                "open",
                "close",
                "gen_error",
                "error",
                "warn",
                "readline",
                "readlines",
                "unreadline"
            ]
        },
        "msvccompiler.py": {
            "list-of-functions": [
                "read_keys",
                "read_values",
                "convert_mbcs",
                "get_build_version",
                "get_build_architecture",
                "normalize_and_reduce_paths",
                "__init__",
                "set_macro",
                "load_macros",
                "sub",
                "__init__",
                "initialize",
                "object_filenames",
                "compile",
                "create_static_lib",
                "link",
                "library_dir_option",
                "runtime_library_dir_option",
                "library_option",
                "find_library_file",
                "find_exe",
                "get_msvc_paths",
                "set_path_env_var"
            ]
        },
        "errors.py": {
            "list-of-functions": []
        },
        "dep_util.py": {
            "list-of-functions": [
                "newer",
                "newer_pairwise",
                "newer_group"
            ]
        },
        "dir_util.py": {
            "list-of-functions": [
                "mkpath",
                "create_tree",
                "copy_tree",
                "_build_cmdtuple",
                "remove_tree",
                "ensure_relative"
            ]
        },
        "sysconfig.py": {
            "list-of-functions": [
                "_is_python_source_dir",
                "_is_parent",
                "_python_build",
                "get_python_version",
                "get_python_inc",
                "_extant",
                "_get_python_inc_posix",
                "_get_python_inc_posix_python",
                "_get_python_inc_from_config",
                "_get_python_inc_posix_prefix",
                "_get_python_inc_nt",
                "_posix_lib",
                "get_python_lib",
                "customize_compiler",
                "get_config_h_filename",
                "get_makefile_filename",
                "parse_config_h",
                "parse_makefile",
                "expand_makefile_vars",
                "get_config_vars",
                "get_config_var",
                "_fix_pcbuild"
            ]
        },
        "_macos_compat.py": {
            "list-of-functions": [
                "bypass_compiler_fixup"
            ]
        },
        "py39compat.py": {
            "list-of-functions": [
                "add_ext_suffix_39"
            ]
        },
        "py38compat.py": {
            "list-of-functions": [
                "aix_platform"
            ]
        },
        "dist.py": {
            "list-of-functions": [
                "_ensure_list",
                "fix_help_options",
                "__init__",
                "get_option_dict",
                "dump_option_dicts",
                "find_config_files",
                "_gen_paths",
                "parse_config_files",
                "parse_command_line",
                "_get_toplevel_options",
                "_parse_command_opts",
                "finalize_options",
                "_show_help",
                "handle_display_options",
                "print_command_list",
                "print_commands",
                "get_command_list",
                "get_command_packages",
                "get_command_class",
                "get_command_obj",
                "_set_command_options",
                "reinitialize_command",
                "announce",
                "run_commands",
                "run_command",
                "has_pure_modules",
                "has_ext_modules",
                "has_c_libraries",
                "has_modules",
                "has_headers",
                "has_scripts",
                "has_data_files",
                "is_pure",
                "__init__",
                "read_pkg_file",
                "write_pkg_info",
                "write_pkg_file",
                "_write_list",
                "get_name",
                "get_version",
                "get_fullname",
                "get_author",
                "get_author_email",
                "get_maintainer",
                "get_maintainer_email",
                "get_contact",
                "get_contact_email",
                "get_url",
                "get_license",
                "get_description",
                "get_long_description",
                "get_keywords",
                "set_keywords",
                "get_platforms",
                "set_platforms",
                "get_classifiers",
                "set_classifiers",
                "get_download_url",
                "get_requires",
                "set_requires",
                "get_provides",
                "set_provides",
                "get_obsoletes",
                "set_obsoletes",
                "_read_field",
                "_read_list",
                "maybe_write"
            ]
        },
        "_log.py": {
            "list-of-functions": []
        },
        "bcppcompiler.py": {
            "list-of-functions": [
                "__init__",
                "compile",
                "create_static_lib",
                "link",
                "find_library_file",
                "object_filenames",
                "preprocess"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/setuptools/_distutils/command/": {
        "build.py": {
            "list-of-functions": [
                "show_compilers",
                "initialize_options",
                "finalize_options",
                "run",
                "has_pure_modules",
                "has_c_libraries",
                "has_ext_modules",
                "has_scripts"
            ]
        },
        "py37compat.py": {
            "list-of-functions": [
                "_pythonlib_compat",
                "compose"
            ]
        },
        "build_ext.py": {
            "list-of-functions": [
                "show_compilers",
                "initialize_options",
                "finalize_options",
                "run",
                "check_extensions_list",
                "get_source_files",
                "get_outputs",
                "build_extensions",
                "_build_extensions_parallel",
                "_build_extensions_serial",
                "_filter_build_errors",
                "build_extension",
                "swig_sources",
                "find_swig",
                "get_ext_fullpath",
                "get_ext_fullname",
                "get_ext_filename",
                "get_export_symbols",
                "get_libraries"
            ]
        },
        "config.py": {
            "list-of-functions": [
                "dump_file",
                "initialize_options",
                "finalize_options",
                "run",
                "_check_compiler",
                "_gen_temp_sourcefile",
                "_preprocess",
                "_compile",
                "_link",
                "_clean",
                "try_cpp",
                "search_cpp",
                "try_compile",
                "try_link",
                "try_run",
                "check_func",
                "check_lib",
                "check_header"
            ]
        },
        "clean.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run"
            ]
        },
        "check.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "warn",
                "run",
                "check_metadata",
                "check_restructuredtext",
                "_check_rst_data",
                "__init__",
                "system_message"
            ]
        },
        "install_scripts.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "get_inputs",
                "get_outputs"
            ]
        },
        "upload.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "upload_file"
            ]
        },
        "register.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "check_metadata",
                "_set_config",
                "classifiers",
                "verify_metadata",
                "send_metadata",
                "build_post_data",
                "post_to_server"
            ]
        },
        "_framework_compat.py": {
            "list-of-functions": [
                "enabled",
                "vars",
                "scheme"
            ]
        },
        "install_headers.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "get_inputs",
                "get_outputs"
            ]
        },
        "install_lib.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "build",
                "install",
                "byte_compile",
                "_mutate_outputs",
                "_bytecode_filenames",
                "get_outputs",
                "get_inputs"
            ]
        },
        "build_py.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "get_data_files",
                "find_data_files",
                "build_package_data",
                "get_package_dir",
                "check_package",
                "check_module",
                "find_package_modules",
                "find_modules",
                "find_all_modules",
                "get_source_files",
                "get_module_outfile",
                "get_outputs",
                "build_module",
                "build_modules",
                "build_packages",
                "byte_compile"
            ]
        },
        "bdist_dumb.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "sdist.py": {
            "list-of-functions": [
                "show_formats",
                "checking_metadata",
                "initialize_options",
                "finalize_options",
                "run",
                "check_metadata",
                "get_file_list",
                "add_defaults",
                "_cs_path_exists",
                "_add_defaults_standards",
                "_add_defaults_optional",
                "_add_defaults_python",
                "_add_defaults_data_files",
                "_add_defaults_ext",
                "_add_defaults_c_libs",
                "_add_defaults_scripts",
                "read_template",
                "prune_file_list",
                "write_manifest",
                "_manifest_is_not_generated",
                "read_manifest",
                "make_release_tree",
                "make_distribution",
                "get_archive_files"
            ]
        },
        "bdist.py": {
            "list-of-functions": [
                "show_formats",
                "append",
                "initialize_options",
                "finalize_options",
                "run"
            ]
        },
        "build_scripts.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "get_source_files",
                "run",
                "copy_scripts",
                "_copy_script",
                "_change_modes",
                "_change_mode",
                "_validate_shebang"
            ]
        },
        "bdist_rpm.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "finalize_package_data",
                "run",
                "_dist_path",
                "_make_spec_file",
                "_format_changelog"
            ]
        },
        "build_clib.py": {
            "list-of-functions": [
                "show_compilers",
                "initialize_options",
                "finalize_options",
                "run",
                "check_library_list",
                "get_library_names",
                "get_source_files",
                "build_libraries"
            ]
        },
        "install.py": {
            "list-of-functions": [
                "_load_sysconfig_schemes",
                "_load_schemes",
                "_get_implementation",
                "_select_scheme",
                "_remove_set",
                "_resolve_scheme",
                "_load_scheme",
                "_inject_headers",
                "_scheme_attrs",
                "_pypy_hack",
                "initialize_options",
                "finalize_options",
                "dump_dirs",
                "finalize_unix",
                "finalize_other",
                "select_scheme",
                "_expand_attrs",
                "expand_basedirs",
                "expand_dirs",
                "convert_paths",
                "handle_extra_path",
                "change_roots",
                "create_home_path",
                "run",
                "create_path_file",
                "get_outputs",
                "get_inputs",
                "has_lib",
                "has_headers",
                "has_scripts",
                "has_data"
            ]
        },
        "install_egg_info.py": {
            "list-of-functions": [
                "safe_name",
                "safe_version",
                "to_filename",
                "initialize_options",
                "basename",
                "finalize_options",
                "run",
                "get_outputs"
            ]
        },
        "install_data.py": {
            "list-of-functions": [
                "initialize_options",
                "finalize_options",
                "run",
                "get_inputs",
                "get_outputs"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/": {
        "__init__.py": {
            "list-of-functions": [
                "_declare_state",
                "__getstate__",
                "__setstate__",
                "_sget_dict",
                "_sset_dict",
                "_sget_object",
                "_sset_object",
                "get_supported_platform",
                "register_loader_type",
                "get_provider",
                "_macos_vers",
                "_macos_arch",
                "get_build_platform",
                "compatible_platforms",
                "run_script",
                "get_distribution",
                "load_entry_point",
                "get_entry_map",
                "get_entry_info",
                "get_default_cache",
                "safe_name",
                "safe_version",
                "_forgiving_version",
                "_safe_segment",
                "safe_extra",
                "to_filename",
                "invalid_marker",
                "evaluate_marker",
                "_parents",
                "register_finder",
                "find_distributions",
                "find_eggs_in_zip",
                "find_nothing",
                "find_on_path",
                "dist_factory",
                "safe_listdir",
                "distributions_from_metadata",
                "non_empty_lines",
                "resolve_egg_link",
                "register_namespace_handler",
                "_handle_ns",
                "_rebuild_mod_path",
                "declare_namespace",
                "fixup_namespace_packages",
                "file_ns_handler",
                "null_ns_handler",
                "normalize_path",
                "_cygwin_patch",
                "_normalize_cached",
                "_is_egg_path",
                "_is_zip_egg",
                "_is_unpacked_egg",
                "_set_parent_ns",
                "_version_from_file",
                "issue_warning",
                "parse_requirements",
                "_always_object",
                "_find_adapter",
                "ensure_directory",
                "_bypass_ensure_directory",
                "split_sections",
                "_mkstemp",
                "_call_aside",
                "_initialize",
                "_initialize_master_working_set",
                "__repr__",
                "dist",
                "req",
                "report",
                "with_context",
                "required_by",
                "req",
                "requirers",
                "requirers_str",
                "report",
                "__str__",
                "has_metadata",
                "get_metadata",
                "get_metadata_lines",
                "metadata_isdir",
                "metadata_listdir",
                "run_script",
                "get_resource_filename",
                "get_resource_stream",
                "get_resource_string",
                "has_resource",
                "resource_isdir",
                "resource_listdir",
                "__init__",
                "_build_master",
                "_build_from_requirements",
                "add_entry",
                "__contains__",
                "find",
                "iter_entry_points",
                "run_script",
                "__iter__",
                "add",
                "resolve",
                "_resolve_dist",
                "find_plugins",
                "require",
                "subscribe",
                "_added_new",
                "__getstate__",
                "__setstate__",
                "markers_pass",
                "__init__",
                "can_add",
                "remove",
                "scan",
                "__getitem__",
                "add",
                "best_match",
                "obtain",
                "__iter__",
                "__iadd__",
                "__add__",
                "__init__",
                "resource_exists",
                "resource_isdir",
                "resource_filename",
                "resource_stream",
                "resource_string",
                "resource_listdir",
                "extraction_error",
                "get_cache_path",
                "_warn_unsafe_extraction_path",
                "postprocess",
                "set_extraction_path",
                "cleanup_resources",
                "__init__",
                "get_resource_filename",
                "get_resource_stream",
                "get_resource_string",
                "has_resource",
                "_get_metadata_path",
                "has_metadata",
                "get_metadata",
                "get_metadata_lines",
                "resource_isdir",
                "metadata_isdir",
                "resource_listdir",
                "metadata_listdir",
                "run_script",
                "_has",
                "_isdir",
                "_listdir",
                "_fn",
                "_validate_resource_path",
                "_get",
                "__init__",
                "_setup_prefix",
                "_set_egg",
                "_has",
                "_isdir",
                "_listdir",
                "get_resource_stream",
                "_get",
                "_register",
                "_get",
                "_listdir",
                "__init__",
                "build",
                "load",
                "__init__",
                "_zipinfo_name",
                "_parts",
                "zipinfo",
                "get_resource_filename",
                "_get_date_and_size",
                "_extract_resource",
                "_is_current",
                "_get_eager_resources",
                "_index",
                "_has",
                "_isdir",
                "_listdir",
                "_eager_to_zip",
                "_resource_to_zip",
                "__init__",
                "_get_metadata_path",
                "has_metadata",
                "get_metadata",
                "_warn_on_replacement",
                "get_metadata_lines",
                "__init__",
                "__init__",
                "__bool__",
                "__call__",
                "safe_sys_path_index",
                "position_in_sys_path",
                "__init__",
                "__str__",
                "__repr__",
                "load",
                "resolve",
                "require",
                "parse",
                "_parse_extras",
                "parse_group",
                "parse_map",
                "is_version_line",
                "__init__",
                "from_location",
                "_reload_version",
                "hashcmp",
                "__hash__",
                "__lt__",
                "__le__",
                "__gt__",
                "__ge__",
                "__eq__",
                "__ne__",
                "key",
                "parsed_version",
                "_forgiving_parsed_version",
                "version",
                "_dep_map",
                "_filter_extras",
                "_build_dep_map",
                "requires",
                "_get_metadata_path_for_display",
                "_get_metadata",
                "_get_version",
                "activate",
                "egg_name",
                "__repr__",
                "__str__",
                "__getattr__",
                "__dir__",
                "from_filename",
                "as_requirement",
                "load_entry_point",
                "get_entry_map",
                "get_entry_info",
                "insert_on",
                "check_version_conflict",
                "has_version",
                "clone",
                "extras",
                "_reload_version",
                "_parsed_pkg_info",
                "_dep_map",
                "_compute_dependencies",
                "__init__",
                "__eq__",
                "__ne__",
                "__contains__",
                "__hash__",
                "__repr__",
                "parse",
                "reqs_for_extra"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "zipp.py": {
            "list-of-functions": [
                "_parents",
                "_ancestry",
                "_difference",
                "_pathlib_compat",
                "_implied_dirs",
                "namelist",
                "_name_set",
                "resolve_dir",
                "make",
                "namelist",
                "_name_set",
                "__init__",
                "open",
                "name",
                "suffix",
                "suffixes",
                "stem",
                "filename",
                "read_text",
                "read_bytes",
                "_is_child",
                "_next",
                "is_dir",
                "is_file",
                "exists",
                "iterdir",
                "__str__",
                "__repr__",
                "joinpath",
                "parent"
            ]
        },
        "typing_extensions.py": {
            "list-of-functions": [
                "_check_generic",
                "_collect_type_vars",
                "IntVar",
                "_get_protocol_attrs",
                "_is_callable_members_only",
                "_maybe_adjust_parameters",
                "_concatenate_getitem",
                "_should_collect_from_parameters",
                "final",
                "overload",
                "get_overloads",
                "clear_overloads",
                "_no_init",
                "runtime_checkable",
                "_check_fails",
                "_dict_new",
                "_typeddict_new",
                "is_typeddict",
                "assert_type",
                "_strip_extras",
                "get_type_hints",
                "get_origin",
                "get_args",
                "__init__",
                "__init__",
                "__init__",
                "__getattr__",
                "__mro_entries__",
                "__repr__",
                "__reduce__",
                "__call__",
                "__or__",
                "__ror__",
                "__instancecheck__",
                "__subclasscheck__",
                "__getitem__",
                "LiteralString",
                "Self",
                "Never",
                "reveal_type",
                "assert_never",
                "dataclass_transform",
                "override",
                "_caller",
                "_make_nmtuple",
                "NamedTuple",
                "_namedtuple_mro_entries",
                "_should_collect_from_parameters",
                "_should_collect_from_parameters",
                "__instancecheck__",
                "__repr__",
                "__new__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__getitem__",
                "__instancecheck__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "__index__",
                "__init__",
                "__new__",
                "__init__",
                "copy_with",
                "__repr__",
                "__reduce__",
                "__eq__",
                "__hash__",
                "__new__",
                "__class_getitem__",
                "__init_subclass__",
                "TypeAlias",
                "__copy__",
                "__deepcopy__",
                "__init__",
                "__repr__",
                "__eq__",
                "__init__",
                "__repr__",
                "__eq__",
                "__init__",
                "args",
                "kwargs",
                "__init__",
                "__repr__",
                "__hash__",
                "__eq__",
                "__reduce__",
                "__call__",
                "__init__",
                "__repr__",
                "__hash__",
                "__call__",
                "__parameters__",
                "Concatenate",
                "TypeGuard",
                "Required",
                "NotRequired",
                "Unpack",
                "_is_unpack",
                "_is_unpack",
                "__init__",
                "__iter__",
                "__init__",
                "__repr__",
                "__hash__",
                "__eq__",
                "__reduce__",
                "__init_subclass__",
                "decorator",
                "__new__",
                "_proto_hook",
                "__repr__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__",
                "__repr__",
                "__repr__",
                "__getitem__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/packaging/": {
        "tags.py": {
            "list-of-functions": [
                "parse_tag",
                "_get_config_var",
                "_normalize_string",
                "_abi3_applies",
                "_cpython_abis",
                "cpython_tags",
                "_generic_abi",
                "generic_tags",
                "_py_interpreter_range",
                "compatible_tags",
                "_mac_arch",
                "_mac_binary_formats",
                "mac_platforms",
                "_linux_platforms",
                "_generic_platforms",
                "platform_tags",
                "interpreter_name",
                "interpreter_version",
                "_version_nodot",
                "sys_tags",
                "__init__",
                "interpreter",
                "abi",
                "platform",
                "__eq__",
                "__hash__",
                "__str__",
                "__repr__"
            ]
        },
        "_musllinux.py": {
            "list-of-functions": [
                "_parse_musl_version",
                "_get_musl_version",
                "platform_tags"
            ]
        },
        "version.py": {
            "list-of-functions": [
                "parse",
                "_parse_letter_version",
                "_parse_local_version",
                "_cmpkey",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__ge__",
                "__gt__",
                "__ne__",
                "__init__",
                "__repr__",
                "__str__",
                "epoch",
                "release",
                "pre",
                "post",
                "dev",
                "local",
                "public",
                "base_version",
                "is_prerelease",
                "is_postrelease",
                "is_devrelease",
                "major",
                "minor",
                "micro"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_parser.py": {
            "list-of-functions": [
                "parse_requirement",
                "_parse_requirement",
                "_parse_requirement_details",
                "_parse_requirement_marker",
                "_parse_extras",
                "_parse_extras_list",
                "_parse_specifier",
                "_parse_version_many",
                "parse_marker",
                "_parse_marker",
                "_parse_marker_atom",
                "_parse_marker_item",
                "_parse_marker_var",
                "process_env_var",
                "process_python_str",
                "_parse_marker_op",
                "__init__",
                "__str__",
                "__repr__",
                "serialize",
                "serialize",
                "serialize",
                "serialize"
            ]
        },
        "utils.py": {
            "list-of-functions": [
                "canonicalize_name",
                "canonicalize_version",
                "parse_wheel_filename",
                "parse_sdist_filename"
            ]
        },
        "requirements.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__"
            ]
        },
        "_structures.py": {
            "list-of-functions": [
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__",
                "__repr__",
                "__hash__",
                "__lt__",
                "__le__",
                "__eq__",
                "__gt__",
                "__ge__",
                "__neg__"
            ]
        },
        "markers.py": {
            "list-of-functions": [
                "_normalize_extra_values",
                "_format_marker",
                "_eval_op",
                "_normalize",
                "_evaluate_markers",
                "format_full_version",
                "default_environment",
                "__init__",
                "__str__",
                "__repr__",
                "__hash__",
                "__eq__",
                "evaluate"
            ]
        },
        "_manylinux.py": {
            "list-of-functions": [
                "_parse_elf",
                "_is_linux_armhf",
                "_is_linux_i686",
                "_have_compatible_abi",
                "_glibc_version_string_confstr",
                "_glibc_version_string_ctypes",
                "_glibc_version_string",
                "_parse_glibc_version",
                "_get_glibc_version",
                "_is_compatible",
                "platform_tags"
            ]
        },
        "_tokenizer.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "__init__",
                "consume",
                "check",
                "expect",
                "read",
                "raise_syntax_error",
                "enclosing_tokens"
            ]
        },
        "specifiers.py": {
            "list-of-functions": [
                "_coerce_version",
                "_version_split",
                "_is_not_suffix",
                "_pad_version",
                "__str__",
                "__hash__",
                "__eq__",
                "prereleases",
                "prereleases",
                "contains",
                "filter",
                "__init__",
                "prereleases",
                "prereleases",
                "operator",
                "version",
                "__repr__",
                "__str__",
                "_canonical_spec",
                "__hash__",
                "__eq__",
                "_get_operator",
                "_compare_compatible",
                "_compare_equal",
                "_compare_not_equal",
                "_compare_less_than_equal",
                "_compare_greater_than_equal",
                "_compare_less_than",
                "_compare_greater_than",
                "_compare_arbitrary",
                "__contains__",
                "contains",
                "filter",
                "__init__",
                "prereleases",
                "prereleases",
                "__repr__",
                "__str__",
                "__hash__",
                "__and__",
                "__eq__",
                "__len__",
                "__iter__",
                "__contains__",
                "contains",
                "filter"
            ]
        },
        "_elffile.py": {
            "list-of-functions": [
                "__init__",
                "_read",
                "interpreter"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/jaraco/": {
        "functools.py": {
            "list-of-functions": [
                "compose",
                "method_caller",
                "once",
                "method_cache",
                "_special_method_cache",
                "apply",
                "result_invoke",
                "call_aside",
                "first_invoke",
                "retry_call",
                "retry",
                "print_yielded",
                "pass_none",
                "assign_params",
                "save_method_args",
                "except_",
                "compose_two",
                "call_method",
                "wrapper",
                "wrapper",
                "proxy",
                "wrap",
                "wrap",
                "__init__",
                "reset",
                "__call__",
                "_wait",
                "__get__",
                "wrapper",
                "decorate",
                "wrapper",
                "wrapper",
                "decorate",
                "wrapper",
                "wrapper",
                "wrapper"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "context.py": {
            "list-of-functions": [
                "pushd",
                "tarball_context",
                "infer_compression",
                "temp_dir",
                "repo_context",
                "null",
                "__init__",
                "__enter__",
                "type",
                "value",
                "tb",
                "__exit__",
                "__bool__",
                "raises",
                "passes",
                "__init__",
                "__enter__",
                "__exit__",
                "wrapper"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/jaraco/text/": {
        "__init__.py": {
            "list-of-functions": [
                "substitution",
                "multi_substitution",
                "is_decodable",
                "is_binary",
                "trim",
                "wrap",
                "unwrap",
                "indent",
                "simple_html_strip",
                "remove_prefix",
                "remove_suffix",
                "normalize_newlines",
                "_nonblank",
                "yield_lines",
                "_",
                "drop_comment",
                "join_continuation",
                "__lt__",
                "__gt__",
                "__eq__",
                "__ne__",
                "__hash__",
                "__contains__",
                "in_",
                "lower",
                "index",
                "split",
                "__init__",
                "__call__",
                "capitalized",
                "lowered",
                "camel_case",
                "headless_camel_case",
                "underscore_separated",
                "dash_separated",
                "space_separated",
                "trim_right",
                "trim_left",
                "trim",
                "__getitem__",
                "parse",
                "from_class_name",
                "__iter__",
                "__init__",
                "strip_prefix",
                "__call__",
                "common_prefix"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/more_itertools/": {
        "__init__.py": {
            "list-of-functions": []
        },
        "more.py": {
            "list-of-functions": [
                "chunked",
                "first",
                "last",
                "nth_or_last",
                "consumer",
                "ilen",
                "iterate",
                "with_iter",
                "one",
                "raise_",
                "strictly_n",
                "distinct_permutations",
                "intersperse",
                "unique_to_each",
                "windowed",
                "substrings",
                "substrings_indexes",
                "spy",
                "interleave",
                "interleave_longest",
                "interleave_evenly",
                "collapse",
                "side_effect",
                "sliced",
                "split_at",
                "split_before",
                "split_after",
                "split_when",
                "split_into",
                "padded",
                "repeat_each",
                "repeat_last",
                "distribute",
                "stagger",
                "zip_equal",
                "zip_offset",
                "sort_together",
                "unzip",
                "divide",
                "always_iterable",
                "adjacent",
                "groupby_transform",
                "count_cycle",
                "mark_ends",
                "locate",
                "longest_common_prefix",
                "lstrip",
                "rstrip",
                "strip",
                "_islice_helper",
                "always_reversible",
                "consecutive_groups",
                "difference",
                "exactly_n",
                "circular_shifts",
                "make_decorator",
                "map_reduce",
                "rlocate",
                "replace",
                "partitions",
                "set_partitions",
                "only",
                "ichunked",
                "iequals",
                "distinct_combinations",
                "filter_except",
                "map_except",
                "map_if",
                "_sample_unweighted",
                "_sample_weighted",
                "sample",
                "is_sorted",
                "windowed_complete",
                "all_unique",
                "nth_product",
                "nth_permutation",
                "value_chain",
                "product_index",
                "combination_index",
                "permutation_index",
                "chunked_even",
                "_chunked_even_online",
                "_chunked_even_finite",
                "zip_broadcast",
                "unique_in_window",
                "duplicates_everseen",
                "duplicates_justseen",
                "minmax",
                "constrained_batches",
                "__init__",
                "__iter__",
                "__bool__",
                "peek",
                "prepend",
                "__next__",
                "_get_slice",
                "__getitem__",
                "wrapper",
                "_full",
                "_partial",
                "__init__",
                "__contains__",
                "_get_values",
                "__iter__",
                "__getitem__",
                "walk",
                "itemgetter",
                "__init__",
                "__bool__",
                "__contains__",
                "__eq__",
                "__getitem__",
                "__hash__",
                "__iter__",
                "__len__",
                "_init_len",
                "__reduce__",
                "__repr__",
                "__reversed__",
                "count",
                "index",
                "_get_by_index",
                "__init__",
                "__iter__",
                "__next__",
                "__getitem__",
                "__init__",
                "__getitem__",
                "__len__",
                "__repr__",
                "__init__",
                "__iter__",
                "__next__",
                "__bool__",
                "peek",
                "elements",
                "seek",
                "encode",
                "decode",
                "decorator",
                "set_partitions_helper",
                "__init__",
                "__iter__",
                "__next__",
                "__init__",
                "fill_cache",
                "__iter__",
                "__next__",
                "__init__",
                "__enter__",
                "__exit__",
                "__iter__",
                "__next__",
                "done",
                "result",
                "_reader",
                "__init__",
                "__iter__",
                "__next__",
                "is_scalar",
                "ret",
                "ret",
                "getter",
                "outer_wrapper",
                "callback",
                "inner_wrapper"
            ]
        },
        "recipes.py": {
            "list-of-functions": [
                "take",
                "tabulate",
                "tail",
                "consume",
                "nth",
                "all_equal",
                "quantify",
                "pad_none",
                "ncycles",
                "dotproduct",
                "flatten",
                "repeatfunc",
                "_pairwise",
                "_zip_equal_generator",
                "_zip_equal",
                "grouper",
                "roundrobin",
                "partition",
                "powerset",
                "unique_everseen",
                "unique_justseen",
                "iter_except",
                "first_true",
                "random_product",
                "random_permutation",
                "random_combination",
                "random_combination_with_replacement",
                "nth_combination",
                "prepend",
                "convolve",
                "before_and_after",
                "triplewise",
                "sliding_window",
                "subslices",
                "polynomial_from_roots",
                "sieve",
                "batched",
                "pairwise",
                "__init__",
                "true_iterator"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/importlib_resources/": {
        "readers.py": {
            "list-of-functions": [
                "remove_duplicates",
                "__init__",
                "resource_path",
                "files",
                "__init__",
                "open_resource",
                "is_resource",
                "files",
                "__init__",
                "iterdir",
                "read_bytes",
                "read_text",
                "is_dir",
                "is_file",
                "joinpath",
                "open",
                "name",
                "__repr__",
                "__init__",
                "resource_path",
                "files"
            ]
        },
        "_common.py": {
            "list-of-functions": [
                "package_to_anchor",
                "files",
                "get_resource_reader",
                "resolve",
                "_",
                "_",
                "_infer_caller",
                "from_package",
                "_tempfile",
                "_temp_file",
                "_is_present_dir",
                "as_file",
                "_",
                "_temp_path",
                "_temp_dir",
                "_write_contents",
                "wrapper",
                "is_this_file",
                "is_wrapper"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_itertools.py": {
            "list-of-functions": [
                "unique_everseen"
            ]
        },
        "_adapters.py": {
            "list-of-functions": [
                "_io_wrapper",
                "wrap_spec",
                "__init__",
                "__getattr__",
                "__init__",
                "get_resource_reader",
                "__init__",
                "_reader",
                "_native",
                "__getattr__",
                "files",
                "__init__",
                "iterdir",
                "is_file",
                "joinpath",
                "name",
                "open",
                "__init__",
                "iterdir",
                "is_file",
                "is_dir",
                "joinpath",
                "name",
                "open",
                "__init__",
                "iterdir",
                "is_file",
                "joinpath",
                "name",
                "open"
            ]
        },
        "_compat.py": {
            "list-of-functions": [
                "wrap_spec",
                "__init__",
                "path",
                "get_resource_reader",
                "runtime_checkable",
                "_zip_reader",
                "_namespace_reader",
                "_available_reader",
                "_native_reader",
                "_file_reader"
            ]
        },
        "_legacy.py": {
            "list-of-functions": [
                "deprecated",
                "normalize_path",
                "open_binary",
                "read_binary",
                "open_text",
                "read_text",
                "contents",
                "is_resource",
                "path",
                "wrapper"
            ]
        },
        "simple.py": {
            "list-of-functions": [
                "package",
                "children",
                "resources",
                "open_binary",
                "name",
                "__init__",
                "is_dir",
                "is_file",
                "iterdir",
                "open",
                "__init__",
                "is_file",
                "is_dir",
                "open",
                "joinpath",
                "files"
            ]
        },
        "abc.py": {
            "list-of-functions": [
                "open_resource",
                "resource_path",
                "is_resource",
                "contents",
                "iterdir",
                "read_bytes",
                "read_text",
                "is_dir",
                "is_file",
                "joinpath",
                "__truediv__",
                "open",
                "name",
                "files",
                "open_resource",
                "resource_path",
                "is_resource",
                "contents"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/_vendor/platformdirs/": {
        "macos.py": {
            "list-of-functions": [
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "unix.py": {
            "list-of-functions": [
                "_get_user_dirs_folder",
                "getuid",
                "user_data_dir",
                "site_data_dir",
                "_with_multi_path",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "site_data_path",
                "site_config_path",
                "_first_item_as_path_if_multipath"
            ]
        },
        "version.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": [
                "_set_platform_dir_class",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "user_data_path",
                "site_data_path",
                "user_config_path",
                "site_config_path",
                "user_cache_path",
                "user_state_path",
                "user_log_path",
                "user_documents_path",
                "user_runtime_path"
            ]
        },
        "api.py": {
            "list-of-functions": [
                "__init__",
                "_append_app_name_and_version",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir",
                "user_data_path",
                "site_data_path",
                "user_config_path",
                "site_config_path",
                "user_cache_path",
                "user_state_path",
                "user_log_path",
                "user_documents_path",
                "user_runtime_path"
            ]
        },
        "android.py": {
            "list-of-functions": [
                "_android_folder",
                "_android_documents_folder",
                "user_data_dir",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "windows.py": {
            "list-of-functions": [
                "get_win_folder_from_env_vars",
                "get_win_folder_from_registry",
                "get_win_folder_via_ctypes",
                "_pick_get_win_folder",
                "user_data_dir",
                "_append_parts",
                "site_data_dir",
                "user_config_dir",
                "site_config_dir",
                "user_cache_dir",
                "user_state_dir",
                "user_log_dir",
                "user_documents_dir",
                "user_runtime_dir"
            ]
        },
        "__main__.py": {
            "list-of-functions": [
                "main"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/pkg_resources/extern/": {
        "__init__.py": {
            "list-of-functions": [
                "__init__",
                "search_path",
                "_module_matches_namespace",
                "load_module",
                "create_module",
                "exec_module",
                "find_spec",
                "install"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/_distutils_hack/": {
        "__init__.py": {
            "list-of-functions": [
                "warn_distutils_present",
                "clear_distutils",
                "enabled",
                "ensure_local_distutils",
                "do_override",
                "add_shim",
                "insert_shim",
                "remove_shim",
                "__init__",
                "match",
                "find_spec",
                "spec_for_distutils",
                "is_cpython",
                "spec_for_pip",
                "pip_imported_during_build",
                "frame_file_is_setup",
                "spec_for_sensitive_tests",
                "__enter__",
                "__exit__",
                "create_module",
                "exec_module"
            ]
        },
        "override.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/yarl/": {
        "_url.py": {
            "list-of-functions": [
                "rewrite_module",
                "_normalize_path_segments",
                "_human_quote",
                "_idna_decode",
                "_idna_encode",
                "cache_clear",
                "cache_info",
                "cache_configure",
                "__init__",
                "__get__",
                "__set__",
                "__new__",
                "build",
                "__init_subclass__",
                "__str__",
                "__repr__",
                "__bytes__",
                "__eq__",
                "__hash__",
                "__le__",
                "__lt__",
                "__ge__",
                "__gt__",
                "__truediv__",
                "__mod__",
                "__bool__",
                "__getstate__",
                "__setstate__",
                "is_absolute",
                "is_default_port",
                "origin",
                "relative",
                "scheme",
                "raw_authority",
                "authority",
                "raw_user",
                "user",
                "raw_password",
                "password",
                "raw_host",
                "host",
                "port",
                "explicit_port",
                "raw_path",
                "path",
                "query",
                "raw_query_string",
                "query_string",
                "path_qs",
                "raw_path_qs",
                "raw_fragment",
                "fragment",
                "raw_parts",
                "parts",
                "parent",
                "raw_name",
                "name",
                "raw_suffix",
                "suffix",
                "raw_suffixes",
                "suffixes",
                "_validate_authority_uri_abs_path",
                "_make_child",
                "_normalize_path",
                "_encode_host",
                "_make_netloc",
                "with_scheme",
                "with_user",
                "with_password",
                "with_host",
                "with_port",
                "with_path",
                "_query_seq_pairs",
                "_query_var",
                "_get_str_query",
                "with_query",
                "update_query",
                "with_fragment",
                "with_name",
                "with_suffix",
                "join",
                "joinpath",
                "human_repr"
            ]
        },
        "_quoting_py.py": {
            "list-of-functions": [
                "__init__",
                "__call__",
                "__init__",
                "__call__"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_quoting.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/aiosignal/": {
        "__init__.py": {
            "list-of-functions": [
                "__init__",
                "__repr__"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/": {
        "version.py": {
            "list-of-functions": []
        },
        "error.py": {
            "list-of-functions": [
                "__init__",
                "__str__",
                "user_message",
                "__repr__",
                "construct_error_object",
                "__init__",
                "__init__",
                "__repr__",
                "__reduce__",
                "__init__",
                "__reduce__"
            ]
        },
        "util.py": {
            "list-of-functions": [
                "_console_log_level",
                "log_debug",
                "log_info",
                "log_warn",
                "logfmt",
                "get_object_classes",
                "convert_to_openai_object",
                "convert_to_dict",
                "merge_dicts",
                "default_api_key",
                "from_str",
                "fmt"
            ]
        },
        "wandb_logger.py": {
            "list-of-functions": [
                "sync",
                "_log_fine_tune",
                "_ensure_logged_in",
                "_get_wandb_run",
                "_get_wandb_artifact",
                "_get_config",
                "_log_artifacts",
                "_log_artifact_inputs",
                "_make_table"
            ]
        },
        "validators.py": {
            "list-of-functions": [
                "num_examples_validator",
                "necessary_column_validator",
                "additional_column_validator",
                "non_empty_field_validator",
                "duplicated_rows_validator",
                "long_examples_validator",
                "common_prompt_suffix_validator",
                "common_prompt_prefix_validator",
                "common_completion_prefix_validator",
                "common_completion_suffix_validator",
                "completions_space_start_validator",
                "lower_case_validator",
                "read_any_format",
                "format_inferrer_validator",
                "apply_necessary_remediation",
                "accept_suggestion",
                "apply_optional_remediation",
                "estimate_fine_tuning_time",
                "get_outfnames",
                "get_classification_hyperparams",
                "write_out_file",
                "infer_task_type",
                "get_common_xfix",
                "get_validators",
                "apply_validators",
                "lower_case_column",
                "add_suffix",
                "remove_common_prefix",
                "remove_common_prefix",
                "optional_fn",
                "add_suffix",
                "add_space_start",
                "lower_case",
                "format_time",
                "necessary_fn",
                "necessary_fn",
                "optional_fn",
                "get_long_indexes",
                "optional_fn",
                "optional_fn",
                "lower_case_column_creator",
                "optional_fn",
                "optional_fn"
            ]
        },
        "upload_progress.py": {
            "list-of-functions": [
                "progress",
                "MB",
                "__init__",
                "__str__",
                "__init__",
                "__len__",
                "read",
                "incr"
            ]
        },
        "object_classes.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "_openai_scripts.py": {
            "list-of-functions": [
                "main",
                "help"
            ]
        },
        "api_requestor.py": {
            "list-of-functions": [
                "_build_api_url",
                "_requests_proxies_arg",
                "_aiohttp_proxies_arg",
                "_make_session",
                "parse_stream_helper",
                "parse_stream",
                "__init__",
                "format_app_info",
                "_check_polling_response",
                "_poll",
                "request",
                "request",
                "request",
                "request",
                "request",
                "handle_error_response",
                "request_headers",
                "_validate_headers",
                "_prepare_request_raw",
                "request_raw",
                "_interpret_response",
                "_interpret_response_line"
            ]
        },
        "cli.py": {
            "list-of-functions": [
                "organization_info",
                "display",
                "display_error",
                "tools_register",
                "api_register",
                "wandb_register",
                "get",
                "update",
                "generate",
                "list",
                "create",
                "create",
                "get",
                "delete",
                "list",
                "create",
                "get",
                "delete",
                "list",
                "create",
                "get",
                "delete",
                "list",
                "create",
                "create_variation",
                "create_edit",
                "transcribe",
                "translate",
                "list",
                "_is_url",
                "_download_file_from_public_url",
                "_maybe_upload_file",
                "_get_or_upload",
                "create",
                "get",
                "results",
                "events",
                "follow",
                "_stream_events",
                "cancel",
                "delete",
                "prepare_data",
                "sync",
                "help",
                "help",
                "help",
                "signal_handler"
            ]
        },
        "embeddings_utils.py": {
            "list-of-functions": [
                "get_embedding",
                "get_embeddings",
                "cosine_similarity",
                "plot_multiclass_precision_recall",
                "distances_from_embeddings",
                "indices_of_nearest_neighbors_from_distances",
                "pca_components_from_embeddings",
                "tsne_components_from_embeddings",
                "chart_from_components",
                "chart_from_components_3D"
            ]
        },
        "openai_object.py": {
            "list-of-functions": [
                "__init__",
                "response_ms",
                "__setattr__",
                "__getattr__",
                "__delattr__",
                "__setitem__",
                "__delitem__",
                "__setstate__",
                "__reduce__",
                "construct_from",
                "refresh_from",
                "api_base",
                "request",
                "__repr__",
                "__str__",
                "to_dict",
                "to_dict_recursive",
                "openai_id",
                "typed_api_type",
                "__copy__",
                "__deepcopy__"
            ]
        },
        "openai_response.py": {
            "list-of-functions": [
                "__init__",
                "request_id",
                "retry_after",
                "operation_location",
                "organization",
                "response_ms"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/datalib/": {
        "pandas_helper.py": {
            "list-of-functions": [
                "assert_has_pandas"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "common.py": {
            "list-of-functions": []
        },
        "numpy_helper.py": {
            "list-of-functions": [
                "assert_has_numpy"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/tests/": {
        "test_file_cli.py": {
            "list-of-functions": [
                "test_file_cli"
            ]
        },
        "test_endpoints.py": {
            "list-of-functions": [
                "test_file_upload",
                "test_chat_completions",
                "test_chat_completions_multiple",
                "test_chat_completions_streaming",
                "test_completions",
                "test_completions_multiple_prompts",
                "test_completions_model",
                "test_timeout_raises_error",
                "test_timeout_does_not_error",
                "test_user_session",
                "test_user_session_factory",
                "factory"
            ]
        },
        "test_exceptions.py": {
            "list-of-functions": [
                "test_exceptions_are_pickleable"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "test_util.py": {
            "list-of-functions": [
                "api_key_file",
                "test_openai_api_key_path",
                "test_openai_api_key_path_with_malformed_key",
                "test_key_order_openai_object_rendering"
            ]
        },
        "test_url_composition.py": {
            "list-of-functions": [
                "test_completions_url_composition_azure",
                "test_completions_url_composition_azure_ad",
                "test_completions_url_composition_default",
                "test_completions_url_composition_open_ai",
                "test_completions_url_composition_invalid_type",
                "test_completions_url_composition_instance_url_azure",
                "test_completions_url_composition_instance_url_azure_ad",
                "test_completions_url_composition_instance_url_azure_no_version",
                "test_completions_url_composition_instance_url_default",
                "test_completions_url_composition_instance_url_open_ai",
                "test_completions_url_composition_instance_url_invalid",
                "test_completions_url_composition_instance_url_timeout_azure",
                "test_completions_url_composition_instance_url_timeout_openai",
                "test_engine_search_url_composition_azure",
                "test_engine_search_url_composition_azure_ad",
                "test_engine_search_url_composition_azure_no_version",
                "test_engine_search_url_composition_azure_no_operation",
                "test_engine_search_url_composition_default",
                "test_engine_search_url_composition_open_ai",
                "test_engine_search_url_composition_invalid_type",
                "test_engine_search_url_composition_invalid_search"
            ]
        },
        "test_long_examples_validator.py": {
            "list-of-functions": [
                "test_long_examples_validator"
            ]
        },
        "test_api_requestor.py": {
            "list-of-functions": [
                "test_requestor_sets_request_id",
                "test_requestor_open_ai_headers",
                "test_requestor_azure_headers",
                "test_requestor_azure_ad_headers",
                "test_requestor_cycle_sessions",
                "fake_request"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/tests/asyncio/": {
        "test_endpoints.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/api_resources/": {
        "chat_completion.py": {
            "list-of-functions": [
                "create"
            ]
        },
        "deployment.py": {
            "list-of-functions": [
                "_check_create",
                "create",
                "acreate",
                "_check_list",
                "list",
                "alist",
                "_check_delete",
                "delete",
                "adelete",
                "_check_retrieve",
                "retrieve",
                "aretrieve"
            ]
        },
        "error_object.py": {
            "list-of-functions": [
                "refresh_from"
            ]
        },
        "completion.py": {
            "list-of-functions": [
                "create"
            ]
        },
        "fine_tune.py": {
            "list-of-functions": [
                "_prepare_cancel",
                "cancel",
                "acancel",
                "_prepare_stream_events",
                "stream_events"
            ]
        },
        "embedding.py": {
            "list-of-functions": [
                "create"
            ]
        },
        "moderation.py": {
            "list-of-functions": [
                "get_url",
                "_prepare_create",
                "create",
                "acreate"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "edit.py": {
            "list-of-functions": [
                "create"
            ]
        },
        "model.py": {
            "list-of-functions": []
        },
        "file.py": {
            "list-of-functions": [
                "__prepare_file_create",
                "create",
                "__prepare_file_download",
                "download",
                "__find_matching_files",
                "find_matching_files"
            ]
        },
        "engine.py": {
            "list-of-functions": [
                "generate",
                "embeddings"
            ]
        },
        "audio.py": {
            "list-of-functions": [
                "_get_url",
                "_prepare_request",
                "transcribe",
                "translate",
                "transcribe_raw",
                "translate_raw"
            ]
        },
        "customer.py": {
            "list-of-functions": [
                "get_url",
                "create",
                "acreate"
            ]
        },
        "image.py": {
            "list-of-functions": [
                "_get_url",
                "create",
                "_prepare_create_variation",
                "create_variation",
                "_prepare_create_edit",
                "create_edit"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/api_resources/abstract/": {
        "createable_api_resource.py": {
            "list-of-functions": [
                "__prepare_create_requestor",
                "create"
            ]
        },
        "listable_api_resource.py": {
            "list-of-functions": [
                "auto_paging_iter",
                "__prepare_list_requestor",
                "list"
            ]
        },
        "__init__.py": {
            "list-of-functions": []
        },
        "updateable_api_resource.py": {
            "list-of-functions": [
                "modify",
                "amodify"
            ]
        },
        "nested_resource_class_methods.py": {
            "list-of-functions": [
                "_nested_resource_class_methods",
                "nested_resource_class_methods",
                "anested_resource_class_methods",
                "wrapper",
                "nested_resource_url",
                "nested_resource_request",
                "create_nested_resource",
                "retrieve_nested_resource",
                "modify_nested_resource",
                "delete_nested_resource",
                "list_nested_resources"
            ]
        },
        "api_resource.py": {
            "list-of-functions": [
                "retrieve",
                "aretrieve",
                "refresh",
                "class_url",
                "instance_url",
                "_static_request",
                "_get_api_type_and_version"
            ]
        },
        "deletable_api_resource.py": {
            "list-of-functions": [
                "__prepare_delete",
                "delete",
                "adelete"
            ]
        },
        "engine_api_resource.py": {
            "list-of-functions": [
                "__init__",
                "class_url",
                "__prepare_create_request",
                "create",
                "instance_url",
                "wait"
            ]
        }
    },
    "/Users/km1/2code/python-projects/Coding_ChatBot_Assistant/.venv/lib/python3.11/site-packages/openai/api_resources/experimental/": {
        "completion_config.py": {
            "list-of-functions": []
        },
        "__init__.py": {
            "list-of-functions": []
        }
    }
}